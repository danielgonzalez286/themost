{"version":3,"sources":["app/controllers/order-controller.es6"],"names":["Q","_","HttpDataController","httpAction","httpGet","httpController","url","LangUtils","OrderController","context","result","hasOwnProperty","urlObject","parse","request","$skip","parseInt","query","$top","total","$count","search","format","assign","skip","nextLink","getNextLink","prevLink","getPrevLink","value","nbind","id","model","where","equal","getItem"],"mappings":";;;;;;;;;;;sEAAA;;;;;;;;;;AAQA;;IAAOA,C;;AACP;;IAAOC,C;;AACP;;IAAOC,kB;;AACP;;IAAQC,U,eAAAA,U;IAAYC,O,eAAAA,O;IAASC,c,eAAAA,c;;AAC7B;;IAAOC,G;;AACP;;IAAQC,S,UAAAA,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGaC,e,WADpBH,gB,UAkDID,S,UACAD,WAAW,OAAX,C,UAKAC,S,UACAD,WAAW,MAAX,C;;;AAtDD,6BAAYM,OAAZ,EAAqB;AAAA;;AAAA,iIACXA,OADW;AAEpB;;;;oCAEWC,M,EAAQ;AAChB,gBAAIA,OAAOC,cAAP,CAAsB,OAAtB,CAAJ,EAAoC;AAChC,oBAAMC,YAAYN,IAAIO,KAAJ,CAAU,KAAKJ,OAAL,CAAaK,OAAb,CAAqBR,GAA/B,EAAoC,IAApC,CAAlB;AACA;AACA,oBAAMS,QAAQR,UAAUS,QAAV,CAAmBJ,UAAUK,KAAV,CAAgBF,KAAnC,CAAd;AACA,oBAAMG,OAAOX,UAAUS,QAAV,CAAmBJ,UAAUK,KAAV,CAAgBC,IAAnC,KAA4C,EAAzD;AACA,oBAAIR,OAAOS,KAAP,IAAcJ,QAAMG,IAAxB,EAA8B;AAC1BN,8BAAUK,KAAV,CAAgBF,KAAhB,GAAwBA,QAAMG,IAA9B;AACAN,8BAAUK,KAAV,CAAgBC,IAAhB,GAAuBA,IAAvB;AACAN,8BAAUK,KAAV,CAAgBG,MAAhB,GAAyB,IAAzB;AACA,2BAAOR,UAAUS,MAAjB;AACA,2BAAOf,IAAIgB,MAAJ,CAAWV,SAAX,CAAP;AACH;AACJ;AACJ;;;oCAEWF,M,EAAQ;AAChB,gBAAIA,OAAOC,cAAP,CAAsB,OAAtB,CAAJ,EAAoC;AAChC,oBAAMC,YAAYN,IAAIO,KAAJ,CAAU,KAAKJ,OAAL,CAAaK,OAAb,CAAqBR,GAA/B,EAAoC,IAApC,CAAlB;AACA;AACA,oBAAMS,QAAQR,UAAUS,QAAV,CAAmBJ,UAAUK,KAAV,CAAgBF,KAAnC,CAAd;AACA,oBAAMG,OAAOX,UAAUS,QAAV,CAAmBJ,UAAUK,KAAV,CAAgBC,IAAnC,KAA4C,EAAzD;AACA,oBAAIH,QAAMG,IAAN,IAAY,CAAhB,EAAmB;AACfN,8BAAUK,KAAV,CAAgBF,KAAhB,GAAwBA,QAAMG,IAA9B;AACAN,8BAAUK,KAAV,CAAgBC,IAAhB,GAAuBA,IAAvB;AACAN,8BAAUK,KAAV,CAAgBG,MAAhB,GAAyB,IAAzB;AACA,2BAAOR,UAAUS,MAAjB;AACA,2BAAOf,IAAIgB,MAAJ,CAAWV,SAAX,CAAP;AACH;AACJ;AACJ;;;kCAESF,M,EAAQ;AACdT,cAAEsB,MAAF,CAAS;AACLJ,uBAAMT,OAAOS,KADR;AAELK,sBAAKd,OAAOc,IAFP;AAGLC,0BAAS,KAAKC,WAAL,CAAiBhB,MAAjB,CAHJ;AAILiB,0BAAS,KAAKC,WAAL,CAAiBlB,MAAjB;AAJJ,aAAT,EAKG;AACCmB,uBAAMnB,OAAOmB;AADd,aALH;AAQH;;;mCAIU;AACP,mBAAO7B,EAAE8B,KAAF,+GAAqB,IAArB,GAAP;AACH;;;gCAIOC,E,EAAI;AACR,mBAAO,KAAKC,KAAL,CAAWC,KAAX,CAAiB,IAAjB,EAAuBC,KAAvB,CAA6BH,EAA7B,EAAiCI,OAAjC,EAAP;AACH;;;;EA3DwCjC,kB;kBAAxBM,e","file":"order-controller.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2017, THEMOST LP All rights reserved\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\nimport Q from 'q';\nimport _ from 'lodash';\nimport HttpDataController from '../../../modules/@themost/web/controllers/data';\nimport {httpAction, httpGet, httpController} from '../../../modules/@themost/web/decorators';\nimport url from 'url';\nimport {LangUtils} from '../../../modules/@themost/common/utils';\n\n@httpController()\nexport default class OrderController extends HttpDataController {\n\n    constructor(context) {\n        super(context);\n    }\n\n    getNextLink(result) {\n        if (result.hasOwnProperty(\"total\")) {\n            const urlObject = url.parse(this.context.request.url, true);\n            //get next link\n            const $skip = LangUtils.parseInt(urlObject.query.$skip);\n            const $top = LangUtils.parseInt(urlObject.query.$top) || 25;\n            if (result.total>=$skip+$top) {\n                urlObject.query.$skip = $skip+$top;\n                urlObject.query.$top = $top;\n                urlObject.query.$count = true;\n                delete urlObject.search;\n                return url.format(urlObject);\n            }\n        }\n    }\n\n    getPrevLink(result) {\n        if (result.hasOwnProperty(\"total\")) {\n            const urlObject = url.parse(this.context.request.url, true);\n            //get next link\n            const $skip = LangUtils.parseInt(urlObject.query.$skip);\n            const $top = LangUtils.parseInt(urlObject.query.$top) || 25;\n            if ($skip-$top>=0) {\n                urlObject.query.$skip = $skip-$top;\n                urlObject.query.$top = $top;\n                urlObject.query.$count = true;\n                delete urlObject.search;\n                return url.format(urlObject);\n            }\n        }\n    }\n\n    mapResult(result) {\n        _.assign({\n            total:result.total,\n            skip:result.skip,\n            nextLink:this.getNextLink(result),\n            prevLink:this.getPrevLink(result)\n        }, {\n            value:result.value\n        });\n    }\n\n    @httpGet()\n    @httpAction('index')\n    getItems() {\n        return Q.nbind(super.index, this)();\n    }\n\n    @httpGet()\n    @httpAction('edit')\n    getEdit(id) {\n        return this.model.where('id').equal(id).getItem();\n    }\n\n}"]}