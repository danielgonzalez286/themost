{"version":3,"sources":["data-objects.es6"],"names":["path","assert","DataConfiguration","DefaultDataContext","DataObject","PersonModel","TraceUtils","TestDataContext","configuration","getConfiguration","describe","context","before","done","config","resolve","process","cwd","after","finalize","it","model","where","equal","silent","getTypedItem","then","person","isTrue","catch","err","getPendingOrders","getItems","result","log","JSON","stringify","forEach","x","orderStatus","alternateName","only","jobTitle","save","user"],"mappings":"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","file":"data-objects.js","sourcesContent":["import 'source-map-support/register';\nimport path from 'path';\nimport {assert} from 'chai';\nimport {DataConfiguration} from \"../../modules/@themost/data/data-configuration\";\nimport {DefaultDataContext} from \"../../modules/@themost/data/data-context\";\nimport {DataObject} from \"../../modules/@themost/data/data-object\";\nimport PersonModel from '../app/models/person-model';\nimport {TraceUtils} from \"../../modules/@themost/common/utils\";\n/**\n * @augments DataContext\n * @extends DefaultDataContext\n */\nclass TestDataContext extends DefaultDataContext {\n\n    /**\n     * @param {DataConfiguration=} configuration\n     */\n    constructor(configuration) {\n        super();\n        this.getConfiguration = ()=> configuration;\n    }\n}\n\ndescribe('data object test', function() {\n\n    /**\n     * @type TestDataContext\n     */\n    let context;\n\n    before(function(done) {\n        const config = new DataConfiguration(path.resolve(process.cwd(), \"./test/app/config\"));\n        context = new TestDataContext(config);\n        return done();\n    });\n\n    after((done)=> {\n        if (context) {\n            return context.finalize(()=>{\n               return done();\n            });\n        }\n        return done();\n    });\n\n    it('should get typed data object', (done)=> {\n        context.model('Person').where('email').equal('crystal.wright@example.com')\n            .silent().getTypedItem().then((person)=> {\n            assert.isTrue(person instanceof PersonModel,'Expected PersonModel instance');\n            return done();\n        }).catch((err)=> {\n            return done(err);\n        });\n    });\n\n    it('should call typed data object method', (done)=> {\n        context.model('Person').where('email').equal('crystal.wright@example.com')\n            .silent().getTypedItem().then((person)=> {\n            return person.getPendingOrders().getItems().then((result)=> {\n                TraceUtils.log(JSON.stringify(result,null,4));\n                result.forEach((x)=> {\n                   assert.equal(x.orderStatus.alternateName,'OrderProcessing','Invalid query.');\n                });\n                return done();\n            });\n        }).catch((err)=> {\n            return done(err);\n        });\n    });\n\n    it.only('should save typed data object', (done)=> {\n\n        context.model('Person').where('email').equal('crystal.wright@example.com')\n            .silent().getTypedItem().then((person)=> {\n            TraceUtils.log(JSON.stringify(person,null,4));\n            person.jobTitle = \"General Engineer\";\n            return person.silent().save().then(()=> {\n                return done();\n            });\n        }).catch((err)=> {\n            return done(err);\n        });\n    });\n\n    it('should get data object', (done)=> {\n        context.model('User').where('name').equal('crystal.wright@example.com')\n            .silent().getTypedItem().then((user)=> {\n            assert.isTrue(user instanceof DataObject,'Expected DataObject instance');\n            return done();\n        }).catch((err)=> {\n            return done(err);\n        });\n    });\n\n});"]}