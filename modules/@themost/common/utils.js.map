{"version":3,"sources":["utils.es6"],"names":["UUID_CHARS","HEX_CHARS","STRIP_COMMENTS","DateTimeRegex","BooleanTrueRegex","BooleanFalseRegex","NullRegex","UndefinedRegex","IntegerRegex","FloatRegex","logger","Logger","level","process","NODE_ENV","transports","Console","timestamp","Date","toUTCString","formatter","options","toUpperCase","message","meta","Object","keys","length","JSON","stringify","NumberUtils","s","num","test","Error","a","charCodeAt","i","x","parseInt","out","String","fromCharCode","Math","floor","TextUtils","value","md5","createHash","update","digest","sha1","sha256","uuid","r","n","random","substring","join","TraceUtils","data","args","Array","prototype","slice","call","arguments","error","apply","info","stack","warn","debug","RandomUtils","chars","str","substr","randomInt","min","max","LangUtils","fn","isFunction","fnStr","toString","replace","result","indexOf","match","parseFloat","parse","origin","expr","convertValues","exec","name","descriptor","expr1","isArray","index","extend","UnknownPropertyDescriptor","re","typedValue","convert","push","form","forEach","key","hasOwnProperty","any","obj","defineProperty","configurable","enumerable","get","set"],"mappings":"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","file":"utils.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\n'use strict';\nimport crypto from 'crypto';\nimport winston from 'winston';\nimport {_} from 'lodash';\n\nconst UUID_CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\nconst HEX_CHARS = 'abcdef1234567890';\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\n\nconst DateTimeRegex = /^(\\d{4})(?:-?W(\\d+)(?:-?(\\d+)D?)?|(?:-(\\d+))?-(\\d+))(?:[T ](\\d+):(\\d+)(?::(\\d+)(?:\\.(\\d+))?)?)?(?:Z(-?\\d*))?$/g;\nconst BooleanTrueRegex = /^true$/ig;\nconst BooleanFalseRegex = /^false$/ig;\nconst NullRegex = /^null$/ig;\nconst UndefinedRegex = /^undefined$/ig;\nconst IntegerRegex =/^[-+]?\\d+$/g;\nconst FloatRegex =/^[+-]?\\d+(\\.\\d+)?$/g;\n\n\nconst logger = new winston.Logger({\n    level: (process.NODE_ENV === 'development') ? 'debug' : 'info',\n    transports: [\n        new (winston.transports.Console)({\n            timestamp: function() {\n                return (new Date()).toUTCString()\n            },\n            formatter: function(options) {\n                return '[' + options.timestamp() +'] ['+ options.level.toUpperCase() +'] '+ (options.message ? options.message : '') +\n                    (options.meta && Object.keys(options.meta).length ? '\\n\\t'+ JSON.stringify(options.meta, null, 4) : '' );\n            }\n        })\n    ]\n});\n\n/**\n * @class\n */\nexport class NumberUtils {\n    //noinspection JSUnusedGlobalSymbols\n    /**\n     * Converts a base-26 formatted string to the equivalent integer\n     * @static\n     * @param {string} s A base-26 formatted string e.g. aaaaaaaa for 0, baaaaaaa for 1 etc\n     * @return {number} The equivalent integer value\n     */\n    static fromBase26(s) {\n        let num = 0;\n        if (!/[a-z]{8}/.test(s)) {\n            throw new Error('Invalid base-26 format.');\n        }\n        const a = 'a'.charCodeAt(0);\n        for (let i = 7; i >=0; i--) {\n            num = (num * 26) + (s[i].charCodeAt(0) - a);\n        }\n        return num;\n    }\n\n    //noinspection JSUnusedGlobalSymbols\n    /**\n     * Converts an integer to the equivalent base-26 formatted string\n     * @static\n     * @param {number} x The integer to be converted\n     * @return {string} The equivalent string value\n     */\n    static toBase26(x) {\n        //noinspection ES6ConvertVarToLetConst\n        let num = parseInt(x);\n        if (num<0) {\n            throw new Error('A non-positive integer cannot be converted to base-26 format.');\n        }\n        if (num>208827064575) {\n            throw new Error('A positive integer bigger than 208827064575 cannot be converted to base-26 format.');\n        }\n        let out = \"\";\n        let length= 1;\n        const a = 'a'.charCodeAt(0);\n        while(length<=8)\n        {\n            out += String.fromCharCode(a + (num % 26));\n            num = Math.floor(num / 26);\n            length += 1;\n        }\n        return out;\n    }\n\n\n}\n\n/**\n * @class\n */\nexport class TextUtils {\n    /**\n     * Converts the given parameter to MD5 hex string\n     * @static\n     * @param {*} value\n     * @returns {string|undefined}\n     */\n    static toMD5(value) {\n        if (typeof value === 'undefined' || value == null) {\n            return;\n        }\n        const md5 = crypto.createHash('md5');\n        if (typeof value === 'string') {\n            md5.update(value);\n        }\n        else if (value instanceof Date) {\n            md5.update(value.toUTCString());\n        }\n        else {\n            md5.update(JSON.stringify(value));\n        }\n        return md5.digest('hex');\n    }\n\n    /**\n     * Converts the given parameter to SHA1 hex string\n     * @static\n     * @param {*} value\n     * @returns {string|undefined}\n     */\n    static toSHA1(value) {\n        if (typeof value === 'undefined' || value == null) {\n            return;\n        }\n        const sha1 = crypto.createHash('sha1');\n        if (typeof value === 'string') {\n            sha1.update(value);\n        }\n        else if (value instanceof Date) {\n            sha1.update(value.toUTCString());\n        }\n        else {\n            sha1.update(JSON.stringify(value));\n        }\n        return sha1.digest('hex');\n    }\n\n    /**\n     * Converts the given parameter to SHA256 hex string\n     * @static\n     * @param {*} value\n     * @returns {string|undefined}\n     */\n    static toSHA256(value) {\n        if (typeof value === 'undefined' || value == null) {\n            return;\n        }\n        const sha256 = crypto.createHash('sha256');\n        if (typeof value === 'string') {\n            sha256.update(value);\n        }\n        else if (value instanceof Date) {\n            sha256.update(value.toUTCString());\n        }\n        else {\n            sha256.update(JSON.stringify(value));\n        }\n        return sha256.digest('hex');\n    }\n\n    /**\n     * Returns a random GUID/UUID string\n     * @static\n     * @returns {string}\n     */\n    static newUUID() {\n        const uuid = [];\n        let i;\n        // rfc4122, version 4 form\n        let r, n;\n        // rfc4122 requires these characters\n        uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n        uuid[14] = '4';\n\n        // Fill in random data.  At i==19 set the high bits of clock sequence as\n        // per rfc4122, sec. 4.1.5\n        for (i = 0; i < 36; i++) {\n            if (!uuid[i]) {\n                r = 0 | Math.random()*16;\n                n = (i == 19) ? (r & 0x3) | 0x8 : r;\n                uuid[i] = UUID_CHARS.substring(n,1);\n            }\n        }\n        return uuid.join('');\n    }\n\n\n\n\n\n}\n\n/**\n * @class\n * @constructor\n */\nexport class TraceUtils {\n    /**\n     * @static\n     * @param {...*} data\n     */\n    static log(data) {\n        const args = Array.prototype.slice.call(arguments);\n        if (args.length==0) { return; }\n        if (data instanceof Error) {\n            return TraceUtils.error.apply(this, args);\n        }\n        return logger.info.apply(logger, args);\n    }\n\n    /**\n     * @static\n     * @param {...*} data\n     */\n    static error(data) {\n        const args = Array.prototype.slice.call(arguments);\n        if (args.length==0) { return; }\n        if (data instanceof Error) {\n            if (data.stack) {\n                return logger.error(data.stack);\n            }\n            else {\n                return logger.error.apply(logger, args);\n            }\n        }\n        return logger.error.apply(logger, args);\n    }\n\n    /**\n     *\n     * @static\n     * @param {...*} data\n     */\n    static info(data) {\n        const args = Array.prototype.slice.call(arguments);\n        if (args.length==0) { return; }\n        return logger.info.apply(logger, args);\n    }\n\n    /**\n     *\n     * @static\n     * @param {*} data\n     */\n    static warn(data) {\n        const args = Array.prototype.slice.call(arguments);\n        if (args.length==0) { return; }\n        return logger.warn.apply(logger, args);\n    }\n\n    /**\n     *\n     * @static\n     * @param {...*} data\n     */\n    static debug(data) {\n        const args = Array.prototype.slice.call(arguments);\n        if (args.length==0) { return; }\n        return logger.debug.apply(logger, args);\n    }\n}\n/**\n * @class\n */\nexport class RandomUtils {\n    /**\n     * Returns a random string based on the length specified\n     * @param {Number} length\n     */\n    static randomChars(length) {\n        length = length || 8;\n        const chars = \"abcdefghkmnopqursuvwxz2456789ABCDEFHJKLMNPQURSTUVWXYZ\";\n        let str = \"\";\n        for(let i = 0; i < length; i++) {\n            str += chars.substr(this.randomInt(0, chars.length-1),1);\n        }\n        return str;\n    }\n\n    /**\n     * Returns a random integer between a minimum and a maximum value\n     * @param {number} min\n     * @param {number} max\n     */\n    static randomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    /**\n     * Returns a random string based on the length specified\n     * @static\n     * @param {number} length\n     * @returns {string}\n     */\n    static randomHex(length) {\n        length = (length || 8)*2;\n        let str = \"\";\n        for(let i = 0; i < length; i++) {\n            str += HEX_CHARS.substr(this.randomInt(0, HEX_CHARS.length-1),1);\n        }\n        return str;\n    }\n}\n\n/**\n * @class\n */\nexport class LangUtils {\n    /**\n     * Returns an array of strings which represents the arguments' names of the given function\n     * @param {Function} fn\n     * @returns {Array}\n     */\n    static getFunctionParams(fn) {\n        if (!_.isFunction(fn))\n            return [];\n        const fnStr = fn.toString().replace(STRIP_COMMENTS, '');\n        let result = fnStr.slice(fnStr.indexOf('(')+1, fnStr.indexOf(')')).match(/([^\\s,]+)/g);\n        if(result === null)\n            result = [];\n        return result;\n    }\n    /**\n     * @param {string} value\n     */\n    static convert(value) {\n        let result;\n        if ((typeof value === 'string'))\n        {\n            if (value.length==0) {\n                result = value\n            }\n            if (value.match(BooleanTrueRegex)) {\n                result = true;\n            }\n            else if (value.match(BooleanFalseRegex)) {\n                result = false;\n            }\n            else if (value.match(NullRegex) || value.match(UndefinedRegex)) {\n                result = null;\n            }\n            else if (value.match(IntegerRegex)) {\n                result = parseInt(value);\n            }\n            else if (value.match(FloatRegex)) {\n                result = parseFloat(value);\n            }\n            else if (value.match(DateTimeRegex)) {\n                result = new Date(Date.parse(value));\n            }\n            else {\n                result = value;\n            }\n        }\n        else {\n            result = value;\n        }\n        return result;\n    }\n\n    /**\n     *\n     * @param {*} origin\n     * @param {string} expr\n     * @param {string} value\n     * @param {*=} options\n     * @returns {*}\n     */\n    static extend(origin, expr, value, options) {\n\n        options = options || { convertValues:false };\n        //find base notation\n        let match = /(^\\w+)\\[/.exec(expr), name, descriptor, expr1;\n        if (match) {\n            //get property name\n            name = match[1];\n            //validate array property\n            if (/^\\d+$/g.test(name)) {\n                //property is an array\n                if (!_.isArray(origin.value))\n                    origin.value = [];\n                // get new expression\n                expr1 = expr.substr(match.index + match[1].length);\n                LangUtils.extend(origin, expr1, value);\n            }\n            else {\n                //set property value (unknown)\n                origin[name] = origin[name] || new LangUtils();\n                descriptor = new UnknownPropertyDescriptor(origin, name);\n                // get new expression\n                expr1 = expr.substr(match.index + match[1].length);\n                LangUtils.extend(descriptor, expr1, value);\n            }\n        }\n        else if (expr.indexOf('[')==0) {\n            //get property\n            const re = /\\[(.*?)\\]/g;\n            match = re.exec(expr);\n            if (match) {\n                name = match[1];\n                // get new expression\n                expr1 = expr.substr(match.index + match[0].length);\n                if (/^\\d+$/g.test(name)) {\n                    //property is an array\n                    if (!_.isArray(origin.value))\n                        origin.value = [];\n                }\n                if (expr1.length==0) {\n                    if (origin.value instanceof LangUtils) {\n                        origin.value = {};\n                    }\n                    let typedValue;\n                    //convert string value\n                    if ((typeof value === 'string') && options.convertValues) {\n                        typedValue = LangUtils.convert(value);\n                    }\n                    else {\n                        typedValue = value;\n                    }\n                    if (_.isArray(origin.value))\n                        origin.value.push(typedValue);\n                    else\n                        origin.value[name] = typedValue;\n                }\n                else {\n                    if (origin.value instanceof LangUtils) {\n                        origin.value = { };\n                    }\n                    origin.value[name] = origin.value[name] || new LangUtils();\n                    descriptor = new UnknownPropertyDescriptor(origin.value, name);\n                    LangUtils.extend(descriptor, expr1, value);\n                }\n            }\n            else {\n                throw new Error('Invalid object property notation. Expected [name]');\n            }\n        }\n        else if (/^\\w+$/.test(expr)) {\n            if (options.convertValues)\n                origin[expr] = LangUtils.convert(value);\n            else\n                origin[expr] = value;\n        }\n        else {\n            throw new Error('Invalid object property notation. Expected property[name] or [name]');\n        }\n        return origin;\n    }\n\n\n    /**\n     *\n     * @param {*} form\n     * @returns {*}\n     */\n    static parseForm (form) {\n        const result = {};\n        if (typeof form === 'undefined' || form==null)\n            return result;\n        const keys = Object.keys(form);\n        keys.forEach(function(key) {\n            if (form.hasOwnProperty(key))\n            {\n                LangUtils.extend(result, key, form[key])\n            }\n        });\n        return result;\n    }\n    /**\n     * Parses any value or string and returns the resulted object.\n     * @param {*} any\n     * @returns {*}\n     */\n    static parseValue(any) {\n        return LangUtils.convert(any);\n    }\n    /**\n     * Parses any value and returns the equivalent integer.\n     * @param {*} any\n     * @returns {*}\n     */\n    static parseInt(any) {\n        return parseInt(any) || 0;\n    }\n    /**\n     * Parses any value and returns the equivalent float number.\n     * @param {*} any\n     * @returns {*}\n     */\n    static parseFloat(any) {\n        return parseFloat(any) || 0;\n    }\n    /**\n     * Parses any value and returns the equivalent boolean.\n     * @param {*} any\n     * @returns {*}\n     */\n    static parseBoolean(any) {\n        if (typeof any === 'undefined' || any == null)\n            return false;\n        else if (typeof any === 'number')\n            return any != 0;\n        else if (typeof any === 'string') {\n            if (any.match(LangUtils.IntegerRegex) || any.match(LangUtils.FloatRegex)) {\n                return parseInt(any, 10) != 0;\n            }\n            else if (any.match(LangUtils.BooleanTrueRegex))\n                return true;\n            else if (any.match(LangUtils.BooleanFalseRegex))\n                return false;\n            else if (/^yes$|^on$|^y$|^valid$/i.test(any))\n                return true;\n            else if (/^no$|^off$|^n$|^invalid$/i.test(any))\n                return false;\n            else\n                return false;\n        }\n        else if (typeof any === 'boolean')\n            return any;\n        else {\n            return (parseInt(any) || 0) != 0;\n        }\n    }\n\n}\n\nLangUtils.DateTimeRegex = /^(\\d{4})(?:-?W(\\d+)(?:-?(\\d+)D?)?|(?:-(\\d+))?-(\\d+))(?:[T ](\\d+):(\\d+)(?::(\\d+)(?:\\.(\\d+))?)?)?(?:Z(-?\\d*))?$/g;\nLangUtils.BooleanTrueRegex = /^true$/ig;\nLangUtils.BooleanFalseRegex = /^false$/ig;\nLangUtils.NullRegex = /^null$/ig;\nLangUtils.UndefinedRegex = /^undefined$/ig;\nLangUtils.IntegerRegex =/^[-+]?\\d+$/g;\nLangUtils.FloatRegex =/^[+-]?\\d+(\\.\\d+)?$/g;\n/**\n * @class\n * @constructor\n */\nfunction UnknownPropertyDescriptor(obj, name) {\n    Object.defineProperty(this, 'value', { configurable:false, enumerable:true, get: function() { return obj[name]; }, set: function(value) { obj[name]=value; } });\n    Object.defineProperty(this, 'name', { configurable:false, enumerable:true, get: function() { return name; } });\n}\n"]}