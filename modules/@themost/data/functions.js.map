{"version":3,"sources":["functions.es6"],"names":["ParserUtils","sprintf","moment","_","Q","TraceUtils","FunctionContext","context","model","target","isNil","expr","callback","re","expr1","indexOf","match","exec","expr2eval","length","replace","f","eval","value1","call","then","result","catch","err","console","log","Error","deferred","defer","process","nextTick","resolve","Date","promise","getDate","db","selectIdentity","sourceAdapter","primaryKey","reject","newGuidInternal","min","max","random","times","Math","ceil","res","substr","chars","str","i","self","user","interactiveUser","id","userModel","parser","undefinedUser","where","equal","name","silent","select","first","field","type","UUID_CHARS","split","uuid","r","join"],"mappings":"AAAA;;;;;;;;;AASA;;;;;;;;;AACA;;AACA;;IAAQA,W,UAAAA,W;;AACR;;IAAOC,O;;AACP;;IAAOC,M;;AACP;;IAAQC,C,WAAAA,C;;AACR;;IAAOC,C;;AACP;;IAAQC,U,UAAAA,U;;;;;;AAGR;;;IAGaC,e,WAAAA,e;AACT;;;;;;AAMA,6BAAYC,OAAZ,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAAA;;AAChC;;;AAGA,aAAKF,OAAL,GAAeA,OAAf;AACC;;;AAGD,aAAKC,KAAL,GAAaA,KAAb;AACA,YAAKL,EAAEO,KAAF,CAAQH,OAAR,CAAD,IAAuB,OAAOC,KAAP,KAAgB,WAAvC,IAAwD,OAAOA,KAAP,IAAgB,IAA5E,EAAmF;AAC/E;AACA,iBAAKD,OAAL,GAAeC,MAAMD,OAArB;AACH;AACD;;;AAGA,aAAKE,MAAL,GAAcA,MAAd;AACH;;;;iCAEQE,I,EAAMC,Q,EAAU;AACrBA,uBAAWA,YAAY,YAAW,CAAE,CAApC;AACA,gBAAI,OAAOD,IAAP,KAAe,QAAnB,EAA6B;AACzBC,yBAAS,IAAT;AACA;AACH;AACD,gBAAMC,KAAK,2BAAX;AACA,gBAAIC,QAAMH,IAAV;AACA,gBAAIA,KAAKI,OAAL,CAAa,KAAb,MAAsB,CAA1B,EAA6B;AACzBD,wBAAQ,QAAQA,KAAhB;AACH;AACD,gBAAME,QAAQH,GAAGI,IAAH,CAAQH,KAAR,CAAd;AACA,gBAAIE,KAAJ,EAAW;AACP,oBAAIE,kBAAJ;AACA;AACA,oBAAIF,MAAM,CAAN,EAASG,MAAT,IAAiB,CAArB,EAAwB;AACpBD,gCAAYJ,MAAMM,OAAN,CAAc,2BAAd,EAA2C,qCAA3C,CAAZ;AACH,iBAFD,MAGK;AACDF,gCAAYJ,MAAMM,OAAN,CAAc,2BAAd,EAA2C,uCAA3C,CAAZ;AACH;AACD;AACA,oBAAI;AACA,wBAAMC,IAAIC,KAAKJ,SAAL,CAAV;AACA,wBAAMK,SAASF,EAAEG,IAAF,CAAO,IAAP,CAAf;AACA,wBAAI,OAAOD,MAAP,KAAkB,WAAlB,IAAiCA,UAAS,IAA1C,IAAkD,OAAOA,OAAOE,IAAd,KAAuB,UAA7E,EAAyF;AACrFF,+BAAOE,IAAP,CAAY,UAASC,MAAT,EAAiB;AACzB,mCAAOd,SAAS,IAAT,EAAec,MAAf,CAAP;AACH,yBAFD,EAEGC,KAFH,CAES,UAASC,GAAT,EAAc;AACnBhB,qCAASgB,GAAT;AACH,yBAJD;AAKH,qBAND,MAOK;AACD,+BAAOhB,SAAS,IAAT,EAAeW,MAAf,CAAP;AACH;AACJ,iBAbD,CAcA,OAAMK,GAAN,EAAW;AACPhB,6BAASgB,GAAT;AACH;AACJ,aA3BD,MA4BK;AACDC,wBAAQC,GAAR,CAAY7B,QAAQA,OAAR,CAAgB,qBAAhB,EAAuCa,KAAvC,CAAZ;AACAF,yBAAS,IAAImB,KAAJ,CAAU,6BAAV,CAAT;AACH;AACJ;;AAED;;;;;;8BAGM;AACF,gBAAMC,WAAW5B,EAAE6B,KAAF,EAAjB;AACAC,oBAAQC,QAAR,CAAiB,YAAW;AACxBH,yBAASI,OAAT,CAAiB,IAAIC,IAAJ,EAAjB;AACH,aAFD;AAGA,mBAAOL,SAASM,OAAhB;AACH;;AAED;;;;;;gCAGQ;AACJ,gBAAMN,WAAW5B,EAAE6B,KAAF,EAAjB;AACAC,oBAAQC,QAAR,CAAiB,YAAW;AACxBH,yBAASI,OAAT,CAAkB,IAAIC,IAAJ,EAAD,CAAaE,OAAb,EAAjB;AACH,aAFD;AAGA,mBAAOP,SAASM,OAAhB;AACH;;AAED;;;;;;gCAGQ;AACJ,gBAAMN,WAAW5B,EAAE6B,KAAF,EAAjB;AACA,iBAAKzB,KAAL,CAAWD,OAAX,CAAmBiC,EAAnB,CAAsBC,cAAtB,CAAqC,KAAKjC,KAAL,CAAWkC,aAAhD,EAA+D,KAAKlC,KAAL,CAAWmC,UAA1E,EAAsF,UAASf,GAAT,EAAcF,MAAd,EAAsB;AACxG,oBAAIE,GAAJ,EAAS;AACL,2BAAOI,SAASY,MAAT,CAAgBhB,GAAhB,CAAP;AACH;AACDI,yBAASI,OAAT,CAAiBV,MAAjB;AACH,aALD;AAMA,mBAAOM,SAASM,OAAhB;AACH;;AAED;;;;;;kCAGU;AACN,gBAAMN,WAAW5B,EAAE6B,KAAF,EAAjB;AACAC,oBAAQC,QAAR,CAAiB,YAAW;AACxB,oBAAI;AACAH,6BAASI,OAAT,CAAiBS,iBAAjB;AACH,iBAFD,CAGA,OAAMjB,GAAN,EAAW;AACPI,6BAASY,MAAT,CAAgBhB,GAAhB;AACH;AACJ,aAPD;AAQA,mBAAOI,SAASM,OAAhB;AACH;;AAED;;;;;;;;;4BAMIQ,G,EAAKC,G,EAAK;AACV,gBAAMf,WAAW5B,EAAE6B,KAAF,EAAjB;AACAC,oBAAQC,QAAR,CAAiB,YAAW;AACxB,oBAAI;AACA,2BAAOH,SAASI,OAAT,CAAiBjC,EAAE6C,MAAF,CAASF,GAAT,EAAcC,GAAd,CAAjB,CAAP;AACH,iBAFD,CAGA,OAAOnB,GAAP,EAAY;AACRI,6BAASY,MAAT,CAAgBhB,GAAhB;AACH;AACDI,yBAASI,OAAT,CAAkB,IAAIC,IAAJ,EAAD,CAAaE,OAAb,EAAjB;AACH,aARD;AASA,mBAAOP,SAASM,OAAhB;AACH;;AAED;;;;;;;;gCAKQnB,M,EAAQ;AACZ,gBAAMa,WAAW5B,EAAE6B,KAAF,EAAjB;AACAC,oBAAQC,QAAR,CAAiB,YAAW;AACxB,oBAAI;AACAhB,6BAASA,UAAU,CAAnB;AACA,wBAAIA,SAAO,CAAX,EAAc;AACV,+BAAOa,SAASY,MAAT,CAAgB,IAAIb,KAAJ,CAAU,mDAAV,CAAhB,CAAP;AACH;AACD,wBAAIZ,SAAO,GAAX,EAAgB;AACZ,+BAAOa,SAASY,MAAT,CAAgB,IAAIb,KAAJ,CAAU,+DAAV,CAAhB,CAAP;AACH;AACD,wBAAMkB,QAAQC,KAAKC,IAAL,CAAUhC,SAAS,EAAnB,CAAd;AACA,wBAAIiC,MAAM,EAAV;AACAjD,sBAAE8C,KAAF,CAAQA,KAAR,EAAe,YAAW;AACrBG,+BAAOjD,EAAE6C,MAAF,CAAS,UAAT,EAAqB,UAArB,CAAP;AACJ,qBAFD;AAGA,2BAAOhB,SAASI,OAAT,CAAiBgB,IAAIC,MAAJ,CAAW,CAAX,EAAalC,MAAb,CAAjB,CAAP;AACH,iBAdD,CAeA,OAAOS,GAAP,EAAY;AACRI,6BAASY,MAAT,CAAgBhB,GAAhB;AACH;AACJ,aAnBD;AAoBA,mBAAOI,SAASM,OAAhB;AACH;;AAED;;;;;;;8BAIMnB,M,EAAQ;;AAEV,gBAAMa,WAAW5B,EAAE6B,KAAF,EAAjB;AACAC,oBAAQC,QAAR,CAAiB,YAAW;AACxB,oBAAI;AACAhB,6BAASA,UAAU,CAAnB;AACA,wBAAMmC,QAAQ,uDAAd;AACA,wBAAIC,MAAM,EAAV;AACA,yBAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIrC,MAAnB,EAA2BqC,GAA3B,EAAgC;AAC5BD,+BAAOD,MAAMD,MAAN,CAAalD,EAAE6C,MAAF,CAAS,CAAT,EAAYM,MAAMnC,MAAN,GAAa,CAAzB,CAAb,EAAyC,CAAzC,CAAP;AACH;AACDa,6BAASI,OAAT,CAAiBmB,GAAjB;AACH,iBARD,CASA,OAAO3B,GAAP,EAAY;AACR,2BAAOI,SAASY,MAAT,CAAgBhB,GAAhB,CAAP;AACH;AACJ,aAbD;AAcA,mBAAOI,SAASM,OAAhB;AACH;;AAED;;;;;;;iCAISnB,M,EAAQ;AACb,gBAAMa,WAAW5B,EAAE6B,KAAF,EAAjB;AACAC,oBAAQC,QAAR,CAAiB,YAAW;AACxB,oBAAI;AACAhB,6BAASA,UAAU,CAAnB;AACA,wBAAMmC,QAAQ,uDAAd;AACA,wBAAIC,MAAM,EAAV;AACA,yBAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIrC,MAAnB,EAA2BqC,GAA3B,EAAgC;AAC5BD,+BAAOD,MAAMD,MAAN,CAAalD,EAAE6C,MAAF,CAAS,CAAT,EAAYM,MAAMnC,MAAN,GAAa,CAAzB,CAAb,EAAyC,CAAzC,CAAP;AACH;AACDa,6BAASI,OAAT,CAAiB,YAAYmB,GAA7B;AACH,iBARD,CASA,OAAO3B,GAAP,EAAY;AACR,2BAAOI,SAASY,MAAT,CAAgBhB,GAAhB,CAAP;AACH;AACJ,aAbD;AAcA,mBAAOI,SAASM,OAAhB;AACH;;AAED;;;;;;+BAGO;AACH,gBAAMmB,OAAO,IAAb;AAAA,gBAAmBlD,UAAUkD,KAAKjD,KAAL,CAAWD,OAAxC;AAAA,gBAAiDyB,WAAW5B,EAAE6B,KAAF,EAA5D;AACA,gBAAMyB,OAAOnD,QAAQoD,eAAR,IAA2BpD,QAAQmD,IAAnC,IAA2C,EAAxD;AACAxB,oBAAQC,QAAR,CAAiB,YAAW;AACxB,oBAAI,OAAOuB,KAAKE,EAAZ,KAAmB,WAAvB,EAAoC;AAChC,2BAAO5B,SAASI,OAAT,CAAiBsB,KAAKE,EAAtB,CAAP;AACH;AACD,oBAAMC,YAAYtD,QAAQC,KAAR,CAAc,MAAd,CAAlB;AACA,oBAAIsD,eAAJ;AACA,oBAAIC,gBAAgB,IAApB;AACAF,0BAAUG,KAAV,CAAgB,MAAhB,EAAwBC,KAAxB,CAA8BP,KAAKQ,IAAnC,EAAyCC,MAAzC,GAAkDC,MAAlD,CAAyD,IAAzD,EAA+DC,KAA/D,CAAqE,UAASzC,GAAT,EAAcF,MAAd,EAAsB;AACvF,wBAAIE,GAAJ,EAAS;AACLvB,mCAAWyB,GAAX,CAAeF,GAAf;AACA;AACAkC,iCAAS9D,YAAY,UAAU6D,UAAUS,KAAV,CAAgB,IAAhB,EAAsBC,IAA5C,CAAT;AACA,4BAAI,OAAOT,MAAP,KAAkB,UAAtB,EACIC,gBAAgBD,OAAO,IAAP,CAAhB;AACJ;AACAJ,6BAAKE,EAAL,GAAUG,aAAV;AACA,4BAAI5D,EAAEO,KAAF,CAAQH,QAAQmD,IAAhB,CAAJ,EAA2B;AACvBnD,oCAAQmD,IAAR,GAAeA,IAAf;AACH;AACD,+BAAO1B,SAASI,OAAT,CAAiB2B,aAAjB,CAAP;AACH,qBAZD,MAaK,IAAI5D,EAAEO,KAAF,CAAQgB,MAAR,CAAJ,EAAqB;AACtB;AACAoC,iCAAS9D,YAAY,UAAU6D,UAAUS,KAAV,CAAgB,IAAhB,EAAsBC,IAA5C,CAAT;AACA,4BAAI,OAAOT,MAAP,KAAkB,UAAtB,EACIC,gBAAgBD,OAAO,IAAP,CAAhB;AACJ;AACAJ,6BAAKE,EAAL,GAAUG,aAAV;AACA,4BAAI5D,EAAEO,KAAF,CAAQH,QAAQmD,IAAhB,CAAJ,EAA2B;AACvBnD,oCAAQmD,IAAR,GAAeA,IAAf;AACH;AACD,+BAAO1B,SAASI,OAAT,CAAiB2B,aAAjB,CAAP;AACH,qBAXI,MAYA;AACD;AACAL,6BAAKE,EAAL,GAAUlC,OAAOkC,EAAjB;AACA,+BAAO5B,SAASI,OAAT,CAAiBV,OAAOkC,EAAxB,CAAP;AACH;AACJ,iBA/BD;AAgCH,aAvCD;AAwCA,mBAAO5B,SAASM,OAAhB;AACH;;AAED;;;;;;6BAGK;AACD,mBAAO,KAAKoB,IAAL,EAAP;AACH;;;;;;AAGL,IAAMc,aAAa,iEAAiEC,KAAjE,CAAuE,EAAvE,CAAnB;;AAEA,SAAS5B,eAAT,GAA2B;AACvB,QAAMS,QAAQkB,UAAd;AACA,QAAME,OAAO,EAAb;AACA,QAAIlB,UAAJ;AACA;AACA,QAAImB,UAAJ;AACA;AACAD,SAAK,CAAL,IAAUA,KAAK,EAAL,IAAWA,KAAK,EAAL,IAAWA,KAAK,EAAL,IAAW,GAA3C;AACAA,SAAK,EAAL,IAAW,GAAX;;AAEA;AACA;AACA,SAAKlB,IAAI,CAAT,EAAYA,IAAI,EAAhB,EAAoBA,GAApB,EAAyB;AACrB,YAAI,CAACkB,KAAKlB,CAAL,CAAL,EAAc;AACVmB,gBAAI,IAAIzB,KAAKF,MAAL,KAAc,EAAtB;AACA0B,iBAAKlB,CAAL,IAAUF,MAAOE,KAAK,EAAN,GAAamB,IAAI,GAAL,GAAY,GAAxB,GAA8BA,CAApC,CAAV;AACH;AACJ;AACD,WAAOD,KAAKE,IAAL,CAAU,EAAV,CAAP;AACH","file":"functions.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\n'use strict';\nimport 'source-map-support/register';\nimport {ParserUtils} from './types';\nimport sprintf from 'sprintf';\nimport moment from 'moment';\nimport {_} from 'lodash';\nimport Q from 'q';\nimport {TraceUtils} from \"@themost/common/utils\";\n\n\n/**\n * @class\n*/\nexport class FunctionContext {\n    /**\n     * @param {DataContext=} context\n     * @param {DataModel=} model\n     * @param {*=} target\n     * @constructor\n     */\n    constructor(context, model, target) {\n        /**\n         * @type {DataContext}\n        */\n        this.context = context;\n         /**\n          * @type {DataModel}\n          */\n        this.model = model;\n        if ((_.isNil(context)) && (typeof model !=='undefined') && (typeof model != null)) {\n            //get current context from DataModel.context property\n            this.context = model.context;\n        }\n        /**\n         * @type {*}\n         */\n        this.target = target;\n    }\n\n    evaluate(expr, callback) {\n        callback = callback || function() {};\n        if (typeof expr !=='string') {\n            callback(null);\n            return;\n        }\n        const re = /(fn:)\\s?(.*?)\\s?\\((.*?)\\)/;\n        let expr1=expr;\n        if (expr.indexOf('fn:')!==0) {\n            expr1 = 'fn:' + expr1;\n        }\n        const match = re.exec(expr1);\n        if (match) {\n            let expr2eval;\n            //check parameters (match[3])\n            if (match[3].length==0) {\n                expr2eval = expr1.replace(/(fn:)\\s?(.*?)\\s?\\((.*?)\\)/, \"(function() { return this.$2(); });\");\n            }\n            else {\n                expr2eval = expr1.replace(/(fn:)\\s?(.*?)\\s?\\((.*?)\\)/, \"(function() { return this.$2($3); });\");\n            }\n            //evaluate expression\n            try {\n                const f = eval(expr2eval);\n                const value1 = f.call(this);\n                if (typeof value1 !== 'undefined' && value1 !=null && typeof value1.then === 'function') {\n                    value1.then(function(result) {\n                        return callback(null, result);\n                    }).catch(function(err) {\n                        callback(err);\n                    });\n                }\n                else {\n                    return callback(null, value1);\n                }\n            }\n            catch(err) {\n                callback(err);\n            }\n        }\n        else {\n            console.log(sprintf.sprintf('Cannot evaluate %s.', expr1));\n            callback(new Error('Cannot evaluate expression.'));\n        }\n    }\n\n    /**\n     * @returns {Promise|*}\n     */\n    now() {\n        const deferred = Q.defer();\n        process.nextTick(function() {\n            deferred.resolve(new Date());\n        });\n        return deferred.promise;\n    }\n\n    /**\n     * @returns {Promise|*}\n     */\n    today() {\n        const deferred = Q.defer();\n        process.nextTick(function() {\n            deferred.resolve((new Date()).getDate());\n        });\n        return deferred.promise;\n    }\n\n    /**\n     * @returns {Promise|*}\n     */\n    newid() {\n        const deferred = Q.defer();\n        this.model.context.db.selectIdentity(this.model.sourceAdapter, this.model.primaryKey, function(err, result) {\n            if (err) {\n                return deferred.reject(err);\n            }\n            deferred.resolve(result);\n        });\n        return deferred.promise;\n    }\n\n    /**\n     * @returns {Promise|*}\n     */\n    newGuid() {\n        const deferred = Q.defer();\n        process.nextTick(function() {\n            try {\n                deferred.resolve(newGuidInternal());\n            }\n            catch(err) {\n                deferred.reject(err)\n            }\n        });\n        return deferred.promise;\n    }\n\n    /**\n     * Generates a random integer value between the given minimum and maximum value\n     * @param {number} min\n     * @param {number} max\n     * @returns {Promise|*}\n     */\n    int(min, max) {\n        const deferred = Q.defer();\n        process.nextTick(function() {\n            try {\n                return deferred.resolve(_.random(min, max));\n            }\n            catch (err) {\n                deferred.reject(err);\n            }\n            deferred.resolve((new Date()).getDate());\n        });\n        return deferred.promise;\n    }\n\n    /**\n     * Generates a random sequence of numeric characters\n     * @param {number} length - A integer which represents the length of the sequence\n     * @returns {Promise|*}\n     */\n    numbers(length) {\n        const deferred = Q.defer();\n        process.nextTick(function() {\n            try {\n                length = length || 8;\n                if (length<0) {\n                    return deferred.reject(new Error(\"Number sequence length must be greater than zero.\"));\n                }\n                if (length>255) {\n                    return deferred.reject(new Error(\"Number sequence length exceeds the maximum of 255 characters.\"));\n                }\n                const times = Math.ceil(length / 10);\n                let res = '';\n                _.times(times, function() {\n                     res += _.random(1000000000, 9000000000)\n                });\n                return deferred.resolve(res.substr(0,length));\n            }\n            catch (err) {\n                deferred.reject(err);\n            }\n        });\n        return deferred.promise;\n    }\n\n    /**\n     * @param {number} length\n     * @returns {Promise|*}\n     */\n    chars(length) {\n\n        const deferred = Q.defer();\n        process.nextTick(function() {\n            try {\n                length = length || 8;\n                const chars = \"abcdefghkmnopqursuvwxz2456789ABCDEFHJKLMNPQURSTUVWXYZ\";\n                let str = \"\";\n                for(let i = 0; i < length; i++) {\n                    str += chars.substr(_.random(0, chars.length-1),1);\n                }\n                deferred.resolve(str);\n            }\n            catch (err) {\n                return deferred.reject(err);\n            }\n        });\n        return deferred.promise;\n    }\n\n    /**\n     * @param {number} length\n     * @returns {Promise|*}\n     */\n    password(length) {\n        const deferred = Q.defer();\n        process.nextTick(function() {\n            try {\n                length = length || 8;\n                const chars = \"abcdefghkmnopqursuvwxz2456789ABCDEFHJKLMNPQURSTUVWXYZ\";\n                let str = \"\";\n                for(let i = 0; i < length; i++) {\n                    str += chars.substr(_.random(0, chars.length-1),1);\n                }\n                deferred.resolve('{clear}' + str);\n            }\n            catch (err) {\n                return deferred.reject(err);\n            }\n        });\n        return deferred.promise;\n    }\n\n    /**\n     * @returns {Promise|*}\n     */\n    user() {\n        const self = this, context = self.model.context, deferred = Q.defer();\n        const user = context.interactiveUser || context.user || { };\n        process.nextTick(function() {\n            if (typeof user.id !== 'undefined') {\n                return deferred.resolve(user.id);\n            }\n            const userModel = context.model('User');\n            let parser;\n            let undefinedUser = null;\n            userModel.where('name').equal(user.name).silent().select('id').first(function(err, result) {\n                if (err) {\n                    TraceUtils.log(err);\n                    //try to get undefined user\n                    parser = ParserUtils['parse' + userModel.field('id').type];\n                    if (typeof parser === 'function')\n                        undefinedUser = parser(null);\n                    //set id for next calls\n                    user.id = undefinedUser;\n                    if (_.isNil(context.user)) {\n                        context.user = user;\n                    }\n                    return deferred.resolve(undefinedUser);\n                }\n                else if (_.isNil(result)) {\n                    //try to get undefined user\n                    parser = ParserUtils['parse' + userModel.field('id').type];\n                    if (typeof parser === 'function')\n                        undefinedUser = parser(null);\n                    //set id for next calls\n                    user.id = undefinedUser;\n                    if (_.isNil(context.user)) {\n                        context.user = user;\n                    }\n                    return deferred.resolve(undefinedUser);\n                }\n                else {\n                    //set id for next calls\n                    user.id = result.id;\n                    return deferred.resolve(result.id);\n                }\n            });\n        });\n        return deferred.promise;\n    }\n\n    /**\n     * @returns {Promise|*}\n     */\n    me() {\n        return this.user();\n    }\n}\n\nconst UUID_CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n\nfunction newGuidInternal() {\n    const chars = UUID_CHARS;\n    const uuid = [];\n    let i;\n    // rfc4122, version 4 form\n    let r;\n    // rfc4122 requires these characters\n    uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n    uuid[14] = '4';\n\n    // Fill in random data.  At i==19 set the high bits of clock sequence as\n    // per rfc4122, sec. 4.1.5\n    for (i = 0; i < 36; i++) {\n        if (!uuid[i]) {\n            r = 0 | Math.random()*16;\n            uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\n        }\n    }\n    return uuid.join('');\n}\n"]}