{"version":3,"sources":["permission.es6"],"names":["_","async","RandomUtils","AccessDeniedError","QueryExpression","QueryEntity","DataCache","EachSeriesCancelled","DataPermissionEventArgs","model","query","mask","type","privilege","emitter","PermissionMask","Read","Create","Update","Delete","Execute","Owner","DataPermissionEventListener","e","callback","prototype","validate","event","context","requestMask","workspace","$silent","state","Error","throwError","user","name","authenticationType","authSettings","getConfiguration","getAuthSettings","unattendedExecutionAccount","result","users","permissions","isNil","effectiveAccounts","err","accounts","permEnabled","privileges","filter","x","disabled","length","error","status","cancel","eachSeries","item","cb","account","hasOwnProperty","findIndex","where","equal","and","in","map","id","bit","silent","count","mapping","inferMapping","property","childModel","parentModel","target","childField","primaryKey","select","first","create","viewAdapter","fields","field","obj","attributes","forEach","$value","push","associationType","parentField","$fixed","q","$where","$prepared","db","execute","parentPrivilege","$select","$insert","$update","$delete","modelPrivileges","allUsersPrivilege","find","assigned","entity","expand","perms1","as","expr","prepare","$expand","resolveField","migrate","distinct","join","$entity","with","$with","pqAlias","randomInt","toString","ANONYMOUS_USER_CACHE_PATH","anonymousUser","queryUser","groups","enabled","username","convert","all","getCurrent","getOrDefault","subscribe","arr","anonymous","isArray"],"mappings":"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","file":"permission.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\n'use strict';\nimport 'source-map-support/register';\nimport {_} from 'lodash';\nimport async from 'async';\nimport {RandomUtils} from '@themost/common/utils';\nimport {AccessDeniedError} from \"@themost/common/errors\";\nimport {QueryExpression} from \"./node_modules/@themost/query/query\";\nimport {QueryEntity} from \"@themost/query/query\";\nimport {DataCache} from \"./cache\";\n\n/**\n * @class\n * @private\n * @ignore\n */\nclass EachSeriesCancelled {\n    //\n}\n\n/**\n * @class\n */\nexport class DataPermissionEventArgs {\n    constructor() {\n        /**\n         * The target data model\n         * @type {DataModel}\n         */\n        this.model = null;\n        /**\n         * The underlying query expression\n         * @type {QueryExpression}\n         */\n        this.query = null;\n        /**\n         * The permission mask\n         * @type {Number}\n         */\n        this.mask = null;\n        /**\n         * The query type\n         * @type {String}\n         */\n        this.type = null;\n        /**\n         * The query type\n         * @type {String}\n         */\n        this.privilege = null;\n        /**\n         * The data queryable object that emits the event.\n         * @type {DataQueryable|*}\n         */\n        this.emitter = null;\n    }\n\n}\n/**\n * An enumeration of the available permission masks\n * @enum {number}\n */\nconst PermissionMask = {\n    /**\n     * Read Access Mask (1)\n     */\n    Read:1,\n    /**\n     * Create Access Mask (2)\n     */\n    Create:2,\n    /**\n     * Update Access Mask (4)\n     */\n    Update:4,\n    /**\n     * Delete Access Mask (8)\n     */\n    Delete:8,\n    /**\n     * Execute Access Mask (16)\n     */\n    Execute:16,\n    /**\n     * Full Access Mask (31)\n     */\n    Owner:31\n};\n\n/**\n * @class\n */\nexport class DataPermissionEventListener {\n    /**\n     * Occurs before creating or updating a data object.\n     * @param {DataEventArgs} e - An object that represents the event arguments passed to this operation.\n     * @param {Function} callback - A callback function that should be called at the end of this operation. The first argument may be an error if any occured.\n     */\n    beforeSave(e, callback) {\n        DataPermissionEventListener.prototype.validate(e, callback);\n    }\n\n    /**\n     * Occurs before removing a data object.\n     * @param {DataEventArgs} event - An object that represents the event arguments passed to this operation.\n     * @param {Function} callback - A callback function that should be called at the end of this operation. The first argument may be an error if any occured.\n     * @returns {DataEventListener}\n     */\n    beforeRemove(event, callback) {\n        DataPermissionEventListener.prototype.validate(event, callback);\n    }\n\n    /**\n     * Validates permissions against the event arguments provided.\n     * @param {DataEventArgs} event - An object that represents the event arguments passed to this operation.\n     * @param {Function} callback - A callback function that should be called at the end of this operation. The first argument may be an error if any occured.\n     */\n    validate(event, callback) {\n        const model = event.model;\n        const context = event.model.context;\n        let requestMask = 1;\n        const workspace = 1;\n        //ensure silent operation\n        if (event.model && event.model.$silent) {\n            callback();\n            return;\n        }\n        if (event.state == 0)\n            requestMask = PermissionMask.Read;\n        else if (event.state==1)\n            requestMask = PermissionMask.Create;\n        else if (event.state==2)\n            requestMask = PermissionMask.Update;\n        else if (event.state==4)\n            requestMask = PermissionMask.Delete;\n        else if (event.state==16)\n            requestMask = PermissionMask.Execute;\n        else {\n            return callback(new Error('Target object has an invalid state.'));\n        }\n        //validate throwError\n        if (typeof event.throwError === 'undefined')\n            event.throwError = true;\n        context.user = context.user || { name:'anonymous',authenticationType:'None' };\n        //change: 2-May 2015\n        //description: Use unattended execution account as an escape permission check account\n        const authSettings = context.getConfiguration().getAuthSettings();\n        if (authSettings)\n        {\n            const unattendedExecutionAccount=authSettings.unattendedExecutionAccount;\n            if ((typeof unattendedExecutionAccount !== 'undefined'\n                || unattendedExecutionAccount !== null)\n                && (unattendedExecutionAccount===context.user.name))\n            {\n                event.result = true;\n                return callback();\n            }\n        }\n        //get user key\n        const users = context.model('User'), permissions = context.model('Permission');\n        if (_.isNil(users)) {\n            //do nothing\n            return callback();\n        }\n        if (_.isNil(permissions)) {\n            //do nothing\n            return callback();\n        }\n\n        effectiveAccounts(context, function(err, accounts) {\n            if (err) { callback(err); return; }\n\n            const permEnabled = model.privileges.filter(function(x) { return !x.disabled; }, model.privileges).length>0;\n            //get all enabled privileges\n            const privileges = model.privileges.filter(function(x) { return !x.disabled && ((x.mask & requestMask) == requestMask) });\n            if (privileges.length==0) {\n                if (event.throwError) {\n                    //if the target model has privileges but it has no privileges with the requested mask\n                    if (permEnabled) {\n                        //throw error\n                        const error = new Error('Access denied.');\n                        error.status = 401;\n                        callback(error);\n                    }\n                    else {\n                        //do nothing\n                        return callback();\n                    }\n                }\n                else {\n                    //set result to false (or true if model has no privileges at all)\n                    event.result = !permEnabled;\n                    //and exit\n                    return callback();\n                }\n            }\n            else {\n                let cancel = false;\n                event.result = false;\n                //enumerate privileges\n                async.eachSeries(privileges, function(item, cb) {\n                    if (cancel) {\n                        cb(null);\n                        return;\n                    }\n                    //global\n                    if (item.type=='global') {\n                        if (typeof item.account !== 'undefined') {\n                            //check if a privilege is assigned by the model\n                            if (item.account==='*') {\n                                //get permission and exit\n                                cancel=true;\n                                event.result = true;\n                                return cb();\n                            }\n                            else if (item.hasOwnProperty(\"account\")) {\n                                if (accounts.findIndex(function(x) { return x.name === item.account })>=0) {\n                                    cancel=true;\n                                    event.result = true;\n                                    return cb();\n                                }\n                            }\n                        }\n                        //try to find user has global permissions assigned\n                        permissions.where('privilege').equal(model.name).\n                            and('parentPrivilege').equal(null).\n                            and('target').equal('0').\n                            and('workspace').equal(workspace).\n                            and('account').in(accounts.map(function(x) { return x.id; })).\n                            and('mask').bit(requestMask).silent().count(function(err, count) {\n                                if (err) {\n                                    cb(err);\n                                }\n                                else {\n                                    if (count>=1) {\n                                        cancel=true;\n                                        event.result = true;\n                                    }\n                                    cb(null);\n                                }\n                            });\n                    }\n                    else if (item.type=='parent') {\n                        const mapping = model.inferMapping(item.property);\n                        if (!mapping) {\n                            cb(null);\n                            return;\n                        }\n                        if (requestMask==PermissionMask.Create) {\n                            permissions.where('privilege').equal(mapping.childModel).\n                                and('parentPrivilege').equal(mapping.parentModel).\n                                and('target').equal(event.target[mapping.childField]).\n                                and('workspace').equal(workspace).\n                                and('account').in(accounts.map(function(x) { return x.id; })).\n                                and('mask').bit(requestMask).silent().count(function(err, count) {\n                                    if (err) {\n                                        cb(err);\n                                    }\n                                    else {\n                                        if (count>=1) {\n                                            cancel=true;\n                                            event.result = true;\n                                        }\n                                        cb(null);\n                                    }\n                                });\n                        }\n                        else {\n                            //get original value\n                            model.where(model.primaryKey).equal(event.target[model.primaryKey]).select(mapping.childField).first(function(err, result) {\n                                if (err) {\n                                    cb(err);\n                                }\n                                else if (result) {\n                                    permissions.where('privilege').equal(mapping.childModel).\n                                        and('parentPrivilege').equal(mapping.parentModel).\n                                        and('target').equal(result[mapping.childField]).\n                                        and('workspace').equal(workspace).\n                                        and('account').in(accounts.map(function(x) { return x.id; })).\n                                        and('mask').bit(requestMask).silent().count(function(err, count) {\n                                            if (err) {\n                                                cb(err);\n                                            }\n                                            else {\n                                                if (count>=1) {\n                                                    cancel=true;\n                                                    event.result = true;\n                                                }\n                                                cb(null);\n                                            }\n                                        });\n                                }\n                                else {\n                                    cb(null);\n                                }\n                            });\n                        }\n                    }\n                    else if (item.type=='item') {\n                        //if target object is a new object\n                        if (requestMask==PermissionMask.Create) {\n                            //do nothing\n                            cb(null); return;\n                        }\n                        permissions.where('privilege').equal(model.name).\n                            and('parentPrivilege').equal(null).\n                            and('target').equal(event.target[model.primaryKey]).\n                            and('workspace').equal(workspace).\n                            and('account').in(accounts.map(function(x) { return x.id; })).\n                            and('mask').bit(requestMask).silent().count(function(err, count) {\n                                if (err) {\n                                    cb(err);\n                                }\n                                else {\n                                    if (count>=1) {\n                                        cancel=true;\n                                        event.result = true;\n                                    }\n                                    cb(null);\n                                }\n                            });\n                    }\n                    else if (item.type=='self') {\n                        if (requestMask==PermissionMask.Create) {\n                            const query = QueryExpression.create(model.viewAdapter);\n                            const fields=[];\n                            let field;\n\n                            //cast target\n                            let name;\n\n                            const obj = event.target;\n                            model.attributes.forEach(function(x) {\n                                name = obj.hasOwnProperty(x.property) ? x.property : x.name;\n                                if (obj.hasOwnProperty(name))\n                                {\n                                    const mapping = model.inferMapping(name);\n                                    if (_.isNil(mapping)) {\n                                        field = {};\n                                        field[x.name] = { $value: obj[name] };\n                                        fields.push(field);\n                                    }\n                                    else if ((mapping.associationType==='association') && (mapping.childModel===model.name)) {\n                                        if (typeof obj[name] === 'object') {\n                                            //set associated key value (e.g. primary key value)\n                                            field = {};\n                                            field[x.name] = { $value: obj[name][mapping.parentField] };\n                                            fields.push(field);\n                                        }\n                                        else {\n                                            //set raw value\n                                            field = {};\n                                            field[x.name] = { $value: obj[name] };\n                                            fields.push(field);\n                                        }\n                                    }\n                                }\n                            });\n                            //add fields\n                            query.select(fields);\n                            //set fixed query\n                            query.$fixed = true;\n                            model.filter(item.filter, function(err, q) {\n                                if (err) {\n                                    cb(err);\n                                }\n                                else {\n                                    //set where from DataQueryable.query\n                                    query.$where = q.query.$prepared;\n                                    model.context.db.execute(query,null, function(err, result) {\n                                        if (err) {\n                                            cb(err);\n                                        }\n                                        else {\n                                            if (result.length==1) {\n                                                cancel=true;\n                                                event.result = true;\n                                            }\n                                            cb(null);\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                        else {\n                            //get privilege filter\n                            model.filter(item.filter, function(err, q) {\n                                if (err) {\n                                    cb(err);\n                                }\n                                else {\n                                    //prepare query and append primary key expression\n                                    q.where(model.primaryKey).equal(event.target[model.primaryKey]).silent().count(function(err, count) {\n                                        if (err) { cb(err); return; }\n                                        if (count>=1) {\n                                            cancel=true;\n                                            event.result = true;\n                                        }\n                                        cb(null);\n                                    })\n                                }\n                            });\n                        }\n                    }\n                    else {\n                        //do nothing (unknown permission)\n                        cb(null);\n                    }\n\n                }, function(err) {\n                    if (err) {\n                        callback(err);\n                    }\n                    else {\n                        if (event.throwError && !event.result) {\n                            const error = new AccessDeniedError();\n                            error.model = model.name;\n                            callback(error);\n                        }\n                        else {\n                            callback(null);\n                        }\n                    }\n                });\n            }\n\n        });\n    }\n\n    /**\n     * Occurs before executing a data operation.\n     * @param {DataEventArgs} event - An object that represents the event arguments passed to this operation.\n     * @param {Function} callback - A callback function that should be called at the end of this operation. The first argument may be an error if any occured.\n     */\n    beforeExecute(event, callback) {\n        if (_.isNil(event.model)) {\n            return callback();\n        }\n        //ensure silent query operation\n        if (event.emitter && event.emitter.$silent) {\n            return callback();\n        }\n        const model= event.model;\n        const context = event.model.context;\n        let requestMask = 1;\n        const workspace = 1;\n        let privilege = model.name;\n        let parentPrivilege=null;\n        //get privilege from event arguments if it's defined (e.g. the operation requests execute permission User.ChangePassword where\n        // privilege=ChangePassword and parentPrivilege=User)\n        if (event.privilege) {\n            //event argument is the privilege\n            privilege = event.privilege;\n            //and model is the parent privilege\n            parentPrivilege = model.name;\n        }\n        //do not check permissions if the target model has no privileges defined\n        if (model.privileges.filter(function(x) { return !x.disabled; }, model.privileges).length==0) {\n            return callback();\n        }\n        //infer permission mask\n        if (typeof event.mask !== 'undefined') {\n            requestMask = event.mask;\n        }\n        else {\n            if (event.query) {\n                //infer mask from query type\n                if (event.query.$select)\n                //read permissions\n                    requestMask=1;\n                else if (event.query.$insert)\n                //create permissions\n                    requestMask=2;\n                else if (event.query.$update)\n                //update permissions\n                    requestMask=4;\n                else if (event.query.$delete)\n                //delete permissions\n                    requestMask=8;\n            }\n        }\n        //ensure context user\n        context.user = context.user || { name:'anonymous',authenticationType:'None' };\n        //change: 2-May 2015\n        //description: Use unattended execution account as an escape permission check account\n        const authSettings = context.getConfiguration().getAuthSettings();\n        if (authSettings)\n        {\n            const unattendedExecutionAccount=authSettings.unattendedExecutionAccount;\n            if ((typeof unattendedExecutionAccount !== 'undefined'\n                || unattendedExecutionAccount != null)\n                && (unattendedExecutionAccount===context.user.name))\n            {\n                return callback();\n            }\n        }\n        if (event.query) {\n\n            //get user key\n            const users = context.model('User'), permissions = context.model('Permission');\n            if (_.isNil(users)) {\n                //do nothing\n                return callback();\n            }\n            if (_.isNil(permissions)) {\n                //do nothing\n                return callback();\n            }\n            //get model privileges\n            const modelPrivileges = model.privileges || [];\n            //if model has no privileges defined\n            if (modelPrivileges.length==0) {\n                //do nothing\n                return callback();\n            }\n            //tuning up operation\n            //validate request mask permissions against all users privilege { mask:<requestMask>,disabled:false,account:\"*\" }\n            const allUsersPrivilege = modelPrivileges.find(function(x) {\n                return (((x.mask & requestMask)==requestMask) && !x.disabled && (x.account==='*'));\n            });\n            if (typeof allUsersPrivilege !== 'undefined') {\n                //do nothing\n                return callback();\n            }\n\n            effectiveAccounts(context, function(err, accounts) {\n                if (err) { callback(err); return; }\n                //get all enabled privileges\n                const privileges = modelPrivileges.filter(function(x) {\n                    return !x.disabled && ((x.mask & requestMask) == requestMask);\n                });\n\n                let cancel = false;\n                let assigned = false;\n                const entity = QueryEntity.create(model.viewAdapter);\n                let expand = null;\n                const perms1 = QueryEntity.create(permissions.viewAdapter).as('p0');\n                let expr = null;\n                async.eachSeries(privileges, function(item, cb) {\n                    if (cancel) {\n                        return cb();\n                    }\n                    try {\n                        if (item.type=='global') {\n                            //check if a privilege is assigned by the model\n                            if (item.account==='*') {\n                                //get permission and exit\n                                assigned=true;\n                                return cb(new EachSeriesCancelled());\n                            }\n                            else if (item.hasOwnProperty(\"account\")) {\n                                if (accounts.findIndex(function(x) { return x.name === item.account })>=0) {\n                                    assigned=true;\n                                    return cb(new EachSeriesCancelled());\n                                }\n                            }\n                            //try to find user has global permissions assigned\n                            permissions.where('privilege').equal(model.name).\n                                and('parentPrivilege').equal(null).\n                                and('target').equal('0').\n                                and('workspace').equal(1).\n                                and('account').in(accounts.map(function(x) { return x.id; })).\n                                and('mask').bit(requestMask).silent().count(function(err, count) {\n                                    if (err) {\n                                        cb(err);\n                                    }\n                                    else {\n                                        if (count>=1) {\n                                            assigned=true;\n                                            return cb(new EachSeriesCancelled());\n                                        }\n                                        cb();\n                                    }\n                                });\n                        }\n                        else if (item.type=='parent') {\n                            //get field mapping\n                            const mapping = model.inferMapping(item.property);\n                            if (!mapping) {\n                                return cb();\n                            }\n                            if (expr==null)\n                                expr = QueryExpression.create();\n                            expr.where(entity.select(mapping.childField)).equal(perms1.select('target')).\n                                and(perms1.select('privilege')).equal(mapping.childModel).\n                                and(perms1.select('parentPrivilege')).equal(mapping.parentModel).\n                                and(perms1.select('workspace')).equal(workspace).\n                                and(perms1.select('mask')).bit(requestMask).\n                                and(perms1.select('account')).in(accounts.map(function(x) { return x.id; })).prepare(true);\n                            assigned=true;\n                            cb();\n                        }\n                        else if (item.type=='item') {\n                            if (expr==null)\n                                expr = QueryExpression.create();\n                            expr.where(entity.select(model.primaryKey)).equal(perms1.select('target')).\n                                and(perms1.select('privilege')).equal(model.name).\n                                and(perms1.select('parentPrivilege')).equal(null).\n                                and(perms1.select('workspace')).equal(workspace).\n                                and(perms1.select('mask')).bit(requestMask).\n                                and(perms1.select('account')).in(accounts.map(function(x) { return x.id; })).prepare(true);\n                            assigned=true;\n                            cb();\n                        }\n                        else if (item.type=='self') {\n                            if (typeof item.filter === 'string' ) {\n                                model.filter(item.filter, function(err, q) {\n                                    if (err) {\n                                        cb(err);\n                                    }\n                                    else {\n                                        if (q.query.$prepared) {\n                                            if (expr==null)\n                                                expr = QueryExpression.create();\n                                            expr.$where = q.query.$prepared;\n                                            if (q.query.$expand) { expand = q.query.$expand; }\n                                            expr.prepare(true);\n                                            assigned=true;\n                                            cb();\n                                        }\n                                        else\n                                            cb();\n                                    }\n                                });\n                            }\n                            else {\n                                cb();\n                            }\n                        }\n                        else {\n                            cb();\n                        }\n                    }\n                    catch (err) {\n                        cb(err);\n                    }\n                }, function(err) {\n                    if (err) {\n                        cancel = (err instanceof EachSeriesCancelled);\n                        if (!cancel) {\n                            return callback(err);\n                        }\n                    }\n                    if (!assigned) {\n                        //prepare no access query\n                        event.query.prepare();\n                        //add no record parameter\n                        event.query.where(event.model.resolveField(event.model.primaryKey)).equal(null).prepare();\n                        return callback();\n                    }\n                    else if (expr) {\n                        return context.model(\"Permission\").migrate(function(err) {\n                            if (err) { return callback(err); }\n                            const q = QueryExpression.create(model.viewAdapter).select(model.primaryKey).distinct();\n                            if (expand) {\n                                q.join(expand[0].$entity).with(expand[0].$with);\n                            }\n                            q.join(perms1).with(expr);\n                            const pqAlias = 'pq' + RandomUtils.randomInt(100000,999999).toString();\n                            event.query.join(q.as(pqAlias)).with(QueryExpression.create().where(entity.select(model.primaryKey)).equal(QueryEntity.entity(pqAlias).select(model.primaryKey)));\n                            return callback();\n                        });\n                    }\n                    return callback();\n\n                });\n            });\n\n        }\n        else {\n            callback();\n        }\n    }\n}\n\n/**\n * @private\n * @type {string}\n */\nconst ANONYMOUS_USER_CACHE_PATH = '/User/anonymous';\n/**\n * @param {DataContext} context\n * @param {Function} callback\n * @private\n */\nfunction anonymousUser(context, callback) {\n    queryUser(context, 'anonymous', function(err, result) {\n        if (err) {\n            callback(err);\n        }\n        else {\n            callback(null, result || { id: null, name:'anonymous', groups:[], enabled:false});\n        }\n    });\n}\n/**\n *\n * @param {DataContext} context\n * @param {string} username\n * @param {Function} callback\n * @private\n */\nfunction queryUser(context, username, callback) {\n    try {\n        if (_.isNil(context)) {\n            return callback();\n        }\n        else {\n            //get user key\n            const users = context.model('User');\n            if (_.isNil(users)) {\n                return callback();\n            }\n            users.where('name').equal(username).silent().select('id', 'name').first(function(err, result) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    //if anonymous user was not found\n                    if (_.isNil(result)) {\n                        return callback();\n                    }\n                    //get anonymous user object\n                    const user = users.convert(result);\n                    //get user groups\n                    user.property('groups').select('id', 'name').silent().all(function(err, groups) {\n                        if (err) {\n                            callback(err);\n                            return;\n                        }\n                        //set anonymous user groups\n                        user.groups = groups || [];\n                        //return user\n                        callback(null, user);\n                    });\n                }\n            });\n        }\n    }\n    catch (e) {\n        callback(e);\n    }\n}\n/**\n * @param {DataContext} context\n * @param {function(Error=,Array=)} callback\n * @private\n */\nfunction effectiveAccounts(context, callback) {\n    if (_.isNil(context)) {\n        //push no account\n        return callback(null, [ { id: null } ]);\n    }\n    /**\n     * Gets or sets an object that represents the user of the current data context.\n     * @property {*|{name: string, authenticationType: string}}\n     * @name DataContext#user\n     * @memberof DataContext\n     */\n    context.user = context.user || { name:'anonymous',authenticationType:'None' };\n    context.user.name = context.user.name || 'anonymous';\n    //if the current user is anonymous\n    if (context.user.name === 'anonymous') {\n        //get anonymous user data\n        return DataCache.getCurrent().getOrDefault('/User/anonymous', function(cb) {\n            anonymousUser(context, function(err, result) {\n                cb(err, result);\n            });\n        }).subscribe((result)=> {\n            const arr = [];\n            if (result) {\n                arr.push({ \"id\": result.id, \"name\": result.name });\n                result.groups = result.groups || [];\n                result.groups.forEach(function(x) { arr.push({ \"id\": x.id, \"name\": x.name }); });\n            }\n            if (arr.length===0)\n                arr.push({ id: null });\n            return callback(null, arr);\n        }, (err) => {\n            return callback(err);\n        });\n    }\n    else {\n        return DataCache.getCurrent().getOrDefault(`/User/{context.user.name}`, function(cb) {\n            queryUser(context, context.user.name, cb);\n        }).subscribe((user) => {\n            DataCache.getCurrent().getOrDefault('/User/anonymous', function(cb) {\n                anonymousUser(context, cb);\n            }).subscribe((anonymous) => {\n                const arr = [ ];\n                if (user) {\n                    arr.push({ \"id\": user.id, \"name\": user.name });\n                    if (_.isArray(user.groups))\n                        user.groups.forEach(function(x) { arr.push({ \"id\": x.id, \"name\": x.name }); });\n                }\n                if (anonymous) {\n                    arr.push({ \"id\": anonymous.id, \"name\": \"anonymous\" });\n                    if (_.isArray(anonymous.groups))\n                        anonymous.groups.forEach(function(x) { arr.push({ \"id\": x.id, \"name\": x.name }); });\n                }\n                if (arr.length===0)\n                    arr.push({ id: null });\n                callback(null, arr);\n\n            }, (err) => {\n                return callback(err);\n            });\n        }, (err) => {\n            return callback(err);\n        });\n    }\n}\n"]}