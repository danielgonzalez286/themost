{"version":3,"sources":["listeners.es6"],"names":["ParserUtils","sprintf","async","moment","_","Q","TraceUtils","NotNullError","UniqueConstraintError","NotNullConstraintListener","e","callback","attrs","model","attributes","filter","x","primary","nullable","length","eachSeries","attr","cb","name","property","value","target","undefined","state","er","process","env","NODE_ENV","log","err","UniqueContraintListener","constraints","type","constraint","q","i","fields","mapping","inferMapping","parentField","and","equal","where","silent","select","primaryKey","first","result","objectExists","description","CalculatedValueListener","functions","require","functionContext","createContext","assign","context","calculation","expr","indexOf","fnstr","substring","concat","eval","value1","call","then","catch","Error","DataCachingListener","event","cache","isNil","caching","emitter","data","query","$select","hash","toMD5","dataCommon","md5","key","logTime","Date","getTime","current","get","$expand","cached","debug","add","DefaultValueListener","DataModelCreateViewListener","self","qry","db","view","viewAdapter","adapter","sourceAdapter","sealed","baseModel","base","many","map","from","baseAdapter","baseFields","isObject","forEach","push","createField","to","$entity","$with","createView","DataModelSeedListener","items","isArray","asQueryable","flatten","count","$state","save","DataModelSubTypesListener","getSubTypes","ev","prototype","afterUpgrade"],"mappings":"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","file":"listeners.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\n\nimport {ParserUtils} from './types';\nimport sprintf from 'sprintf';\nimport async from 'async';\nimport moment from 'moment';\nimport {_} from 'lodash';\nimport Q from 'q';\nimport {TraceUtils} from \"@themost/common/utils\";\nimport {NotNullError,UniqueConstraintError} from '@themost/common/errors';\n\n\n\n/**\n * @classdesc Represents an event listener for validating not nullable fields. This listener is automatically  registered in all data models.\n * @class\n */\nexport class NotNullConstraintListener {\n    /**\n     * Occurs before creating or updating a data object and validates not nullable fields.\n     * @param {DataEventArgs|*} e - An object that represents the event arguments passed to this operation.\n     * @param {Function} callback - A callback function that should be called at the end of this operation. The first argument may be an error if any occured.\n     */\n    beforeSave(e, callback) {\n\n        //find all attributes that have not null flag\n        const attrs = e.model.attributes.filter(\n            function(x) {\n                return !x.primary && !(typeof x.nullable === 'undefined' ? true: x.nullable);\n            });\n        if (attrs.length==0) {\n            callback(null);\n            return 0;\n        }\n        async.eachSeries(attrs, function(attr, cb)\n        {\n            const name = attr.property || attr.name, value = e.target[name];\n            if ((((value == null) || (value===undefined))  && (e.state==1))\n                || ((value == null) && (typeof value!=='undefined') && (e.state == 2)))\n            {\n                const er = new NotNullError('A value is required.', null, e.model.name, attr.name);\n                if (process.env.NODE_ENV==='development') { TraceUtils.log(er); }\n                return cb(er);\n            }\n            else\n                cb(null);\n        }, function(err) {\n            callback(err);\n        });\n    }\n}\n\n/**\n * @class\n * @classdesc Represents an event listener for validating data model's unique constraints. This listener is automatically registered in all data models.\n */\nexport class UniqueContraintListener {\n    /**\n     * Occurs before creating or updating a data object and validates the unique constraints of data model.\n     * @param {DataEventArgs|*} e - An object that represents the event arguments passed to this operation.\n     * @param {Function} callback - A callback function that should be called at the end of this operation. The first argument may be an error if any occured.\n     */\n    beforeSave(e, callback) {\n\n        //there are no constraints\n        if (e.model.constraints==null)\n        {\n            //do nothing\n            callback(null);\n            return;\n        }\n        //get unique constraints\n        const constraints = e.model.constraints.filter(function(x) {\n            return (x.type=='unique');\n        });\n        if (constraints.length==0) {\n            //do nothing\n            callback(null);\n            return;\n        }\n        async.eachSeries(constraints, function(constraint, cb)\n        {\n            /**\n             * @type {DataQueryable}\n             */\n            let q;\n            //build query\n            for (let i = 0; i < constraint.fields.length; i++) {\n                const attr = constraint.fields[i];\n                let value = e.target[attr];\n                if (typeof value === 'undefined') {\n                    cb(null);\n                    return;\n                }\n                //check field mapping\n                const mapping = e.model.inferMapping(attr);\n                if (typeof mapping !== 'undefined' && mapping !== null) {\n                    if (typeof e.target[attr] === 'object') {\n                        value=e.target[attr][mapping.parentField];\n                    }\n                }\n                if (typeof value=== 'undefined')\n                    value = null;\n                if (q) {\n                    q.and(attr).equal(value);\n                }\n                else {\n                    q = e.model.where(attr).equal(value);\n                }\n            }\n            if (typeof q === 'undefined')\n                cb(null);\n            else {\n                q.silent().select(e.model.primaryKey).first(function(err, result) {\n                    if (err) {\n                        cb(err);\n                        return;\n                    }\n                    if (!result) {\n                        //object does not exist\n                        cb(null);\n                    }\n                    else {\n                        let objectExists = true;\n                        if (e.state==2) {\n                            //validate object id (check if target object is the same with the returned object)\n                            objectExists = (result[e.model.primaryKey]!= e.target[e.model.primaryKey]);\n                        }\n                        //if object already exists\n                        if (objectExists) {\n                            let er;\n                            //so throw exception\n                            if (constraint.description) {\n                                er = new UniqueConstraintError(constraint.description, null, e.model.name);\n                            }\n                            else {\n                                er = new UniqueConstraintError(\"Object already exists. A unique constraint violated.\", null, e.model.name);\n                            }\n                            if (process.env.NODE_ENV==='development') { TraceUtils.log(er); }\n                            return cb(er);\n                        }\n                        else {\n                            return cb();\n                        }\n                    }\n                });\n            }\n        }, function(err) {\n            callback(err);\n        });\n    }\n}\n\n/**\n * @class\n * @classdesc Represents an event listener which calculates field values. This listener is being registered for all data models.\n <p>\n A data field may have a calculation attribute.\n An instance of <a href=\"FunctionContext.html\">FunctionContext</a> class will calculate this value by evaluating the expression provided.\n <pre class=\"prettyprint\"><code>\n {\n        \"name\": \"modifiedBy\",\n        \"title\": \"Modified By\",\n        \"description\": \"Modified by user.\",\n        \"type\": \"User\",\n        \"calculation\":\"javascript:return this.user();\"\n    }\n </code></pre>\n <p>In the previous example modifiedBy field has a calculation for setting the user which performs the update operation.</p>\n<p><strong>Note:</strong>FunctionContext class may be extended in order to allow applications to perform value calculations.</p>\n <pre class=\"prettyprint\"><code>\n    FunctionContext.prototype.myColor = function() {\n        var deferred = Q.defer(),\n            self = this;\n        process.nextTick(function() {\n            return self.context.model(\"UserColor\")\n                .where(\"user/name\").equal(self.context.user.name)\n                .select(\"color\")\n                .value().then(function(value) {\n                    deferred.resolve(value);\n                }).catch(function(err) {\n                    deferred.reject(err);\n                });\n        });\n        return deferred.promise;\n    }\n </code></pre>\n <pre class=\"prettyprint\"><code>\n {\n        \"name\": \"color\",\n        \"title\": \"Color\",\n        \"type\": \"Text\",\n        \"calculation\":\"javascript:return this.myColor();\"\n    }\n </code></pre>\n <p>In this example a custom method of FunctionContext class gets the user's favourite color.</p>\n <p>This calculation may also be performed by setting the following promise expression:</p>\n <pre class=\"prettyprint\"><code>\n {\n        \"name\": \"color\",\n        \"title\": \"Color\",\n        \"type\": \"Text\",\n        \"calculation\":\"javascript:return this.context.model('UserColor').where('user/name').equal(this.context.user.name).select('color').value();\"\n    }\n </code></pre>\n </p>\n */\nexport class CalculatedValueListener {\n    /**\n     * Occurs before creating or updating a data object and calculates field values with the defined calculation expression.\n     * @param {DataEventArgs} e - An object that represents the event arguments passed to this operation.\n     * @param {Function} callback - A callback function that should be called at the end of this operation. The first argument may be an error if any occured.\n     */\n    beforeSave(e, callback) {\n        //get function context\n        const functions = require('./functions'), functionContext = functions.createContext();\n        _.assign(functionContext, e);\n        functionContext.context = e.model.context;\n        //find all attributes that have a default value\n        const attrs = e.model.attributes.filter(function(x) { return (x.calculation!==undefined); });\n        async.eachSeries(attrs, function(attr, cb) {\n            const expr = attr.calculation;\n            //validate expression\n            if (typeof expr !== 'string') {\n                e.target[attr.name] = expr;\n                return cb();\n            }\n            //check javascript: keyword for code evaluation\n            if (expr.indexOf('javascript:')==0) {\n                //get expression\n                let fnstr = expr.substring('javascript:'.length);\n                //if expression starts with function add parenthesis (fo evaluation)\n                if (fnstr.indexOf('function')==0) {\n                    fnstr = '('.concat(fnstr,')');\n                }\n                //if expression starts with return then normalize expression (surround with function() {} keyword)\n                else if (fnstr.indexOf('return')==0) {\n                    fnstr = '(function() { '.concat(fnstr,'})');\n                }\n                const value = eval(fnstr);\n                //if value is function\n                if (typeof value === 'function') {\n                    //then call function against the target object\n                    const value1 = value.call(functionContext);\n                    if (typeof value1 !== 'undefined' && value1 !=null && typeof value1.then === 'function') {\n                        //we have a promise, so we need to wait for answer\n                        value1.then(function(result) {\n                            //otherwise set result\n                            e.target[attr.name] = result;\n                            return cb();\n                        }).catch(function(err) {\n                            cb(err);\n                        });\n                    }\n                    else {\n                        e.target[attr.name] = value1;\n                        return cb();\n                    }\n                }\n                else if (typeof value !== 'undefined' && value !=null && typeof value.then === 'function') {\n                    //we have a promise, so we need to wait for answer\n                    value.then(function(result) {\n                        //otherwise set result\n                        e.target[attr.name] = result;\n                        return cb();\n                    }).catch(function(err) {\n                        cb(err);\n                    });\n                }\n                else {\n                    //otherwise get value\n                    e.target[attr.name] = value;\n                    return cb();\n                }\n            }\n            else if (expr.indexOf('fn:')==0) {\n               return cb(new Error ('fn: syntax is deprecated.'));\n            }\n            else {\n                functionContext.eval(expr, function(err, result) {\n                    if (err) {\n                        cb(err);\n                    }\n                    else {\n                        e.target[attr.name] = result;\n                        cb(null);\n                    }\n                });\n            }\n\n        }, function(err) {\n            callback(err);\n        });\n    }\n}\n\n/**\n * @classdesc Represents a data caching listener which is going to be used while executing queries against\n * data models where data caching is enabled. This listener is registered by default.\n <p>\n      Data caching may be disabled when <a href=\"DataModel.html\">DataModel</a>.caching property is set to 'none'. This is the default behaviour of a data model.\n </p>\n <pre class=\"prettyprint\"><code>\n {\n     \"name\": \"Order\", ... , \"caching\":\"none\"\n     ...\n }\n </code></pre>\n <p>\n Data caching may be used when <a href=\"DataModel.html\">DataModel</a>.caching property is set to 'always'.\n </p>\n <pre class=\"prettyprint\"><code>\n {\n     \"name\": \"OrderStatus\", ... , \"caching\":\"always\"\n     ...\n }\n </code></pre>\n <p>\n Data caching may be conditionally enabled when <a href=\"DataModel.html\">DataModel</a>.caching property is set to 'conditional'.\n </p>\n <pre class=\"prettyprint\"><code>\n {\n     \"name\": \"Product\", ... , \"caching\":\"conditional\"\n     ...\n }\n </code></pre>\n <p>\n In this case, data caching will be used when an instance of <a href=\"DataQueryable.html\">DataQueryable</a> class requests data with cache equal to true:\n </p>\n <pre class=\"prettyprint\"><code>\n    context.model('Product')\n            .where('category').is('Laptops')\n            .cache(true)\n            .orderBy('name')\n            .list().then(function(result) {\n                done(null, result);\n            }).catch(function(err) {\n                done(err);\n            });\n </code></pre>\n * @class\n */\nexport class DataCachingListener {\n    /**\n     * Occurs before executing an query expression, validates data caching configuration and gets cached data.\n     * @param {DataEventArgs|*} event - An object that represents the event arguments passed to this operation.\n     * @param {Function} callback - A callback function that should be called at the end of this operation. The first argument may be an error if any occured.\n     */\n    beforeExecute(event, callback) {\n        try {\n            const cache = require('./data-cache');\n            if (_.isNil(event)) {\n                return callback();\n            }\n            //validate caching\n            const caching = (event.model.caching==='always' || event.model.caching==='conditional');\n            if (!caching) { return callback(); }\n            //validate conditional caching\n            if (event.model.caching==='conditional') {\n                if (event.emitter && typeof event.emitter.data == 'function') {\n                    if (!event.emitter.data('cache')) {\n                        return callback();\n                    }\n                }\n            }\n            if (event.query && event.query.$select) {\n                //create hash\n                let hash;\n                if (event.emitter && typeof event.emitter.toMD5 === 'function') {\n                    //get hash from emitter (DataQueryable)\n                    hash = event.emitter.toMD5();\n                }\n                else {\n                    //else calculate hash\n                    hash = dataCommon.md5({ query: event.query });\n                }\n                //format cache key\n                const key = '/' + event.model.name + '/?query=' + hash;\n                //calculate execution time (debug)\n                const logTime = new Date().getTime();\n                //query cache\n                cache.current.get(key, function(err, result) {\n                    if (err) {\n                        TraceUtils.log('DataCacheListener: An error occured while trying to get cached data.');\n                        TraceUtils.log(err);\n                    }\n                    if (typeof result !== 'undefined') {\n                        //delete expandables\n                        if (event.emitter) {\n                            delete event.emitter.$expand;\n                        }\n                        //set cached flag\n                        event['cached'] = true;\n                        //set execution default\n                        event['result'] = result;\n                        //log execution time (debug)\n                        try {\n                            if (process.env.NODE_ENV==='development') {\n                                TraceUtils.log(sprintf.sprintf('Cache (Execution Time:%sms):%s', (new Date()).getTime()-logTime, key));\n                            }\n                        }\n                        catch(err) { }\n                        //exit\n                        return callback();\n                    }\n                    else {\n                        //do nothing and exit\n                        return callback();\n                    }\n                });\n            }\n            else {\n                return callback();\n            }\n        }\n        catch (err) {\n            return callback(err);\n        }\n    }\n\n    /**\n     * Occurs before executing an query expression, validates data caching configuration and stores data to cache.\n     * @param {DataEventArgs|*} e - An object that represents the event arguments passed to this operation.\n     * @param {Function} callback - A callback function that should be called at the end of this operation. The first argument may be an error if any occured.\n     */\n    afterExecute(event, callback) {\n        try {\n            const cache = require('./data-cache');\n            //validate caching\n            const caching = (event.model.caching==='always' || event.model.caching==='conditional');\n            if (!caching) { return callback(); }\n            //validate conditional caching\n            if (event.model.caching==='conditional') {\n                if (event.emitter && typeof event.emitter.data == 'function') {\n                    if (!event.emitter.data('cache')) {\n                        return callback();\n                    }\n                }\n            }\n            if (event.query && event.query.$select) {\n                if (typeof event.result !== 'undefined' && !event.cached) {\n                    //create hash\n                    let hash;\n                    if (event.emitter && typeof event.emitter.toMD5 === 'function') {\n                        //get hash from emitter (DataQueryable)\n                        hash = event.emitter.toMD5();\n                    }\n                    else {\n                        //else calculate hash\n                        hash = dataCommon.md5({ query: event.query });\n                    }\n                    const key = '/' + event.model.name + '/?query=' + hash;\n                    if (process.env.NODE_ENV==='development') {\n                        TraceUtils.debug('DataCacheListener: Setting data to cache [' + key + ']');\n                    }\n                    cache.current.add(key, event.result);\n                    return callback();\n                }\n            }\n            return callback();\n        }\n        catch(err) {\n            return callback(err);\n        }\n    }\n}\n\n/**\n * @class\n * @classdesc Represents an event listener for calculating default values.\n * DefaultValueListener is one of the default listeners which are being registered for all data models.\n <p>\n A data field may have a default value attribute.\n An instance of <a href=\"FunctionContext.html\">FunctionContext</a> class will calculate this value by evaluating the expression provided.\n The default value listener will process all fields of an inserted data object which have a default value expression and does not have a defined value.\n <pre class=\"prettyprint\"><code>\n {\n        \"name\": \"createdBy\",\n        \"title\": \"Created By\",\n        \"type\": \"User\",\n        \"value\":\"javascript:return this.user();\",\n        \"readonly\":true\n    }\n </code></pre>\n <p></p>\n <p><strong>Note:</strong> FunctionContext class may be extended in order to allow applications to perform value calculations.</p>\n </p>\n */\nexport class DefaultValueListener {\n    /**\n     * Occurs before creating or updating a data object and calculates default values with the defined value expression.\n     * @param {DataEventArgs|*} e - An object that represents the event arguments passed to this operation.\n     * @param {Function} callback - A callback function that should be called at the end of this operation. The first argument may be an error if any occured.\n     */\n    beforeSave(e, callback) {\n\n        const state = e.state!==undefined ? e.state : 0;\n        if (state!=1)\n        {\n            callback(null);\n        }\n        else {\n            //get function context\n            const functions = require('./functions'), functionContext = functions.createContext();\n            _.assign(functionContext, e);\n            //find all attributes that have a default value\n            const attrs = e.model.attributes.filter(function(x) { return (x.value!==undefined); });\n            async.eachSeries(attrs, function(attr, cb) {\n                const expr = attr.value;\n                //if attribute is already defined\n                if (typeof e.target[attr.name] !== 'undefined') {\n                    //do nothing\n                    cb(null);\n                    return;\n                }\n                //validate expression\n                if (typeof expr !== 'string') {\n                    e.target[attr.name] = expr;\n                    return cb();\n                }\n                //check javascript: keyword for code evaluation\n                if (expr.indexOf('javascript:')==0) {\n                    //get expression\n                    let fnstr = expr.substring('javascript:'.length);\n                    //if expression starts with function add parenthesis (fo evaluation)\n                    if (fnstr.indexOf('function')==0) {\n                        fnstr = '('.concat(fnstr,')');\n                    }\n                    //if expression starts with return then normalize expression (surround with function() {} keyword)\n                    else if (fnstr.indexOf('return')==0) {\n                        fnstr = '(function() { '.concat(fnstr,'})');\n                    }\n                    const value = eval(fnstr);\n                    //if value is function\n                    if (typeof value === 'function') {\n                        //then call function against the target object\n                        const value1 = value.call(functionContext);\n                        if (typeof value1 !== 'undefined' && value1 !=null && typeof value1.then === 'function') {\n                            //we have a promise, so we need to wait for answer\n                            value1.then(function(result) {\n                                //otherwise set result\n                                e.target[attr.name] = result;\n                                return cb();\n                            }).catch(function(err) {\n                                cb(err);\n                            });\n                        }\n                        else {\n                            e.target[attr.name] = value1;\n                            return cb();\n                        }\n                    }\n                    else if (typeof value !== 'undefined' && value !=null && typeof value.then === 'function') {\n                        //we have a promise, so we need to wait for answer\n                        value.then(function(result) {\n                            //otherwise set result\n                            e.target[attr.name] = result;\n                            return cb();\n                        }).catch(function(err) {\n                           cb(err);\n                        });\n                    }\n                    else {\n                        //otherwise get value\n                        e.target[attr.name] = value;\n                        return cb();\n                    }\n                }\n                else if (expr.indexOf('fn:')==0) {\n                    return cb(new Error ('fn: syntax is deprecated.'));\n                }\n                else  {\n\n                    functionContext.eval(expr, function(err, result) {\n                        if (err) {\n                            cb(err);\n                        }\n                        else {\n                            e.target[attr.name] = result;\n                            cb(null);\n                        }\n                    });\n                }\n\n            }, function(err) {\n                callback(err);\n            });\n        }\n    }\n}\n\n/**\n * @class\n */\nexport class DataModelCreateViewListener {\n    /**\n     * Occurs after upgrading a data model.\n     * @param {DataEventArgs} event - An object that represents the event arguments passed to this operation.\n     * @param {Function} callback - A callback function that should be called at the end of this operation. The first argument may be an error if any occured.\n     */\n    afterUpgrade(event, callback) {\n\n        const self = event.model, qry = require(\"most-query\"), db = self.context.db;\n        const view = self.viewAdapter, adapter = self.sourceAdapter;\n        //if data model is a sealed model do nothing anb exit\n        if (self.sealed) { return callback(); }\n        //if view adapter is the same with source adapter do nothing and exit\n        if (view===adapter) { return callback(); }\n        const baseModel = self.base();\n        //get array of fields\n        const fields = self.attributes.filter(function(x) {\n            return (self.name== x.model) && (!x.many);\n        }).map(function(x) {\n            return qry.fields.select(x.name).from(adapter);\n        });\n        /**\n         * @type {QueryExpression}\n         */\n        const q = qry.query(adapter).select(fields);\n        //get base adapter\n        const baseAdapter = (baseModel!=null) ? baseModel.name.concat('Data') : null, baseFields = [];\n        //enumerate columns of base model (if any)\n        if (_.isObject(baseModel)) {\n            baseModel.attributes.forEach(function(x) {\n                //get all fields (except primary and one-to-many relations)\n                if ((!x.primary) && (!x.many))\n                    baseFields.push(qry.fields.select(x.name).from(baseAdapter))\n            });\n        }\n        if (baseFields.length>0)\n        {\n            const from = qry.createField(adapter, self.key().name), to = qry.createField(baseAdapter, self.base().key().name);\n            q.$expand = { $entity: { },$with:[] };\n            q.$expand.$entity[baseAdapter]=baseFields;\n            q.$expand.$with.push(from);\n            q.$expand.$with.push(to);\n        }\n        //execute query\n        return db.createView(view, q, function(err) {\n            callback(err);\n        });\n    }\n}\n\n/**\n * @class\n */\nexport class DataModelSeedListener {\n    /**\n     * Occurs after upgrading a data model.\n     * @param {DataEventArgs} event - An object that represents the event arguments passed to this operation.\n     * @param {Function} callback - A callback function that should be called at the end of this operation. The first argument may be an error if any occured.\n     */\n    afterUpgrade(event, callback) {\n        const self = event.model;\n        try {\n            /**\n             * Gets items to be seeded\n             * @type {Array}\n             */\n            const items = self['seed'];\n            //if model has an array of items to be seeded\n            if (_.isArray(items)) {\n                if (items.length==0) {\n                    //if seed array is empty exit\n                    return callback();\n                }\n                //try to insert items if model does not have any record\n                self.asQueryable().silent().flatten().count(function(err, count) {\n                    if (err) {\n                        callback(err); return;\n                    }\n                    //if model has no data\n                    if (count==0) {\n                        //set items state to new\n                        items.forEach(function(x) { x.$state=1; });\n                        self.silent().save(items, callback);\n                    }\n                    else {\n                        //model was already seeded\n                        return callback();\n                    }\n                });\n            }\n            else {\n                //do nothing and exit\n                return callback();\n            }\n        }\n        catch (e) {\n            callback(e);\n        }\n    }\n}\n\n/**\n * @class\n */\nexport class DataModelSubTypesListener {\n    /**\n     * Occurs after upgrading a data model.\n     * @param {DataEventArgs} event - An object that represents the event arguments passed to this operation.\n     * @param {Function} callback - A callback function that should be called at the end of this operation. The first argument may be an error if any occured.\n     */\n    afterUpgrade(event, callback) {\n        const self = event.model, context = event.model.context;\n        try {\n            self.getSubTypes().then(function(result) {\n                if (result.length==0) { return callback(); }\n                //enumerate sub types\n                async.eachSeries(result, function(name, cb) {\n                    //get model\n                    const model = context.model(name);\n                    if (_.isNil(model)) { return cb(); }\n                    //if model is sealed do nothing\n                    if (model.sealed) { return cb(); }\n                    //create event arguments\n                    const ev = { model:model };\n                    //execute create view listener\n                    DataModelCreateViewListener.prototype.afterUpgrade(ev, cb);\n                }, function(err) {\n                    return callback(err);\n                });\n            }).catch(function(err) {\n                return callback(err);\n            });\n        }\n        catch (e) {\n            callback(e);\n        }\n    }\n}"]}