{"version":3,"sources":["filter-resolver.es6"],"names":["FunctionContext","DataFilterResolver","member","callback","test","arr","split","slice","length","join","viewAdapter","concat","name","args","prototype","a","push","apply","e","fx","context","user","then","value","catch","err","Date","res","setHours","me"],"mappings":";;;;;;;qjBAAA;;;;;;;;;;AAUA;;IAAQA,e,cAAAA,e;;;;AAGR;;;;;;IAMaC,kB,WAAAA,kB;AAET,kCAAc;AACV;;AADU;AAEb;;;;sCAEaC,M,EAAQC,Q,EAAU;AAC5B,gBAAI,KAAKC,IAAL,CAAUF,MAAV,CAAJ,EAAuB;AACnB,oBAAMG,MAAMH,OAAOI,KAAP,CAAa,GAAb,CAAZ;AACAH,yBAAS,IAAT,EAAeE,IAAIE,KAAJ,CAAUF,IAAIG,MAAJ,GAAW,CAArB,EAAwBC,IAAxB,CAA6B,GAA7B,CAAf;AACH,aAHD,MAIK;AACDN,yBAAS,IAAT,EAAe,KAAKO,WAAL,CAAiBC,MAAjB,CAAwB,GAAxB,EAA6BT,MAA7B,CAAf;AACH;AACJ;;;sCAEaU,I,EAAMC,I,EAAMV,Q,EAAU;AAChCA,uBAAWA,YAAY,YAAW,CAAG,CAArC;AACA,gBAAI,OAAOF,mBAAmBa,SAAnB,CAA6BF,IAA7B,CAAP,KAA8C,UAAlD,EAA8D;AAC1D,oBAAMG,IAAIF,QAAQ,EAAlB;AACAE,kBAAEC,IAAF,CAAOb,QAAP;AACA,oBAAI;AACA,2BAAOF,mBAAmBa,SAAnB,CAA6BF,IAA7B,EAAmCK,KAAnC,CAAyC,IAAzC,EAA+CF,CAA/C,CAAP;AACH,iBAFD,CAGA,OAAMG,CAAN,EAAS;AACL,2BAAOf,SAASe,CAAT,CAAP;AACH;AAEJ;AACDf;AACH;;AAED;;;;;;2BAGGA,Q,EAAU;AACT,gBAAMgB,KAAK,IAAInB,eAAJ,CAAoB,KAAKoB,OAAzB,EAAkC,IAAlC,CAAX;AACAD,eAAGE,IAAH,GAAUC,IAAV,CAAe,UAASC,KAAT,EAAgB;AAC3BpB,yBAAS,IAAT,EAAeoB,KAAf;AACH,aAFD,EAEGC,KAFH,CAES,UAASC,GAAT,EAAc;AACnBtB,yBAASsB,GAAT;AACH,aAJD;AAKH;;AAED;;;;;;4BAGItB,Q,EAAU;AACVA,qBAAS,IAAT,EAAe,IAAIuB,IAAJ,EAAf;AACH;;AAED;;;;;;8BAGMvB,Q,EAAU;AACZ,gBAAMwB,MAAM,IAAID,IAAJ,EAAZ;AACAC,gBAAIC,QAAJ,CAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB;AACAzB,qBAAS,IAAT,EAAewB,GAAf;AACH;;AAED;;;;;;6BAGKxB,Q,EAAU;AACX,mBAAO,KAAK0B,EAAL,CAAQ1B,QAAR,CAAP;AACH","file":"filter-resolver.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\n\nimport {FunctionContext} from 'functions';\n\n\n/**\n * @ignore\n * @class\n * @abstract\n * @augments DataModel\n */\nexport class DataFilterResolver {\n\n    constructor() {\n        //\n    }\n\n    resolveMember(member, callback) {\n        if (/\\//.test(member)) {\n            const arr = member.split('/');\n            callback(null, arr.slice(arr.length-2).join('.'));\n        }\n        else {\n            callback(null, this.viewAdapter.concat('.', member))\n        }\n    }\n\n    resolveMethod(name, args, callback) {\n        callback = callback || function() { };\n        if (typeof DataFilterResolver.prototype[name] === 'function') {\n            const a = args || [];\n            a.push(callback);\n            try {\n                return DataFilterResolver.prototype[name].apply(this, a);\n            }\n            catch(e) {\n                return callback(e);\n            }\n\n        }\n        callback();\n    }\n\n    /**\n     * @param {Function} callback\n     */\n    me(callback) {\n        const fx = new FunctionContext(this.context, this);\n        fx.user().then(function(value) {\n            callback(null, value)\n        }).catch(function(err) {\n            callback(err);\n        });\n    }\n\n    /**\n     * @param {Function} callback\n     */\n    now(callback) {\n        callback(null, new Date());\n    }\n\n    /**\n     * @param {Function} callback\n     */\n    today(callback) {\n        const res = new Date();\n        res.setHours(0,0,0,0);\n        callback(null, res);\n    }\n\n    /**\n     * @param {Function} callback\n     */\n    user(callback) {\n        return this.me(callback);\n    }\n\n}\n"]}