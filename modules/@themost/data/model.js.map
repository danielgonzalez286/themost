{"version":3,"sources":["model.es6"],"names":["_","Q","sprintf","async","OpenDataParser","QueryExpression","SequentialEventEmitter","DataError","TraceUtils","PathUtils","DataAssociationMapping","DataModelMigration","ParserUtils","RequiredValidator","MaxLengthValidator","DataTypeValidator","CalculatedValueListener","NotNullConstraintListener","DefaultValueListener","UniqueConstraintListener","DataModelSeedListener","DataModelCreateViewListener","DataCachingListener","DataNestedObjectListener","DataStateValidatorListener","DataObjectAssociationListener","DataQueryable","DataAttributeResolver","DataModelView","DataFilterResolver","inferTagMapping_","field","self","isNil","hasOwnProperty","many","conf","context","getConfiguration","dataType","dataTypes","type","name","concat","upperFirst","primaryKey","key","EmptyQueryExpression","DataModel","obj","hidden","sealed","abstract","version","caching","fields","eventListeners","constraints","views","privileges","assign","context_","Object","defineProperty","get","set","value","enumerable","configurable","source","view","silent_","silent","pluralExpression","attributes","_clearAttributes","baseModel","base","forEach","x","test","mapping","associationType","model","clone","primary","cloned","push","find","y","undefined","primaryKey_","getPrimaryKey","p","attributeNames","map","arr","isArray","baseArr","constraintCollection","registerListeners_","call","initialize","result","join","attr","where","text","search","params","callback","parser","$joinExpressions","$select","split","length","getDataView","resolveMember","member","cb","property","prototype","testNestedAttribute","member1","inferMapping","expr","expr1","resolveJunctionAttributeJoin","$expand","$name","replace","resolveNestedAttributeJoin","arrExpr","apply","joinExpr","$entity","$as","err","resolveMethod","args","filter","q","query","$filter","parse","$where","prepare","select","skip","$skip","orderBy","$orderby","$order","groupBy","$groupby","$group","expand","levels","parseInt","$levels","top","$top","$take","isNaN","take","orderByDescending","resolver","require","matches","testExpandExpression","e","equal","bQueried","and","Array","slice","arguments","n","list","first","all","max","min","inherits","Error","typeConvert","DataObjectClass","getDataObjectClass_","src","o","convertInternal_","$$type","state","cast_","dest","eachSeries","parentField","associatedModel","parentModel","cast","d","defer","save_","reject","resolve","promise","target","beforeSave","unshift","update_","insert_","remove_","migrationModel","sourceAdapter","count","migrate","cache","migration","add","appliesTo","description","title","models","db","childModel","getAttribute","indexes","toUpperCase","columns","indexed","executeInTransaction","tr","emit","m","alias","fieldOf","re","RegExp","mappings_","superTypes","getSuperTypes","indexOf","tagMapping","definitionField","associatedField","childField","cascade","refersTo","PluralExpression","associationAdapter","validate_","process","nextTick","migrations","then","getModelDefinition","catch","getTypedItems","getTypedList","setMaxListeners","removeAllListeners","perms","on","beforeRemove","beforeExecute","afterExecute","afterUpgrade","i","listener","disabled","cwd","afterSave","afterRemove","DataPermissionEventListener","parsers","classPath","toLowerCase","code","dasherize","DataObject","$state","readonly","calculation","editable","castForValidation_","parseBoolean","res","item","saveCallback","saveSingleObject_","insertedId","saveBaseObject_","removeSingleObject_","once","DataValidatorListener","create","insert","into","keys","update","recast","pm","nextIdentity","adapter","a","b","$insert","execute","lastIdentity","lastCallback","insertId","lastResult","save","removeCallback","delete","removeBaseObject_","cacheMapping_","cachedModel","cachedField","objCopy","validator","validationResult","arrValidators","nullable","validation","maxLength","size","validatorModule","modulePath","debug","createInstance","validationProperties","properties","setContext","validateSync","message","innerMessage","validate"],"mappings":"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","file":"model.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\n'use strict';\nimport 'source-map-support/register';\nimport {_} from 'lodash';\nimport Q from 'q';\nimport sprintf from 'sprintf';\nimport async from 'async';\nimport {OpenDataParser} from '@themost/query/odata';\nimport {QueryExpression} from '@themost/query/query';\nimport {SequentialEventEmitter} from '@themost/common/emitter';\nimport {DataError} from '@themost/common/errors';\nimport {TraceUtils,PathUtils} from '@themost/common/utils';\nimport {DataAssociationMapping,DataModelMigration,ParserUtils} from './types';\nimport {RequiredValidator,MaxLengthValidator,DataTypeValidator} from \"./validators\";\nimport {CalculatedValueListener,NotNullConstraintListener,DefaultValueListener,\n    UniqueConstraintListener,\n    DataModelSeedListener, DataModelCreateViewListener, DataCachingListener} from './listeners';\nimport {DataObjectAssociationListener} from './associations';\nimport {DataNestedObjectListener} from './listeners';\nimport {DataStateValidatorListener} from './listeners';\nimport {DataQueryable,DataAttributeResolver} from './queryable';\nimport {DataModelView} from './view';\nimport {DataFilterResolver} from './filter-resolver';\n\n\n/**\n * @memberOf DataModel\n * @param {DataField} field\n * @private\n */\nfunction inferTagMapping_(field) {\n    /**\n     * @type {DataModel|*}\n     */\n    const self = this;\n    //validate field argument\n    if (_.isNil(field)) {\n        return;\n    }\n    //validate DataField.many attribute\n    if (!(field.hasOwnProperty('many') && field.many == true)) {\n        return;\n    }\n    //check if the type of the given field is a primitive data type\n    //(a data type that is defined in the collection of data types)\n    const conf = self.context.getConfiguration(), dataType = conf.dataTypes[field.type];\n    if (_.isNil(dataType)) {\n        return;\n    }\n    //get associated model name\n    const name = self.name.concat(_.upperFirst(field.name));\n    const primaryKey = self.key();\n    return new DataAssociationMapping({\n        \"associationType\": \"junction\",\n        \"associationAdapter\": name,\n        \"cascade\": \"delete\",\n        \"parentModel\": self.name,\n        \"parentField\": primaryKey.name,\n        \"refersTo\": field.name\n    });\n}\n\n/**\n * @ignore\n * @class\n * @augments QueryExpression\n */\nclass EmptyQueryExpression {\n    //\n}\n\n/**\n * @classdesc DataModel class extends a JSON data model and performs all data operations (select, insert, update and delete) in MOST Data Applications.\n <p>\n     These JSON schemas are in config/models folder:\n </p>\n <pre class=\"prettyprint\"><code>\n /\n + config\n   + models\n     - User.json\n     - Group.json\n     - Account.json\n     ...\n </code></pre>\n <p class=\"pln\">\n The following JSON schema presents a typical User model with fields, views, privileges, constraints, listeners, and seeding:\n </p>\n <pre class=\"prettyprint\"><code>\n {\n     \"name\": \"User\", \"id\": 90, \"title\": \"Application Users\", \"inherits\": \"Account\", \"hidden\": false, \"sealed\": false, \"abstract\": false, \"version\": \"1.4\",\n     \"fields\": [\n         {\n             \"name\": \"id\", \"title\": \"Id\", \"description\": \"The identifier of the item.\",\n             \"type\": \"Integer\",\n             \"nullable\": false,\n             \"primary\": true\n         },\n         {\n             \"name\": \"accountType\",  \"title\": \"Account Type\", \"description\": \"Contains a set of flags that define the type and scope of an account object.\",\n             \"type\": \"Integer\",\n             \"readonly\":true,\n             \"value\":\"javascript:return 0;\"\n         },\n         {\n             \"name\": \"lockoutTime\", \"title\": \"Lockout Time\", \"description\": \"The date and time that this account was locked out.\",\n             \"type\": \"DateTime\",\n             \"readonly\": true\n         },\n         {\n             \"name\": \"logonCount\", \"title\": \"Logon Count\", \"description\": \"The number of times the account has successfully logged on.\",\n             \"type\": \"Integer\",\n             \"value\": \"javascript:return 0;\",\n             \"readonly\": true\n         },\n         {\n             \"name\": \"enabled\", \"title\": \"Enabled\", \"description\": \"Indicates whether a user is enabled or not.\",\n             \"type\": \"Boolean\",\n             \"nullable\": false,\n             \"value\": \"javascript:return true;\"\n         },\n         {\n             \"name\": \"lastLogon\", \"title\": \"Last Logon\", \"description\": \"The last time and date the user logged on.\",\n             \"type\": \"DateTime\",\n             \"readonly\": true\n         },\n         {\n             \"name\": \"groups\", \"title\": \"User Groups\", \"description\": \"A collection of groups where user belongs.\",\n             \"type\": \"Group\",\n             \"expandable\": true,\n             \"mapping\": {\n                 \"associationAdapter\": \"GroupMembers\", \"parentModel\": \"Group\",\n                 \"parentField\": \"id\", \"childModel\": \"User\", \"childField\": \"id\",\n                 \"associationType\": \"junction\", \"cascade\": \"delete\",\n                 \"select\": [\n                     \"id\",\n                     \"name\",\n                     \"alternateName\"\n                 ]\n             }\n         },\n         {\n             \"name\": \"additionalType\",\n             \"value\":\"javascript:return this.model.name;\",\n             \"readonly\":true\n         },\n         {\n             \"name\": \"accountType\",\n             \"value\": \"javascript:return 0;\"\n         }\n     ], \"privileges\":[\n         { \"mask\":1, \"type\":\"self\", \"filter\":\"id eq me()\" },\n         { \"mask\":15, \"type\":\"global\", \"account\":\"*\" }\n     ],\n     \"constraints\":[\n         {\n             \"description\": \"User name must be unique across different records.\",\n             \"type\":\"unique\",\n             \"fields\": [ \"name\" ]\n         }\n     ],\n     \"views\": [\n         {\n             \"name\":\"list\", \"title\":\"Users\", \"fields\":[\n                 { \"name\":\"id\", \"hidden\":true },\n                 { \"name\":\"description\" },\n                 { \"name\":\"name\" },\n                 { \"name\":\"enabled\" , \"format\":\"yesno\" },\n                 { \"name\":\"dateCreated\", \"format\":\"moment : 'LLL'\" },\n                 { \"name\":\"dateModified\", \"format\":\"moment : 'LLL'\" }\n             ], \"order\":\"dateModified desc\"\n         }\n     ],\n     \"eventListeners\": [\n         { \"name\":\"New User Credentials Provider\", \"type\":\"/app/controllers/user-credentials-listener\" }\n     ],\n     \"seed\":[\n         {\n             \"name\":\"anonymous\",\n             \"description\":\"Anonymous User\",\n             \"groups\":[\n                 { \"name\":\"Guests\" }\n             ]\n         },\n         {\n             \"name\":\"admin@example.com\",\n             \"description\":\"Site Administrator\",\n             \"groups\":[\n                 { \"name\":\"Administrators\" }\n             ]\n         }\n     ]\n }\n </code></pre>\n *\n * @class\n * @property {string} classPath - Gets or sets a string which represents the path of the DataObject subclass associated with this model.\n * @property {string} name - Gets or sets a string that represents the name of the model.\n * @property {number} id - Gets or sets an integer that represents the internal identifier of the model.\n * @property {boolean} hidden - Gets or sets a boolean that indicates whether the current model is hidden or not. The default value is false.\n * @property {string} title - Gets or sets a title for this data model.\n * @property {boolean} sealed - Gets or sets a boolean that indicates whether current model is sealed or not. A sealed model cannot be migrated.\n * @property {boolean} abstract - Gets or sets a boolean that indicates whether current model is an abstract model or not.\n * @property {string} version - Gets or sets the version of this data model.\n * @property {string} type - Gets or sets an internal type for this model.\n * @property {DataCachingType|string} caching - Gets or sets a string that indicates the caching type for this model. The default value is none.\n * @property {string} inherits - Gets or sets a string that contains the model that is inherited by the current model.\n * @property {DataField[]} fields - Gets or sets an array that represents the collection of model fields.\n * @property {DataModelEventListener[]} eventListeners - Gets or sets an array that represents the collection of model listeners.\n * @property {Array} constraints - Gets or sets the array of constraints which are defined for this model\n * @property {DataModelView[]} views - Gets or sets the array of views which are defined for this model\n * @property {DataModelPrivilege[]} privileges - Gets or sets the array of privileges which are defined for this model\n * @property {string} source - Gets or sets a string which represents the source database object for this model.\n * @property {string} view - Gets or sets a string which represents the view database object for this model.\n * @property {DataContext|*} - Gets or sets the data context of this model.\n * @property {DataField[]} attributes - Gets an array of DataField objects which represents the collection of model fields (including fields which are inherited from the base model).\n * @property {Array} seed - An array of objects which represents a collection of items to be seeded when the model is being generated for the first time\n * @constructor\n * @augments SequentialEventEmitter\n * @param {*=} obj An object instance that holds data model attributes. This parameter is optional.\n */\nexport class DataModel extends SequentialEventEmitter {\n    constructor(obj) {\n        super();\n        this.hidden = false;\n        this.sealed = false;\n        this.abstract = false;\n        this.version = '0.1';\n        this.type = 'data';\n        this.caching = 'none';\n        this.fields = [];\n        this.eventListeners = [];\n        this.constraints = [];\n        this.views = [];\n        this.privileges = [];\n        //extend model if obj parameter is defined\n        if (obj)\n        {\n            if (typeof obj === 'object')\n                _.assign(this, obj);\n        }\n\n        /**\n         * Gets or sets the underlying data adapter\n         * @type {DataContext}\n         * @private\n         */\n        let context_ = null;\n        const self = this;\n        Object.defineProperty(this, 'context', { get: function() {\n            return context_;\n        }, set: function(value) {\n            context_ = value;\n        }, enumerable: false, configurable: false});\n\n        Object.defineProperty(this, 'sourceAdapter', { get: function() {\n            return _.isNil(self.source) ? self.name.concat('Base') : self.source;\n        }, enumerable: false, configurable: false});\n\n        Object.defineProperty(this, 'viewAdapter', { get: function() {\n            return _.isNil(self.view) ? self.name.concat('Data') : self.view;\n        }, enumerable: false, configurable: false});\n\n        let silent_ = false;\n        /**\n         * Prepares a silent data operation (for query, update, insert, delete etc).\n         * In a silent execution, permission check will be omitted.\n         * Any other listeners which are prepared for using silent execution will use this parameter.\n         * @param {Boolean=} value\n         * @returns DataModel\n         */\n        this.silent = function(value) {\n            if (typeof value === 'undefined')\n                silent_ = true;\n            else\n                silent_ = !!value;\n            return this;\n        };\n\n        Object.defineProperty(this, '$silent', { get: function() {\n            return silent_;\n        }, enumerable: false, configurable: false});\n\n        const pluralExpression = /([a-zA-Z]+?)([e']s|[^aiou]s)$/;\n        /**\n         * @type {Array}\n         */\n        let attributes;\n        /**\n         * @private\n         */\n        this._clearAttributes = function() {\n            attributes = null;\n        };\n\n        /**\n         * Gets an array of objects that represents the collection of fields for this model.\n         * This collection contains the fields defined in the current model and its parent.\n         * @type {Array}\n         *\n         */\n        Object.defineProperty(this, 'attributes', { get: function() {\n            //validate self field collection\n            if (typeof attributes !== 'undefined' && attributes != null)\n                return attributes;\n            //init attributes collection\n            attributes = [];\n\n            //get base model (if any)\n            const baseModel = self.base();\n\n            let field;\n            //enumerate fields\n            self.fields.forEach(function(x) {\n                if (typeof x.many === 'undefined') {\n                    if (typeof self.context.getConfiguration().dataTypes[x.type] === 'undefined')\n                        //set one-to-many attribute (based on a naming convention)\n                        x.many = pluralExpression.test(x.name) || (x.mapping && x.mapping.associationType === 'junction');\n                    else\n                        //otherwise set one-to-many attribute to false\n                        x.many = false;\n                }\n                //re-define field model attribute\n                if (typeof x.model === 'undefined')\n                    x.model = self.name;\n                let clone = x;\n                //if base model exists and current field is not primary key field\n                if (baseModel && !x.primary) {\n                    //get base field\n                    field = baseModel.field(x.name);\n                    if (field) {\n                        //clone field\n                        clone = { };\n                        //get all inherited properties\n                        _.assign(clone, field);\n                        //get all overridden properties\n                        _.assign(clone, x);\n                        //set field model\n                        clone.model = field.model;\n                        //set cloned attribute\n                        clone.cloned = true;\n                    }\n                }\n                //finally push field\n                attributes.push(clone);\n            });\n            if (baseModel) {\n                baseModel.attributes.forEach(function(x) {\n                    if (!x.primary) {\n                        //check if member is overridden by the current model\n                        field = self.fields.find(function(y) { return y.name == x.name; });\n                        if (typeof field === 'undefined')\n                            attributes.push(x);\n                    }\n                });\n            }\n            return attributes;\n        }, enumerable: false, configurable: false});\n        /**\n         * Gets the primary key name\n         * @type String\n        */\n        this.primaryKey = undefined;\n        //local variable for DateModel.primaryKey\n        let primaryKey_;\n        Object.defineProperty(this, 'primaryKey' , { get: function() {\n            return self.getPrimaryKey();\n        }, enumerable: false, configurable: false});\n\n        this.getPrimaryKey = function() {\n            if (typeof primaryKey_ !== 'undefined') { return primaryKey_; }\n            const p = self.fields.find(function(x) { return x.primary==true; });\n            if (p) {\n                primaryKey_ = p.name;\n                return primaryKey_;\n            }\n        };\n\n        /**\n         * Gets an array that contains model attribute names\n         * @type Array\n        */\n        this.attributeNames = undefined;\n        Object.defineProperty(this, 'attributeNames' , { get: function() {\n            return self.attributes.map(function(x) {\n                return x.name;\n            });\n        }, enumerable: false, configurable: false});\n        Object.defineProperty(this, 'constraintCollection' , { get: function() {\n            const arr = [];\n            if (_.isArray(self.constraints)) {\n                //apend constraints to collection\n                self.constraints.forEach(function(x) {\n                    arr.push(x);\n                });\n            }\n            //get base model\n            const baseModel = self.base();\n            if (baseModel) {\n                //get base model constraints\n                const baseArr = baseModel.constraintCollection;\n                if (_.isArray(baseArr)) {\n                    //apend to collection\n                    baseArr.forEach(function(x) {\n                        arr.push(x);\n                    });\n                }\n            }\n            return arr;\n        }, enumerable: false, configurable: false});\n\n        //register listeners\n        registerListeners_.call(this);\n        //call initialize method\n        if (typeof this.initialize === 'function')\n            this.initialize();\n    }\n\n    /**\n     * Initializes the current data model. This method is used for extending the behaviour of an install of DataModel class.\n     */\n    initialize() {\n        //\n    }\n\n    /**\n     * Gets a string which represents the name of the database object that is going to be used while inserting, updating or deleting data objects\n     * @returns {string}\n     */\n    getSourceAdapter() {\n        return _.isNil(this.source) ? this.name.concat('Base') : this.source;\n    }\n\n    /**\n     * Gets a string which represents the name of the database object that is going to be used while selecting data objects.\n     * @returns {string}\n     */\n    getViewAdapter() {\n        return _.isNil(this.view) ? this.name.concat('Data') : this.view;\n    }\n\n    /**\n     * Clones the current data model\n     * @param {DataContext=} context - An instance of DataContext class which represents the current data context.\n     * @returns {DataModel} Returns a new DataModel instance\n     */\n    clone(context) {\n        const result = new DataModel(this);\n        if (context)\n            result.context = context;\n        return result;\n    }\n\n    join(model) {\n        const result = new DataQueryable(this);\n        return result.join(model);\n    }\n\n    /**\n     * Initializes a where statement and returns an instance of DataQueryable class.\n     * @param {String|*} attr - A string that represents the name of a field\n     * @returns DataQueryable\n    */\n    where(attr) {\n        const result = new DataQueryable(this);\n        return result.where(attr);\n    }\n\n    /**\n     * Initializes a full-text search statement and returns an instance of DataQueryable class.\n     * @param {String} text - A string that represents the text to search for\n     * @returns DataQueryable\n     */\n    search(text) {\n        const result = new DataQueryable(this);\n        return result.search(text);\n    }\n\n    /**\n     * Returns a DataQueryable instance of the current model\n     * @returns {DataQueryable}\n     */\n    asQueryable() {\n        return new DataQueryable(this);\n    }\n\n    /**\n     * Represents the callback function of DataQueryable.filter() method.\n     * @callback DataModel~FilterCallback\n     * @param {Error=} err\n     * @param {DataQueryable} q\n     */\n\n    /**\n     * Applies open data filter, ordering, grouping and paging params and returns a data queryable object\n     * @param {String|{$filter:string=, $skip:number=, $levels:number=, $top:number=, $take:number=, $order:string=, $inlinecount:string=, $expand:string=,$select:string=, $orderby:string=, $group:string=, $groupby:string=}} params - A string that represents an open data filter or an object with open data parameters\n     * @param {DataModel~FilterCallback} callback -  A callback function where the first argument will contain the Error object if an error occured, or null otherwise. The second argument will contain an instance of DataQueryable class.\n     * @example\n     context.model('Order').filter(context.params, function(err,q) {\n        if (err) { return callback(err); }\n        q.take(10, function(err, result) {\n            if (err) { return callback(err); }\n            callback(null, result);\n        });\n     });\n     */\n    filter(params, callback) {\n        const self = this;\n        const parser = new OpenDataParser();\n        const $joinExpressions = [];\n        let view;\n        if (typeof params !== 'undefined' && params != null && typeof params.$select === 'string') {\n            //split select\n            const arr = params.$select.split(',');\n            if (arr.length==1) {\n                //try to get data view\n                view = self.getDataView(arr[0]);\n            }\n        }\n        parser.resolveMember = function(member, cb) {\n            if (view) {\n                const field = view.fields.find(function(x) { return x.property === member });\n                if (field) { member = field.name; }\n            }\n            const attr = self.field(member);\n            if (attr)\n                member = attr.name;\n            if (DataAttributeResolver.prototype.testNestedAttribute.call(self,member)) {\n                try {\n                    const member1 = member.split(\"/\");\n                    const mapping = self.inferMapping(member1[0]);\n                    let expr;\n                    if (mapping && mapping.associationType === 'junction') {\n                        const expr1 = DataAttributeResolver.prototype.resolveJunctionAttributeJoin.call(self, member);\n                        expr = expr1.$expand;\n                        //replace member expression\n                        member = expr1.$select.$name.replace(/\\./g,\"/\");\n                    }\n                    else {\n                        expr = DataAttributeResolver.prototype.resolveNestedAttributeJoin.call(self, member);\n                    }\n                    if (expr) {\n                        const arrExpr = [];\n                        if (_.isArray(expr))\n                            arrExpr.push.apply(arrExpr, expr);\n                        else\n                            arrExpr.push(expr);\n                        arrExpr.forEach(function(y) {\n                            const joinExpr = $joinExpressions.find(function(x) {\n                                if (x.$entity && x.$entity.$as) {\n                                        return (x.$entity.$as === y.$entity.$as);\n                                    }\n                                return false;\n                            });\n                            if (_.isNil(joinExpr))\n                                $joinExpressions.push(y);\n                        });\n                    }\n                }\n                catch (err) {\n                    cb(err);\n                    return;\n                }\n            }\n            if (typeof self.resolveMember === 'function')\n                self.resolveMember.call(self, member, cb);\n            else\n                DataFilterResolver.prototype.resolveMember.call(self, member, cb);\n        };\n        parser.resolveMethod = function(name, args, cb) {\n            if (typeof self.resolveMethod === 'function')\n                self.resolveMethod.call(self, name, args, cb);\n            else\n                DataFilterResolver.prototype.resolveMethod.call(self, name, args, cb);\n        };\n        let filter;\n\n        if ((params instanceof DataQueryable) && (self.name === params.model.name)) {\n            const q = new DataQueryable(self);\n            _.assign(q, params);\n            _.assign(q.query, params.query);\n            return callback(null, q);\n        }\n\n        if (typeof params === 'string') {\n            filter = params;\n        }\n        else if (typeof params === 'object') {\n            filter = params.$filter;\n        }\n\n        try {\n            parser.parse(filter, function(err, query) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    //create a DataQueryable instance\n                    const q = new DataQueryable(self);\n                    q.query.$where = query;\n                    if ($joinExpressions.length>0)\n                        q.query.$expand = $joinExpressions;\n                    //prepare\n                    q.query.prepare();\n\n                    if (typeof params === 'object') {\n                        //apply query parameters\n                        const select = params.$select, skip = params.$skip || 0, orderBy = params.$orderby || params.$order, groupBy = params.$groupby || params.$group, expand = params.$expand, levels = parseInt(params.$levels), top = params.$top || params.$take;\n                        //select fields\n                        if (typeof select === 'string') {\n                            q.select.apply(q, select.split(',').map(function(x) {\n                                return x.replace(/^\\s+|\\s+$/g, '');\n                            }));\n                        }\n                        //apply group by fields\n                        if (typeof groupBy === 'string') {\n                            q.groupBy.apply(q, groupBy.split(',').map(function(x) {\n                                return x.replace(/^\\s+|\\s+$/g, '');\n                            }));\n                        }\n                        if ((typeof levels === 'number') && !isNaN(levels)) {\n                            //set expand levels\n                            q.levels(levels);\n                        }\n                        //set $skip\n                        q.skip(skip);\n                        if (top)\n                            q.query.take(top);\n                        //set $orderby\n                        if (orderBy) {\n                            orderBy.split(',').map(function(x) {\n                                return x.replace(/^\\s+|\\s+$/g, '');\n                            }).forEach(function(x) {\n                                if (/\\s+desc$/i.test(x)) {\n                                    q.orderByDescending(x.replace(/\\s+desc$/i, ''));\n                                }\n                                else if (/\\s+asc/i.test(x)) {\n                                    q.orderBy(x.replace(/\\s+asc/i, ''));\n                                }\n                                else {\n                                    q.orderBy(x);\n                                }\n                            });\n                        }\n                        if (expand) {\n\n                            const resolver = require(\"./expand-resolver\");\n                            const matches = resolver.testExpandExpression(expand);\n                            if (matches && matches.length>0) {\n                                q.expand.apply(q, matches);\n                            }\n                        }\n                        //return\n                        callback(null, q);\n                    }\n                    else {\n                        //and finally return DataQueryable instance\n                        callback(null, q);\n                    }\n\n                }\n            });\n        }\n        catch(e) {\n            return callback(e);\n        }\n    }\n\n    /**\n     * Prepares a data query with the given object as parameters and returns the equivalent DataQueryable instance\n     * @param {*} obj - An object which represents the query parameters\n     * @returns DataQueryable - An instance of DataQueryable class that represents a data query based on the given parameters.\n     * @example\n     context.model('Order').find({ \"paymentMethod\":1 }).orderBy('dateCreated').take(10, function(err,result) {\n        if (err) { return callback(err); }\n        return callback(null, result);\n     });\n     */\n    find(obj) {\n        const self = this;\n        let result;\n        if (_.isNil(obj))\n        {\n            result = new DataQueryable(this);\n            result.where(self.primaryKey).equal(null);\n            return result;\n        }\n        //cast object\n        const find = {};\n        self.attributeNames.forEach(function(x)\n        {\n            if (obj.hasOwnProperty(x))\n            {\n                find[x] = obj[x];\n            }\n        });\n\n        if (find.hasOwnProperty(self.primaryKey)) {\n            result = new DataQueryable(this);\n            return result.where(self.primaryKey).equal(find[self.primaryKey]);\n        }\n        else {\n            result = new DataQueryable(this);\n            let bQueried = false;\n            //enumerate properties and build query\n            for(const key in find) {\n                if (find.hasOwnProperty(key)) {\n                    if (!bQueried) {\n                        result.where(key).equal(find[key]);\n                        bQueried = true;\n                    }\n                    else\n                        result.and(key).equal(find[key]);\n                }\n            }\n            if (!bQueried) {\n                //there is no query defined a dummy one (e.g. primary key is null)\n                result.where(self.primaryKey).equal(null);\n            }\n            return result;\n        }\n    }\n\n    /**\n     * Selects the given attribute or attributes and return an instance of DataQueryable class\n     * @param {...string} attr - An array of fields, a field or a view name\n     * @returns {DataQueryable}\n     */\n    select(attr) {\n        const result = new DataQueryable(this);\n        return result.select.apply(result, Array.prototype.slice.call(arguments));\n    }\n\n    /**\n     * Prepares an ascending order by expression and returns an instance of DataQueryable class.\n     * @param {string|*} attr - A string that is going to be used in this expression.\n     * @returns DataQueryable\n     * @example\n     context.model('Person').orderBy('givenName').list().then(function(result) {\n        done(null, result);\n     }).catch(function(err) {\n        done(err);\n     });\n    */\n    orderBy(attr) {\n        const result = new DataQueryable(this);\n        return result.orderBy(attr);\n    }\n\n    /**\n     * Takes an array of maximum [n] items.\n     * @param {Number} n - The maximum number of items that is going to be retrieved\n     * @param {Function=} callback - A callback function where the first argument will contain the Error object if an error occured, or null otherwise. The second argument will contain the result.\n     * @returns DataQueryable|undefined If callback parameter is missing then returns a DataQueryable object.\n     */\n    take(n, callback) {\n        n = n || 25;\n        const result = new DataQueryable(this);\n        if (typeof callback === 'undefined')\n            return result.take(n);\n        result.take(n, callback);\n    }\n\n    /**\n     * Returns an instance of DataResultSet of the current model.\n     * @param {Function=} callback - A callback function where the first argument will contain the Error object if an error occured, or null otherwise. The second argument will contain the result.\n     * @returns {Promise<T>|*} If callback parameter is missing then returns a Promise object.\n     * @deprecated Use DataModel.asQueryable().list().\n     * @example\n     context.model('User').list(function(err, result) {\n        if (err) { return done(err); }\n        return done(null, result);\n     });\n     */\n    list(callback) {\n        const result = new DataQueryable(this);\n        return result.list(callback);\n    }\n\n    /**\n     * Returns the first item of the current model.\n     * @param {Function=} callback - A callback function where the first argument will contain the Error object if an error occured, or null otherwise. The second argument will contain the result.\n     * @returns {Promise<T>|*} If callback parameter is missing then returns a Promise object.\n     * @deprecated Use DataModel.asQueryable().first().\n     * @example\n     context.model('User').first(function(err, result) {\n        if (err) { return done(err); }\n        return done(null, result);\n     });\n    */\n    first(callback) {\n        const result = new DataQueryable(this);\n        return result.select(this.attributeNames).first(callback);\n    }\n\n    /**\n     * A helper function for getting an object based on the given primary key value\n     * @param {String|*} key - The primary key value to search for.\n     * @param {Function} callback - A callback function where the first argument will contain the Error object if an error occured, or null otherwise. The second argument will contain the result, if any.\n     * @returns {Deferred|*} If callback parameter is missing then returns a Deferred object.\n     * @example\n     context.model('User').get(1).then(function(result) {\n        return done(null, result);\n    }).catch(function(err) {\n        return done(err);\n    });\n     */\n    get(key, callback) {\n        const result = new DataQueryable(this);\n        return result.where(this.primaryKey).equal(key).first(callback);\n    }\n\n    /**\n     * Returns the last item of the current model based.\n     * @param {Function=} callback - A callback function where the first argument will contain the Error object if an error occured, or null otherwise. The second argument will contain the result.\n     * @returns {Promise<T>|*} If callback parameter is missing then returns a Promise object.\n     * @example\n     context.model('User').last(function(err, result) {\n        if (err) { return done(err); }\n        return done(null, result);\n     });\n     */\n    last(callback) {\n        const result = new DataQueryable(this);\n        return result.orderByDescending(this.primaryKey).select(this.attributeNames).first(callback);\n    }\n\n    /**\n     * Returns all data items.\n     * @param {Function} callback - A callback function where the first argument will contain the Error object if an error occured, or null otherwise. The second argument will contain the result, if any.\n    */\n    all(callback) {\n        const result = new DataQueryable(this);\n        return result.select(this.attributeNames).all(callback);\n    }\n\n    /**\n     * Bypasses a number of items based on the given parameter. This method is used in data paging operations.\n     * @param {Number} n - The number of items to skip.\n     * @returns DataQueryable\n    */\n    skip(n) {\n        const result = new DataQueryable(this);\n        return result.skip(n);\n    }\n\n    /**\n     * Prepares an descending order by expression and returns an instance of DataQueryable class.\n     * @param {string|*} attr - A string that is going to be used in this expression.\n     * @returns DataQueryable\n     * @example\n     context.model('Person').orderByDescending('givenName').list().then(function(result) {\n        done(null, result);\n     }).catch(function(err) {\n        done(err);\n     });\n     */\n    orderByDescending(attr) {\n        const result = new DataQueryable(this);\n        return result.orderBy(attr);\n    }\n\n    /**\n     * Returns the maximum value for a field.\n     * @param {string} attr - A string that represents the name of the field.\n     * @param {Function=} callback - A callback function where the first argument will contain the Error object if an error occured, or null otherwise. The second argument will contain the result.\n     * @returns {Promise<T>|*} If callback parameter is missing then returns a Promise object.\n     */\n    max(attr, callback) {\n        const result = new DataQueryable(this);\n        return result.max(attr, callback);\n    }\n\n    /**\n     * Returns the minimum value for a field.\n     * @param {string} attr - A string that represents the name of the field.\n     * @param {Function=} callback - A callback function where the first argument will contain the Error object if an error occured, or null otherwise. The second argument will contain the result.\n     * @returns {Promise<T>|*} If callback parameter is missing then returns a Promise object.\n     */\n    min(attr, callback) {\n        const result = new DataQueryable(this);\n        return result.min(attr, callback);\n    }\n\n    /**\n     * Gets a DataModel instance which represents the inherited data model of this item, if any.\n     * @returns {DataModel}\n     */\n    base() {\n        if (typeof this.inherits === 'undefined' || this.inherits == null)\n            return null;\n        if (typeof this.context === 'undefined' || this.context == null)\n            throw new Error(\"The underlying data context cannot be empty.\");\n        return this.context.model(this.inherits);\n    }\n\n    /**\n     * Converts an object or a collection of objects to the corresponding data object instance\n     * @param {Array|*} obj\n     * @param {boolean=} typeConvert - Forces property value conversion for each property based on field type.\n     * @returns {DataObject|Array|*} - Returns an instance of DataObject (or an array of DataObject instances)\n     *<p>\n     This conversion of an anonymous object through DataModel.convert() may be overriden by subclassing DataObject\n     and place this class in app/models folder of a MOST Data Appllication:\n     </p>\n     <pre class=\"prettyprint\"><code>\n     /\n     + app\n       + models\n         + user-model.js\n     </code></pre>\n     <p>\n     An example of user model subclassing (user-model.js):\n     </p>\n     <pre class=\"prettyprint\"><code>\n     var util = require('util'),\n     md = require('most-data'),\n     web = require('most-web');\n\n     function UserModel(obj) {\n        UserModel.super_.call(this, 'User', obj);\n    }\n     util.inherits(UserModel, md.classes.DataObject);\n\n     UserModel.prototype.person = function (callback) {\n        var self = this, context = self.context;\n        try {\n            //search person by user name\n            return context.model('Person').where('user/name').equal(self.name).first(callback);\n        }\n        catch (err) {\n            callback(err);\n        }\n    };\n     if (typeof module !== 'undefined') module.exports = UserModel;\n     </code></pre>\n     @example\n     //get User model\n     var users = context.model('User');\n     users.where('name').equal(context.user.name).first().then(function(result) {\n        if (md.common.isNullOrUndefined(result)) {\n            return done(new Error('User cannot be found'));\n        }\n        //convert result\n        var user = users.convert(result);\n        //get user's person\n        user.person(function(err, result) {\n            if (err) { return done(err); }\n            if (md.common.isNullOrUndefined(result)) {\n                return done(new Error('Person cannot be found'));\n            }\n            console.log('Person: ' + JSON.stringify(result));\n            done(null, result);\n        });\n    }).catch(function(err) {\n       done(err);\n    });\n     */\n    convert(obj, typeConvert) {\n        const self = this;\n        if (_.isNil(obj))\n            return obj;\n        /**\n         * @constructor\n         * @augments DataObject\n         * @ignore\n         */\n        const DataObjectClass = getDataObjectClass_.call(self);\n        let src;\n        if (_.isArray(obj)) {\n            const arr = [];\n            obj.forEach(function(x) {\n                if (typeof x !== 'undefined' && x!=null) {\n                    const o = new DataObjectClass();\n                    if (typeof x === 'object') {\n                        _.assign(o, x);\n                    }\n                    else {\n                        src = {}; src[self.primaryKey] = x;\n                        _.assign(o, src);\n                    }\n                    if (typeConvert)\n                        convertInternal_.call(self, o);\n                    o.context = self.context;\n                    o.$$type = self.name;\n                    arr.push(o);\n                }\n            });\n            return arr;\n        }\n        else {\n            const result = new DataObjectClass();\n            if (typeof obj === 'object') {\n                _.assign(result, obj);\n            }\n            else {\n                src = {}; src[self.primaryKey] = obj;\n                _.assign(result, src);\n            }\n            if (typeConvert)\n                convertInternal_.call(self, result);\n            result.context = self.context;\n            result.$$type = self.name;\n            return result;\n        }\n    }\n\n    /**\n     * Extracts an identifier from the given parameter.\n     * If the parameter is an object then gets the identifier property, otherwise tries to convert the given parameter to an identifier\n     * suitable for this model.\n     * @param {*} obj\n     * @returns {*|undefined}\n     * @example\n     var id = context.model('User').idOf({ id:1, \"name\":\"anonymous\"});\n     */\n    idOf(obj) {\n        if (typeof obj === 'undefined')\n            return;\n        if (obj===null)\n            return;\n        if (typeof this.primaryKey === 'undefined' || this.primaryKey == null)\n            return;\n        if (typeof obj === 'object')\n            return obj[this.primaryKey];\n        return obj;\n    }\n\n    /**\n     * Casts the given object and returns an object that is going to be used against the underlying database.\n     * @param {*} obj - The source object which is going to be cast\n     * @param {number=} state - The state of the source object.\n     * @returns {*} - Returns an object which is going to be against the underlying database.\n     */\n    cast(obj, state) {\n       return cast_.call(this, obj, state);\n    }\n\n    /**\n     * Casts the given source object and returns a data object based on the current model.\n     * @param {*} dest - The destination object\n     * @param {*} src - The source object\n     * @param {Function} callback - A callback function where the first argument will contain the Error object if an error occurred, or null otherwise.\n     */\n    recast(dest, src, callback) {\n        callback = callback || function() {};\n        const self = this;\n        if (_.isNil(src)) {\n            callback();\n            return;\n        }\n        if (_.isNil(dest)) {\n            dest = { };\n        }\n        async.eachSeries(self.fields, function(field, cb) {\n            try {\n                if (src.hasOwnProperty(field.name)) {\n                    //ensure db property removal\n                    if (field.property && field.property!==field.name)\n                        delete dest[field.name];\n                    const mapping = self.inferMapping(field.name), name = field.property || field.name;\n                    if (_.isNil(mapping)) {\n                        //set destination property\n                        dest[name] = src[field.name];\n                        cb(null);\n                    }\n                    else if (mapping.associationType==='association') {\n\n                        if (typeof dest[name] === 'object' && dest[name] ) {\n                            //check associated object\n                            if (dest[name][mapping.parentField]===src[field.name]) {\n                                //return\n                                cb(null);\n                            }\n                            else {\n                                //load associated item\n                                const associatedModel = self.context.model(mapping.parentModel);\n                                associatedModel.where(mapping.parentField).equal(src[field.name]).silent().first(function(err, result) {\n                                    if (err) {\n                                        cb(err);\n                                    }\n                                    else {\n                                        dest[name] = result;\n                                        //return\n                                        cb(null);\n                                    }\n                                });\n                            }\n                        }\n                        else {\n                            //set destination property\n                            dest[name] = src[field.name];\n                            cb(null);\n                        }\n                    }\n                }\n                else {\n                    cb(null);\n                }\n            }\n            catch (e) {\n                cb(e);\n            }\n        }, function(err) {\n            callback(err);\n        });\n    }\n\n    /**\n     * Casts the given object and returns an object that was prepared for insert.\n     * @param obj {*} - The object to be cast\n     * @returns {*}\n     */\n    new(obj) {\n        return this.cast(obj);\n    }\n\n    /**\n     * Saves the given object or array of objects\n     * @param obj {*|Array}\n     * @param callback {Function=} - A callback function where the first argument will contain the Error object if an error occured, or null otherwise.\n     * @returns {Promise<T>|*} - If callback parameter is missing then returns a Promise object.\n     * @example\n     //save a new group (Sales)\n     var group = { \"description\":\"Sales Users\", \"name\":\"Sales\" };\n     context.model(\"Group\").save(group).then(function() {\n            console.log('A new group was created with ID ' + group.id);\n            done();\n        }).catch(function(err) {\n            done(err);\n        });\n     */\n    save(obj, callback) {\n        if (typeof callback !== 'function') {\n            const d = Q.defer();\n            save_.call(this, obj, function(err, result) {\n                if (err) { return d.reject(err); }\n                d.resolve(result);\n            });\n            return d.promise;\n        }\n        else {\n            return save_.call(this, obj, callback);\n        }\n    }\n\n    /**\n     * Represents the callback function of DataQueryable.filter() method.\n     * @callback DataModel~ObjectStateCallback\n     * @param {Error=} err\n     * @param {DataObjectState} state\n     */\n\n    /**\n     * Infers the state of the given object.\n     * @param {DataObject|*} obj - The source object\n     * @param {DataModel~ObjectStateCallback} callback - A callback function where the first argument will contain the Error object if an error occured, or null otherwise. The second argument will contain the result.\n     * @see DataObjectState\n     */\n    inferState(obj, callback) {\n        const self = this;\n        const e = { model:self, target:obj };\n        DataStateValidatorListener.prototype.beforeSave(e, function(err) {\n            //if error return error\n            if (err) { return callback(err); }\n            //otherwise return the calucated state\n            callback(null, e.state);\n        });\n    }\n\n    /**\n     * Gets an array of strings which contains the super types of this model e.g. User model may have ['Account','Thing'] as super types\n     * @returns {Array}\n     */\n    getSuperTypes() {\n        const result=[];\n        let baseModel = this.base();\n        while(baseModel!=null) {\n            result.unshift(baseModel.name);\n            baseModel = baseModel.base();\n        }\n        return result;\n    }\n\n    /**\n     * Updates an item or an array of items\n     * @param obj {*|Array} - The item or the array of items to update\n     * @param callback {Function=} - A callback function where the first argument will contain the Error object if an error occured, or null otherwise.\n     * @returns {Promise<T>|*} - If callback parameter is missing then returns a Promise object.\n     */\n    update(obj, callback) {\n        if (typeof callback !== 'function') {\n            const d = Q.defer();\n            update_.call(this, obj, function(err, result) {\n                if (err) { return d.reject(err); }\n                d.resolve(result);\n            });\n            return d.promise;\n        }\n        else {\n            return update_.call(this, obj, callback);\n        }\n    }\n\n    /**\n     * Inserts an item or an array of items\n     * @param obj {*|Array} - The item or the array of items to update\n     * @param callback {Function=} - A callback function where the first argument will contain the Error object if an error occured, or null otherwise.\n     * @returns {Promise<T>|*} - If callback parameter is missing then returns a Promise object.\n     */\n    insert(obj, callback) {\n        if (typeof callback !== 'function') {\n            const d = Q.defer();\n            insert_.call(this, obj, function(err, result) {\n                if (err) { return d.reject(err); }\n                d.resolve(result);\n            });\n            return d.promise;\n        }\n        else {\n            return insert_.call(this, obj, callback);\n        }\n    }\n\n    /**\n     * Deletes the given object or array of objects\n     * @param obj {*|Array} The item or the array of items to delete\n     * @param callback {Function=} - A callback function where the first argument will contain the Error object if an error occured, or null otherwise.\n     * @returns {Promise<T>|*} - If callback parameter is missing then returns a Promise object.\n     * @example\n     //remove group (Sales)\n     var group = { \"name\":\"Sales\" };\n     context.model(\"Group\").remove(group).then(function() {\n            done();\n        }).catch(function(err) {\n            done(err);\n        });\n     */\n    remove(obj, callback) {\n        if (typeof callback !== 'function') {\n            const d = Q.defer();\n            remove_.call(this, obj, function(err, result) {\n                if (err) { return d.reject(err); }\n                d.resolve(result);\n            });\n            return d.promise;\n        }\n        else {\n            return remove_.call(this, obj, callback);\n        }\n    }\n\n    /**\n     * Ensures model data adapter.\n     * @param callback\n     * @private\n     */\n    ensureModel(callback) {\n        const self = this;\n        if (self.name=='Migration') {\n            //do nothing\n            return callback();\n        }\n        //get migration model\n        const migrationModel = self.context.model(\"migration\");\n        //ensure migration\n        const version = _.isNil(self.version) ? '0.0': self.version;\n        migrationModel.where('appliesTo').equal(self.sourceAdapter).and('version').equal(version).count(function(err, result) {\n            if (err) { return callback(err); }\n            if (result>0) { return callback(); }\n            self.migrate(callback);\n        });\n    }\n\n    /**\n     * Performing an automatic migration of current data model based on the current model's definition.\n     * @param {Function} callback - A callback function where the first argument will contain the Error object if an error occured, or null otherwise. The second argument will contain the result.\n     */\n    migrate(callback) {\n        const self = this;\n        //cache: data model migration\n        //prepare migration cache\n        const conf = self.context.getConfiguration();\n        conf.cache = conf.cache || {};\n        conf.cache[self.name] = conf.cache[self.name] || { };\n        if (conf.cache[self.name].version==self.version) {\n            //model has already been migrated, so do nothing\n            return callback();\n        }\n        //do not migrate sealed models\n        if (self.sealed) {\n            return callback();\n        }\n        const context = self.context;\n        //do migration\n        const fields = _.filter(self.attributes, function(x) {\n            return (self.name == x.model) && (!x.many);\n        });\n\n        if ((fields==null) || (fields.length==0))\n            throw new Error(\"Migration is not valid for this model. The model has no fields.\");\n        const migration = new DataModelMigration();\n        migration.add = _.map(fields, function(x) {\n            return _.assign({ }, x);\n        });\n        migration.version = self.version!=null ? self.version : '0.0';\n        migration.appliesTo = self.sourceAdapter;\n        migration.model = self.name;\n        migration.description = sprintf.sprintf('%s migration (version %s)', this.title, migration.version);\n        if (context==null)\n            throw new Error(\"The underlying data context cannot be empty.\");\n\n        //get all related models\n        const models = [];\n        // self.fields.filter(function(x) {\n        //     return (!conf.dataTypes[x.type] && (self.name!=x.type));\n        // }).forEach(function(x) {\n        //     var m = context.model(x.type);\n        //     if (m) {\n        //         var m1 = models.find(function(y) {\n        //             return y.name == m.name;\n        //         });\n        //     }\n        // });\n        const db = context.db;\n        const baseModel = self.base();\n        if (baseModel!=null) {\n            models.push(baseModel);\n        }\n        //validate associated models\n        migration.add.forEach(function(x) {\n            //validate mapping\n            const mapping = self.inferMapping(x.name);\n            if (mapping && mapping.associationType === 'association') {\n                if (mapping.childModel === self.name) {\n                    //get parent model\n                    const parentModel = self.context.model(mapping.parentModel), attr = parentModel.getAttribute(mapping.parentField);\n                    if (attr) {\n                            if (attr.type === 'Counter') {\n                                x.type = 'Integer';\n                            }\n                            else {\n                                x.type = attr.type;\n                            }\n\n                    }\n                }\n                migration.indexes.push({\n                    name: \"INDEX_\" + migration.appliesTo.toUpperCase() + \"_\" + x.name.toUpperCase(),\n                    columns: [ x.name ]\n                });\n            }\n            else if (x.indexed === true) {\n                migration.indexes.push({\n                    name: \"INDEX_\" + migration.appliesTo.toUpperCase() + \"_\" + x.name.toUpperCase(),\n                    columns: [ x.name ]\n                });\n            }\n        });\n\n        //execute transaction\n        db.executeInTransaction(function(tr) {\n            if (models.length==0) {\n                self.emit('before.upgrade', { model:self }, function(err) {\n                    if (err) { return tr(err); }\n                    db.migrate(migration, function(err) {\n                        if (err) { return tr(err); }\n                        if (migration['updated']) {\n                            return tr();\n                        }\n                        //execute after migrate events\n                        self.emit('after.upgrade', { model:self }, function(err) {\n                            return tr(err);\n                        });\n                    });\n                });\n            }\n            else {\n                async.eachSeries(models,function(m, cb)\n                {\n                    if (m) {\n                        m.migrate(cb);\n                    }\n                    else {\n                        return cb();\n                    }\n                }, function(err) {\n                    if (err) { return tr(err); }\n                    self.emit('before.upgrade', { model:self }, function(err) {\n                        if (err) { return tr(err); }\n                        db.migrate(migration, function(err) {\n                            if (err) { return tr(err);  }\n                            if (migration['updated']) {\n                                return tr();\n                            }\n                            //execute after migrate events\n                            self.emit('after.upgrade', { model:self }, function(err) {\n                                return tr(err);\n                            });\n                        });\n                    });\n                });\n            }\n        }, function(err) {\n            if (!err) {\n                //set migration info to configuration cache (conf.cache.model.version=[current version])\n                //cache: data model migration\n                conf.cache[self.name].version = self.version;\n            }\n            callback(err);\n        });\n    }\n\n    /**\n     * Gets an instance of DataField class which represents the primary key of this model.\n     * @returns {DataField|*}\n     */\n    key() {\n        return this.attributes.find(function(x) { return x.primary==true; });\n    }\n\n    /**\n     * Gets an instance of DataField class based on the given name.\n     * @param {String} name - The name of the field.\n     * @return {DataField|*} - Returns a data field if exists. Otherwise returns null.\n     */\n    field(name) {\n        if (typeof name !== 'string')\n            return null;\n        return this.attributes.find(function(x) { return (x.name==name) || (x.property==name); });\n    }\n\n    /**\n     *\n     * @param {string|*} attr\n     * @param {string=} alias\n     * @returns {DataQueryable|QueryField|*}\n     */\n    fieldOf(attr, alias) {\n        const q = new DataQueryable(this);\n        return q.fieldOf(attr, alias);\n    }\n\n    /**\n     * Gets an instance of DataModelView class which represents a model view with the given name.\n     * @param {string} name - A string that represents the name of the view.\n     * @returns {DataModelView|undefined}\n     *@example\n     var view = context.model('Person').getDataView('summary');\n     *\n     */\n    getDataView(name) {\n        const self = this;\n        const re = new RegExp('^' + name.replace('$','\\$') + '$', 'ig');\n        const view = _.find(self.views, function(x) {\n            return re.test(x.name);\n        });\n        if (_.isNil(view))\n        {\n            return _.assign(new DataModelView(self), {\n                \"name\":\"default\",\n                \"title\":\"Default View\",\n                \"fields\": self.attributes.map(function(x) {\n                    return { \"name\":x.name }\n                })\n            });\n        }\n        return _.assign(new DataModelView(self), view);\n    }\n\n    /**\n     * Gets a field association mapping based on field attributes, if any. Otherwise returns null.\n     * @param {string} name - The name of the field\n     * @returns {DataAssociationMapping|undefined}\n     */\n    inferMapping(name) {\n        const self = this;\n        //ensure model cached mappings\n        const conf = self.context.getConfiguration().model(self.name);\n        if (typeof conf === \"undefined\" || conf == null) {\n            return;\n        }\n        if (typeof conf.mappings_ === 'undefined') {\n            conf.mappings_ = { };\n        }\n        if (typeof conf.mappings_[name] !== 'undefined') {\n            if (conf.mappings_[name] instanceof DataAssociationMapping)\n                return conf.mappings_[name];\n            else\n                return  new DataAssociationMapping(conf.mappings_[name]);\n        }\n        const field = self.field(name);\n        let result;\n        if (!field)\n            return null;\n        if (field.mapping) {\n            //if field model is different than the current model\n            if (field.model !== self.name) {\n                //if field mapping is already associated with the current model\n                // (child or parent model is equal to the current model)\n                if ((field.mapping.childModel===self.name) || (field.mapping.parentModel===self.name)) {\n                    //cache mapping\n                    conf.mappings_[name] = new DataAssociationMapping(field.mapping);\n                    //do nothing and return field mapping\n                    return conf.mappings_[name];\n                }\n                //get super types\n                const superTypes = self.getSuperTypes();\n                //map an inherited association\n                //1. super model has a foreign key association with another model\n                //(where super model is the child or the parent model)\n                if (field.mapping.associationType === 'association') {\n                    //create a new cloned association\n                    result = new DataAssociationMapping(field.mapping);\n                    //check super types\n                    if (superTypes.indexOf(field.mapping.childModel)>=0) {\n                        //set child model equal to current model\n                        result.childModel = self.name;\n                    }\n                    else if (superTypes.indexOf(field.mapping.parentModel)>=0) {\n                        //set child model equal to current model\n                        result.childModel = self.name;\n                    }\n                    else {\n                        //this is an exception\n                        throw new DataError(\"EMAP\",\"An inherited data association cannot be mapped.\");\n                    }\n                    //cache mapping\n                    conf.mappings_[name] = result;\n                    //and finally return the newly created DataAssociationMapping object\n                    return result;\n                }\n                //2. super model has a junction (many-to-many association) with another model\n                //(where super model is the child or the parent model)\n                else if (field.mapping.associationType === 'junction') {\n                    //create a new cloned association\n                    result = new DataAssociationMapping(field.mapping);\n                    if (superTypes.indexOf(field.mapping.childModel)>=0) {\n                        //set child model equal to current model\n                        result.childModel = self.name;\n                    }\n                    else if (superTypes.indexOf(field.mapping.parentModel)>=0) {\n                        //set parent model equal to current model\n                        result.parentModel = self.name;\n                    }\n                    else {\n                        //this is an exception\n                        throw new DataError(\"EMAP\",\"An inherited data association cannot be mapped.\");\n                    }\n                    //cache mapping\n                    conf.mappings_[name] = result;\n                    //and finally return the newly created DataAssociationMapping object\n                    return result;\n                }\n            }\n            //in any other case return the assocation mapping object\n            if (field.mapping instanceof DataAssociationMapping) {\n                //cache mapping\n                conf.mappings_[name] = field.mapping;\n                //and return\n                return field.mapping;\n            }\n            result = _.assign(new DataAssociationMapping(), field.mapping);\n            //cache mapping\n            conf.mappings_[name] = result;\n            //and return\n            return result;\n        }\n        else {\n            //get field model type\n            const associatedModel = self.context.model(field.type);\n            if ((typeof associatedModel === 'undefined') || (associatedModel == null))\n            {\n                if (typeof field.many === 'boolean' && field.many) {\n                    //validate primitive type mapping\n                    const tagMapping = inferTagMapping_.call(self, field);\n                    if (tagMapping) {\n                        //apply data association mapping to definition\n                        const definitionField = conf.fields.find(function(x) {\n                            return x.name === field.name;\n                        });\n                        definitionField.mapping = field.mapping = tagMapping;\n                        return new DataAssociationMapping(definitionField.mapping);\n                    }\n                }\n                return null;\n            }\n            //in this case we have two possible associations. Junction or Foreign Key association\n            //try to find a field that belongs to the associated model and holds the foreign key of this model.\n            const associatedField = associatedModel.attributes.find(function(x) {\n               return x.type === self.name;\n            });\n            if (associatedField)\n            {\n                if (associatedField.many)\n                {\n                    //return a data relation (parent model is the associated model)\n                    result = new DataAssociationMapping({\n                        parentModel:associatedModel.name,\n                        parentField:associatedModel.primaryKey,\n                        childModel:self.name,\n                        childField:field.name,\n                        associationType:'association',\n                        cascade:'null'\n                    });\n                    //cache mapping\n                    conf.mappings_[name] = result;\n                    //and finally return mapping\n                    return result;\n                }\n                else\n                {\n                    //return a data relation (parent model is the current model)\n                    result = new DataAssociationMapping({\n                        parentModel:self.name,\n                        parentField:self.primaryKey,\n                        childModel:associatedModel.name,\n                        childField:associatedField.name,\n                        associationType:'association',\n                        cascade:'null',\n                        refersTo:field.property || field.name\n                    });\n                    //cache mapping\n                    conf.mappings_[name] = result;\n                    //and finally return mapping\n                    return result;\n                }\n            }\n            else {\n\n                //validate pluralize\n                const re = new RegExp(DataModel.PluralExpression.source);\n                if (re.test(field.name) || field.many) {\n                    //return a data junction\n                    result = new DataAssociationMapping({\n                        associationAdapter: self.name.concat(_.upperFirst(field.name)),\n                        parentModel: self.name, parentField: self.primaryKey,\n                        childModel: associatedModel.name,\n                        childField: associatedModel.primaryKey,\n                        associationType: 'junction',\n                        cascade: 'delete'\n                    });\n                    //cache mapping\n                    conf.mappings_[name] = result;\n                    //and finally return mapping\n                    return result;\n                }\n                else {\n                    result = new DataAssociationMapping({\n                        parentModel: associatedModel.name,\n                        parentField: associatedModel.primaryKey,\n                        childModel: self.name,\n                        childField: field.name,\n                        associationType: 'association',\n                        cascade: 'null'\n                    });\n                    //cache mapping\n                    conf.mappings_[name] = result;\n                    //and finally return mapping\n                    return result;\n                }\n            }\n        }\n    }\n\n    /**\n     * Validates the given object against validation rules which are defined either by the data type or the definition of each attribute\n     <p>Read more about data validation <a href=\"DataValidatorListener.html\">here</a>.</p>\n     * @param {*} obj - The data object which is going to be validated\n     * @param {Function=} callback - A callback function where the first argument will contain the Error object if an error occured, or null otherwise.\n     * @returns {Promise|*} - If callback parameter is missing then returns a Promise object.\n     */\n    validateForUpdate(obj, callback) {\n        if (typeof callback !== 'function') {\n            const d = Q.defer();\n            validate_.call(this, obj, 2, function(err, result) {\n                if (err) { return d.reject(err); }\n                d.resolve(result);\n            });\n            return d.promise;\n        }\n        else {\n            return validate_.call(this, obj, callback);\n        }\n    }\n\n    /**\n     * Validates the given object against validation rules which are defined either by the data type or the definition of each attribute\n     <p>Read more about data validation <a href=\"DataValidatorListener.html\">here</a>.</p>\n     * @param {*} obj - The data object which is going to be validated\n     * @param {Function=} callback - A callback function where the first argument will contain the Error object if an error occured, or null otherwise.\n     * @returns {Promise|*} - If callback parameter is missing then returns a Promise object.\n     <p>Read more about data validation <a href=\"DataValidationListener.html\">here</a></p>\n     */\n    validateForInsert(obj, callback) {\n        if (typeof callback !== 'function') {\n            const d = Q.defer();\n            validate_.call(this, obj, 1, function(err, result) {\n                if (err) { return d.reject(err); }\n                d.resolve(result);\n            });\n            return d.promise;\n        }\n        else {\n            return validate_.call(this, obj, callback);\n        }\n    }\n\n    /**\n     * Sets the number of levels of the expandable attributes.\n     * The default value is 1 which means that any expandable attribute will be flat (without any other nested attribute).\n     * If the value is greater than 1 then the nested objects may contain other nested objects and so on.\n     * @param {Number=} value - A number which represents the number of levels which are going to be used in expandable attributes.\n     * @returns {DataQueryable}\n     * @example\n     //get orders, expand customer and get customer's nested objects if any.\n     context.model('Order')\n     .levels(2)\n     .orderByDescending('dateCreated)\n     .expand('customer')\n     .getItems().then(function(result) {\n            done(null, result);\n        }).catch(function(err) {\n            done(err);\n        });\n     */\n    levels(value) {\n        const result = new DataQueryable(this);\n        return result.levels(value);\n    }\n\n    /**\n     * Gets an array of active models which are derived from this model.\n     * @returns {Promise|*}\n     * @example\n     * context.model(\"Thing\").getSubTypes().then(function(result) {\n            console.log(JSON.stringify(result,null,4));\n            return done();\n        }).catch(function(err) {\n            return done(err);\n        });\n     */\n    getSubTypes() {\n        const self = this;\n        const d = Q.defer();\n        process.nextTick(function() {\n            const migrations = self.context.model(\"Migration\");\n            if (_.isNil(migrations)) {\n                return d.resolve([]);\n            }\n            migrations.silent()\n                .select(\"model\")\n                .groupBy(\"model\")\n                .all().then(function(result) {\n                const conf = self.context.getConfiguration(), arr = [];\n                result.forEach(function(x) {\n                    const m = conf.getModelDefinition(x.model);\n                    if (m && m.inherits === self.name) {\n                        arr.push(m.name);\n                    }\n                });\n                return d.resolve(arr);\n            }).catch(function(err) {\n                return d.reject(err)\n            });\n        });\n        return d.promise;\n    }\n\n    /**\n     * Gets an attribute of this data model.\n     * @param {string} name\n     */\n    getAttribute(name) {\n        if (_.isNil(name)) { return; }\n        if (typeof name !== 'string') { return; }\n        return this.attributes.find(function(x) { return x.name === name; });\n    }\n\n    /**\n     * Gets a collection of DataObject instances by executing the defined query.\n     * @returns {Promise|*}\n     */\n    getTypedItems() {\n        const self = this, d = Q.defer();\n        process.nextTick(function() {\n            const q = new DataQueryable(self);\n            q.getTypedItems().then(function (result) {\n                return d.resolve(result);\n            }).catch(function(err) {\n                return d.reject(err);\n            });\n        });\n        return d.promise;\n    }\n\n    /**\n     * Gets a result set that contains a collection of DataObject instances by executing the defined query.\n     * @returns {Promise|*}\n     */\n    getTypedList() {\n        const self = this, d = Q.defer();\n        process.nextTick(function() {\n            const q = new DataQueryable(self);\n            q.getTypedList().then(function (result) {\n                return d.resolve(result);\n            }).catch(function(err) {\n                return d.reject(err);\n            });\n        });\n        return d.promise;\n    }\n}\n\n/**\n * @memberOf DataModel\n * @private\n */\nfunction registerListeners_() {\n\n   //change: 2015-01-19\n   //description: change default max listeners (10) to 32 in order to avoid node.js message\n   // for reaching the maximum number of listeners\n   //author: k.barbounakis@gmail.com\n   if (typeof this.setMaxListeners === 'function') {\n       this.setMaxListeners(32);\n   }\n\n   //register system event listeners\n   this.removeAllListeners('before.save');\n   this.removeAllListeners('after.save');\n   this.removeAllListeners('before.remove');\n   this.removeAllListeners('after.remove');\n   this.removeAllListeners('before.execute');\n   this.removeAllListeners('after.execute');\n   this.removeAllListeners('after.upgrade');\n\n   //0. Permission Event Listener\n   const perms = require('./permission');\n   //1. State validator listener\n   this.on('before.save', DataStateValidatorListener.prototype.beforeSave);\n   this.on('before.remove', DataStateValidatorListener.prototype.beforeRemove);\n   //2. Default values Listener\n   this.on('before.save', DefaultValueListener.prototype.beforeSave);\n   //3. Calculated values listener\n   this.on('before.save', CalculatedValueListener.prototype.beforeSave);\n\n   //register before execute caching\n   if (this.caching=='always' || this.caching=='conditional') {\n       this.on('before.execute', DataCachingListener.prototype.beforeExecute);\n   }\n   //register after execute caching\n   if (this.caching=='always' || this.caching=='conditional') {\n       this.on('after.execute', DataCachingListener.prototype.afterExecute);\n   }\n\n   //migration listeners\n   this.on('after.upgrade',DataModelCreateViewListener.prototype.afterUpgrade);\n   this.on('after.upgrade',DataModelSeedListener.prototype.afterUpgrade);\n\n   /**\n    * change:8-Jun 2015\n    * description: Set lookup default listeners as obsolete.\n    */\n   ////register lookup model listeners\n   //if (this.type === 'lookup') {\n   //    //after save (clear lookup caching)\n   //    this.on('after.save', DataModelLookupCachingListener.afterSave);\n   //    //after remove (clear lookup caching)\n   //    this.on('after.remove', DataModelLookupCachingListener.afterRemove);\n   //}\n   //register configuration listeners\n   if (this.eventListeners) {\n       for (let i = 0; i < this.eventListeners.length; i++) {\n           const listener = this.eventListeners[i];\n           //get listener type (e.g. type: require('./custom-listener.js'))\n           if (listener.type && !listener.disabled)\n           {\n               /**\n                * Load event listener from the defined type\n                * @type DataEventListener\n                */\n               const m = listener.type.indexOf('/')==0 ? require(PathUtils.join(process.cwd(), listener.type)) : require(listener.type);\n               //if listener exports beforeSave function then register this as before.save event listener\n               if (typeof m.beforeSave == 'function')\n                   this.on('before.save', m.beforeSave);\n               //if listener exports afterSave then register this as after.save event listener\n               if (typeof m.afterSave == 'function')\n                   this.on('after.save', m.afterSave);\n               //if listener exports beforeRemove then register this as before.remove event listener\n               if (typeof m.beforeRemove == 'function')\n                   this.on('before.remove', m.beforeRemove);\n               //if listener exports afterRemove then register this as after.remove event listener\n               if (typeof m.afterRemove == 'function')\n                   this.on('after.remove', m.afterRemove);\n               //if listener exports beforeExecute then register this as before.execute event listener\n               if (typeof m.beforeExecute == 'function')\n                   this.on('before.execute', m.beforeExecute);\n               //if listener exports afterExecute then register this as after.execute event listener\n               if (typeof m.afterExecute == 'function')\n                   this.on('after.execute', m.afterExecute);\n               //if listener exports afterUpgrade then register this as after.upgrade event listener\n               if (typeof m.afterUpgrade == 'function')\n                   this.on('after.upgrade', m.afterUpgrade);\n           }\n       }\n   }\n   //before execute\n   this.on('before.execute', perms.DataPermissionEventListener.prototype.beforeExecute);\n   //before save (validate permissions)\n   this.on('before.save', perms.DataPermissionEventListener.prototype.beforeSave);\n   //before remove (validate permissions)\n   this.on('before.remove', perms.DataPermissionEventListener.prototype.beforeRemove);\n}\n\n/**\n * @memberOf DataModel\n * @private\n * @param {*} obj\n */\nfunction convertInternal_(obj) {\n    const self = this;\n\n    //get type parsers (or default type parsers)\n    const parsers = self.parsers || ParserUtils;\n\n    let parser;\n    let value;\n    self.attributes.forEach(function(x) {\n        value = obj[x.name];\n        if (value) {\n            //get parser for this type\n            parser = parsers['parse'.concat(x.type)];\n            //if a parser exists\n            if (typeof parser === 'function')\n            //parse value\n                obj[x.name] = parser(value);\n            else {\n                //get mapping\n                const mapping = self.inferMapping(x.name);\n                if (mapping) {\n                    if ((mapping.associationType==='association') && (mapping.childModel===self.name)) {\n                        const associatedModel = self.context.model(mapping.parentModel);\n                        if (associatedModel) {\n                            if (typeof value === 'object') {\n                                //set associated key value (e.g. primary key value)\n                                convertInternal_.call(associatedModel, value);\n                            }\n                            else {\n                                const field = associatedModel.field(mapping.parentField);\n                                if (field) {\n                                    //parse raw value\n                                    parser = parsers['parse'.concat(field.type)];\n                                    if (typeof parser === 'function')\n                                        obj[x.name] = parser(value);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    });\n}\n/**\n * @memberOf DataModel\n * @returns {*}\n * @constructor\n * @private\n */\nfunction getDataObjectClass_() {\n    const self = this;\n    let DataObjectClass = self['DataObjectClass'];\n    if (typeof DataObjectClass === 'undefined')\n    {\n        if (typeof self.classPath === 'string') {\n            DataObjectClass = require(self.classPath);\n        }\n        else {\n            //try to find class file with data model's name in lower case\n            // e.g. OrderDetail -> orderdetail-model.js (backward compatibility naming convention)\n            let classPath = PathUtils.join(process.cwd(),'app','models',self.name.toLowerCase().concat('-model.js'));\n            try {\n                DataObjectClass = require(classPath);\n            }\n            catch(e) {\n                if (e.code === 'MODULE_NOT_FOUND') {\n                    try {\n                        //if the specified class file was not found try to dasherize model name\n                        // e.g. OrderDetail -> order-detail-model.js\n                        classPath = PathUtils.join(process.cwd(),'app','models',_.dasherize(self.name).concat('-model.js'));\n                        DataObjectClass = require(classPath);\n                    }\n                    catch(e) {\n                        if (e.code === 'MODULE_NOT_FOUND') {\n                            if (typeof self.inherits === 'undefined' || self.inherits == null) {\n                                //if , finally, we are unable to find class file, load default DataObject class\n                                DataObjectClass = require('./object').DataObject;\n                            }\n                            else {\n                                DataObjectClass = getDataObjectClass_.call(self.base());\n                            }\n                        }\n                        else {\n                            throw e;\n                        }\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        //cache DataObject class property\n        self.context.getConfiguration().models[self.name]['DataObjectClass'] = self['DataObjectClass'] = DataObjectClass;\n    }\n    return DataObjectClass;\n}\n\n/**\n * @param {*} obj\n * @param {number=} state\n * @returns {*}\n * @private\n */\nfunction cast_(obj, state) {\n    const self = this;\n    if (obj==null)\n        return {};\n    if (typeof obj === 'object' && obj instanceof Array)\n    {\n        return obj.map(function(x) {\n            return cast_.call(self, x, state);\n        });\n    }\n    else\n    {\n        //ensure state (set default state to Insert=1)\n        state = _.isNil(state) ? (_.isNil(obj.$state) ? 1 : obj.$state) : state;\n        const result = {};\n        let name;\n        self.attributes.filter(function(x) {\n            if (x.model!==self.name) { return false; }\n            return (!x.readonly) ||\n                (x.readonly && (typeof x.calculation!=='undefined') && state==2) ||\n                (x.readonly && (typeof x.value!=='undefined') && state==1) ||\n                (x.readonly && (typeof x.calculation!=='undefined') && state==1);\n        }).filter(function(y) {\n            /*\n            change: 2016-02-27\n            author:k.barbounakis@gmail.com\n            description:exclude non editable attributes on update operation\n             */\n            return (y.state==2) ? (y.hasOwnProperty(\"editable\") ? y.editable : true) : true;\n        }).forEach(function(x) {\n            name = obj.hasOwnProperty(x.property) ? x.property : x.name;\n            if (obj.hasOwnProperty(name))\n            {\n                const mapping = self.inferMapping(name);\n                if (_.isNil(mapping))\n                    result[x.name] = obj[name];\n                else if ((mapping.associationType==='association') && (mapping.childModel===self.name)) {\n                    if ((typeof obj[name] === 'object') && (obj[name] != null))\n                    //set associated key value (e.g. primary key value)\n                        result[x.name] = obj[name][mapping.parentField];\n                    else\n                    //set raw value\n                        result[x.name] = obj[name];\n                }\n            }\n        });\n        return result;\n    }\n}\n\n\n/**\n * @param {*} obj\n * @param {number=} state\n * @returns {*}\n * @private\n */\nfunction castForValidation_(obj, state) {\n    const self = this;\n    if (obj==null)\n        return {};\n    if (typeof obj === 'object' && obj instanceof Array)\n    {\n        return obj.map(function(x) {\n            return castForValidation_.call(self, x, state);\n        });\n    }\n    else\n    {\n        //ensure state (set default state to Insert=1)\n        state = _.isNil(state) ? (_.isNil(obj.$state) ? 1 : obj.$state) : state;\n        const result = {};\n        let name;\n        self.attributes.filter(function(x) {\n            if (x.model!==self.name) {\n                if (ParserUtils.parseBoolean(x.cloned) == false)\n                        return false;\n            }\n            return (!x.readonly) ||\n                (x.readonly && (typeof x.calculation!=='undefined') && state==2) ||\n                (x.readonly && (typeof x.value!=='undefined') && state==1) ||\n                (x.readonly && (typeof x.calculation!=='undefined') && state==1);\n        }).filter(function(y) {\n            /*\n             change: 2016-02-27\n             author:k.barbounakis@gmail.com\n             description:exclude non editable attributes on update operation\n             */\n            return (y.state==2) ? (y.hasOwnProperty(\"editable\") ? y.editable : true) : true;\n        }).forEach(function(x) {\n            name = obj.hasOwnProperty(x.property) ? x.property : x.name;\n            if (obj.hasOwnProperty(name))\n            {\n                const mapping = self.inferMapping(name);\n                if (_.isNil(mapping))\n                    result[x.name] = obj[name];\n                else if ((mapping.associationType==='association') && (mapping.childModel===self.name)) {\n                    if ((typeof obj[name] === 'object') && (obj[name] != null))\n                    //set associated key value (e.g. primary key value)\n                        result[x.name] = obj[name][mapping.parentField];\n                    else\n                    //set raw value\n                        result[x.name] = obj[name];\n                }\n            }\n        });\n        return result;\n    }\n}\n\n/**\n *\n * @param {*|Array} obj\n * @param {Function} callback\n * @private\n */\nfunction save_(obj, callback) {\n    const self = this;\n    if (typeof obj=='undefined' || obj == null) {\n        callback.call(self, null);\n        return;\n    }\n    //ensure migration\n    self.migrate(function(err) {\n        if (err) { callback(err); return; }\n        //do save\n        const arr = [];\n        if (_.isArray(obj)) {\n            for (let i = 0; i < obj.length; i++)\n                arr.push(obj[i]);\n        }\n        else\n            arr.push(obj);\n        const db = self.context.db;\n        let res = [];\n        db.executeInTransaction(function(cb) {\n            async.eachSeries(arr, function(item, saveCallback) {\n                saveSingleObject_.call(self, item, function(err, result) {\n                    if (err) {\n                        saveCallback.call(self, err);\n                        return;\n                    }\n                    res.push(result.insertedId);\n                    saveCallback.call(self, null);\n                });\n            }, function(err) {\n                if (err) {\n                    res = null;\n                    cb(err);\n                    return;\n                }\n                cb(null);\n            });\n        }, function(err) {\n            callback.call(self, err, res);\n        });\n    });\n}\n\n/**\n * @param {*} obj\n * @param {Function} callback\n * @private\n */\nfunction saveBaseObject_(obj, callback) {\n    //ensure callback\n    callback = callback || function() {};\n    const self = this, base = self.base();\n    //if obj is an array of objects throw exception (invoke callback with error)\n    if (_.isArray(obj)) {\n        callback.call(self, new Error('Invalid argument. Base object cannot be an array.'));\n        return 0;\n    }\n    //if current model does not have a base model\n    if (base==null) {\n        //exit operation\n        callback.call(self, null);\n    }\n    else {\n        base.silent();\n        //perform operation\n        saveSingleObject_.call(base, obj, function(err, result) {\n            callback.call(self, err, result);\n        });\n    }\n}\n/**\n * @param {*} obj\n * @param {Function} callback\n * @private\n */\nfunction saveSingleObject_(obj, callback) {\n   const self = this;\n   callback = callback || function() {};\n   if (obj==null) {\n       callback.call(self);\n       return;\n   }\n   if (_.isArray(obj)) {\n       callback.call(self, new Error('Invalid argument. Source object cannot be an array.'));\n       return 0;\n   }\n   if (obj.$state == 4) {\n       return removeSingleObject_.call(self, obj, callback);\n   }\n   //get object state before any other operation\n   const state = obj.$state ? obj.$state : (obj[self.primaryKey]!=null ? 2 : 1);\n   const e = {\n       model: self,\n       target: obj,\n       state:state\n   };\n   //register nested objects listener (before save)\n   self.once('before.save', DataNestedObjectListener.prototype.beforeSave);\n   //register data association listener (before save)\n   self.once('before.save', DataObjectAssociationListener.prototype.beforeSave);\n   //register data association listener\n   self.once('after.save', DataObjectAssociationListener.prototype.afterSave);\n   //register unique constraint listener at the end of listeners collection (before emit)\n   self.once('before.save', UniqueConstraintListener.prototype.beforeSave);\n   //register data validators at the end of listeners collection (before emit)\n   self.once('before.save', DataValidatorListener.prototype.beforeSave);\n   //register not null listener at the end of listeners collection (before emit)\n   self.once('before.save', NotNullConstraintListener.prototype.beforeSave);\n   //execute before update events\n   self.emit('before.save', e, function(err) {\n       //if an error occured\n       if (err) {\n           //invoke callback with error\n           callback.call(self, err);\n       }\n       //otherwise execute save operation\n       else {\n           //save base object if any\n           saveBaseObject_.call(self, e.target, function(err, result) {\n               if (err) {\n                   callback.call(self, err);\n                   return;\n               }\n               //if result is defined\n               if (result!==undefined)\n               //sync original object\n                   _.assign(e.target, result);\n               //get db context\n               const db = self.context.db;\n               //create insert query\n               const target = self.cast(e.target, e.state);\n               let q = null;\n               const key = target[self.primaryKey];\n               if (e.state==1) {\n                   //create insert statement\n                   q = QueryExpression.create().insert(target).into(self.sourceAdapter);\n               }\n               else\n               {\n                   //create update statement\n                   if (key)\n                       delete target[self.primaryKey];\n                   if (Object.keys(target).length>0)\n                       q = QueryExpression.create().update(self.sourceAdapter).set(target).where(self.primaryKey).equal(e.target[self.primaryKey]);\n                   else\n                       //object does not have any properties other than primary key. do nothing\n                       q = new EmptyQueryExpression();\n               }\n               if (q instanceof EmptyQueryExpression) {\n                   if (key)\n                       target[self.primaryKey] = key;\n                   //get updated object\n                   self.recast(e.target, target, function(err) {\n                       if (err) {\n                           //and return error\n                           callback.call(self, err);\n                       }\n                       else {\n                           //execute after update events\n                           self.emit('after.save',e, function(err) {\n                               //and return\n                               return callback.call(self, err, e.target);\n                           });\n                       }\n                   });\n               }\n               else {\n                   const pm = e.model.field(self.primaryKey);\n                   let nextIdentity;\n                   const adapter = e.model.sourceAdapter;\n                   //search if adapter has a nextIdentity function (also primary key must be a counter and state equal to insert)\n                   if (pm.type === 'Counter' && typeof db.nextIdentity === 'function' && e.state==1) {\n                       nextIdentity = db.nextIdentity;\n                   }\n                   else {\n                       //otherwise use a dummy nextIdentity function\n                       nextIdentity = function(a, b, callback) { return callback(); }\n                   }\n                   nextIdentity.call(db, adapter, pm.name, function(err, insertedId) {\n                       if (err) { return callback.call(self, err); }\n                       if (insertedId) {\n                           //get object to insert\n                           if (q.$insert) {\n                               const o = q.$insert[adapter];\n                               if (o) {\n                                   //set the generated primary key\n                                   o[pm.name] = insertedId;\n                               }\n                           }\n                       }\n                       db.execute(q, null, function(err, result) {\n                           if (err) {\n                               callback.call(self, err);\n                           }\n                           else {\n                               if (key)\n                                   target[self.primaryKey] = key;\n                               //get updated object\n                               self.recast(e.target, target, function(err) {\n                                   if (err) {\n                                       callback.call(self, err);\n                                   }\n                                   else {\n                                       if (pm.type==='Counter' && typeof db.nextIdentity !== 'function' && e.state==1) {\n                                           //if data adapter contains lastIdentity function\n                                           const lastIdentity = db.lastIdentity || function(lastCallback) {\n                                                   if (_.isNil(result))\n                                                       lastCallback(null, { insertId: null});\n                                                   lastCallback(null, result);\n                                               };\n                                           lastIdentity.call(db, function(err, lastResult) {\n                                               if (lastResult)\n                                                   if (lastResult.insertId)\n                                                       e.target[self.primaryKey] = lastResult.insertId;\n                                               //raise after save listeners\n                                               self.emit('after.save',e, function(err) {\n                                                   //invoke callback\n                                                   callback.call(self, err, e.target);\n                                               });\n                                           });\n                                       }\n                                       else {\n                                           //raise after save listeners\n                                           self.emit('after.save',e, function(err) {\n                                               //invoke callback\n                                               callback.call(self, err, e.target);\n                                           });\n                                       }\n                                   }\n                               });\n                           }\n                       });\n                   });\n               }\n           });\n       }\n   });\n}\n\n/**\n * @param {*|Array} obj\n * @param {Function} callback\n * @private\n */\nfunction update_(obj, callback) {\n    const self = this;\n    //ensure callback\n    callback = callback || function() {};\n    if ((obj==null) || obj === undefined) {\n        callback.call(self, null);\n    }\n    //set state\n    if (_.isArray(obj)) {\n        obj.forEach(function(x) {x['$state'] = 2; })\n    }\n    else {\n        obj['$state'] = 2;\n    }\n    self.save(obj, callback);\n}\n\n/**\n * @param {*|Array} obj\n * @param {Function} callback\n * @private\n */\nfunction insert_(obj, callback) {\n    const self = this;\n    //ensure callback\n    callback = callback || function() {};\n    if ((obj==null) || obj === undefined) {\n        callback.call(self, null);\n    }\n    //set state\n    if (_.isArray(obj)) {\n        obj.forEach(function(x) {x['$state'] = 1; })\n    }\n    else {\n        obj['$state'] = 1;\n    }\n    self.save(obj, callback);\n}\n\n/**\n *\n * @param {*|Array} obj\n * @param {Function} callback\n * @private\n */\nfunction remove_(obj, callback) {\n    const self = this;\n    if (obj==null)\n    {\n        callback.call(self, null);\n        return;\n    }\n\n    self.migrate(function(err) {\n        if (err) { callback(err); return; }\n        const arr = [];\n        if (_.isArray(obj)) {\n            for (let i = 0; i < obj.length; i++)\n                arr.push(obj[i]);\n        }\n        else\n            arr.push(obj);\n        //delete objects\n        const db = self.context.db;\n        db.executeInTransaction(function(cb) {\n            async.eachSeries(arr, function(item, removeCallback) {\n                removeSingleObject_.call(self, item, function(err) {\n                    if (err) {\n                        removeCallback.call(self, err);\n                        return;\n                    }\n                    removeCallback.call(self, null);\n                });\n            }, function(err) {\n                if (err) {\n                    cb(err);\n                    return;\n                }\n                cb(null);\n            });\n        }, function(err) {\n            callback.call(self, err);\n        });\n    });\n}\n\n/**\n * @param {Object} obj\n * @param {Function} callback\n * @private\n */\nfunction removeSingleObject_(obj, callback) {\n   const self = this;\n   callback = callback || function() {};\n   if (obj==null) {\n       callback.call(self);\n       return;\n   }\n   if (_.isArray(obj)) {\n       callback.call(self, new Error('Invalid argument. Object cannot be an array.'));\n       return 0;\n   }\n   const e = {\n       model: self,\n       target: obj,\n       state: 4\n   };\n   //register nested objects listener\n   self.once('before.remove', DataNestedObjectListener.prototype.beforeRemove);\n   //register data association listener\n   self.once('before.remove', DataObjectAssociationListener.prototype.afterSave);\n   //execute before update events\n   self.emit('before.remove', e, function(err) {\n       //if an error occurred\n       if (err) {\n           //invoke callback with error\n           return callback(err);\n       }\n       //get db context\n       const db = self.context.db;\n       //create delete query\n       const q = QueryExpression.create().delete(self.sourceAdapter).where(self.primaryKey).equal(obj[self.primaryKey]);\n       //execute delete query\n       db.execute(q, null, function(err) {\n           if (err) {\n               return callback(err);\n           }\n           //remove base object\n           removeBaseObject_.call(self, e.target, function(err, result) {\n               if (err) {\n                   return callback(err);\n               }\n               if (typeof result !== 'undefined' && result != null) {\n                   _.assign(e.target, result);\n               }\n               //execute after remove events\n               self.emit('after.remove',e, function(err) {\n                   //invoke callback\n                   return callback(err, e.target);\n               });\n           });\n       });\n   });\n\n}\n\n/**\n * @param {*} obj\n * @param {Function} callback\n * @private\n */\nfunction removeBaseObject_(obj, callback) {\n    //ensure callback\n    callback = callback || function() {};\n    const self = this, base = self.base();\n    //if obj is an array of objects throw exception (invoke callback with error)\n    if (_.isArray(obj)) {\n        callback.call(self, new Error('Invalid argument. Object cannot be an array.'));\n        return 0;\n    }\n    //if current model does not have a base model\n    if (_.isNil(base)) {\n        //exit operation\n        callback.call(self, null);\n    }\n    else {\n        base.silent();\n        //perform operation\n        removeSingleObject_.call(base, obj, function(err, result) {\n            callback.call(self, err, result);\n        });\n    }\n}\n\n/**\n * Validates that the given string is plural or not.\n * @param s {string}\n * @returns {boolean}\n * @private\n */\nDataModel.PluralExpression = /([a-zA-Z]+?)([e']s|[^aiou]s)$/;\n\n\n/**\n * @param {DataField|*} field\n * @param {DataAssociationMapping|*} mapping\n * @private\n */\nfunction cacheMapping_(field, mapping) {\n  if (_.isNil(field))\n      return;\n  //cache mapping\n  const cachedModel = this.getConfiguration().models[this.name];\n  if (cachedModel) {\n      let cachedField = cachedModel.fields.find(function(x) { return x.name === field.name });\n      if (typeof cachedField === 'undefined') {\n          //search in attributes\n          cachedField = this.attributes.find(function(x) { return x.name === field.name });\n          if (cachedField) {\n              //add overriden field\n              cachedModel.fields.push(_.assign({ }, cachedField));\n              cachedField = cachedModel.fields[cachedModel.fields.length-1];\n              //clear attributes\n              this._clearAttributes();\n          }\n      }\n      if (cachedField)\n      //add mapping\n          cachedField.mapping = mapping;\n  }\n}\n\n\n/**\n * @function\n * @param {*} obj\n * @param {number} state\n * @param {Function} callback\n * @private\n */\nfunction validate_(obj, state, callback) {\n    /**\n     * @type {DataModel|*}\n     */\n    const self = this;\n    if (_.isNil(obj)) {\n        return callback();\n    }\n    //get object copy (based on the defined state)\n    const objCopy = castForValidation_.call (self, obj, state);\n\n    const attributes = self.attributes.filter(function(x) {\n        if (x.model!==self.name) {\n            if (!x.cloned)\n                return false;\n        }\n        return (!x.readonly) ||\n            (x.readonly && (typeof x.calculation!=='undefined') && state==2) ||\n            (x.readonly && (typeof x.value!=='undefined') && state==1) ||\n            (x.readonly && (typeof x.calculation!=='undefined') && state==1);\n    }).filter(function(y) {\n        return (state==2) ? (y.hasOwnProperty(\"editable\") ? y.editable : true) : true;\n    });\n\n    async.eachSeries(attributes, function(attr, cb) {\n        let validator, validationResult;\n        //get value\n        const value = objCopy[attr.name];\n        //build validators array\n        const arrValidators=[];\n        //-- RequiredValidator\n        if (attr.hasOwnProperty('nullable') && !attr.nullable)\n        {\n            if (state==1 && !attr.primary) {\n                arrValidators.push(new RequiredValidator());\n            }\n            else if (state==2 && !attr.primary && objCopy.hasOwnProperty(attr.name)) {\n                arrValidators.push(new RequiredValidator());\n            }\n        }\n        //-- MaxLengthValidator\n        if (attr.hasOwnProperty('size') && objCopy.hasOwnProperty(attr.name)) {\n            if (!(attr.validation && attr.validation.maxLength))\n                arrValidators.push(new MaxLengthValidator(attr.size));\n        }\n        //-- CustomValidator\n        if (attr.validation && attr.validation['validator'] && objCopy.hasOwnProperty(attr.name)) {\n            let validatorModule;\n            try {\n                if (/^\\./ig.test(attr.validation['validator'])) {\n                    const modulePath = PathUtils.join(process.cwd(), attr.validation['validator']);\n                    validatorModule = require(modulePath);\n                }\n                else {\n                    validatorModule = require(attr.validation['validator']);\n                }\n            }\n            catch (e) {\n                TraceUtils.debug(sprintf.sprintf(\"Data validator module (%s) cannot be loaded\", attr.validation.type));\n                TraceUtils.debug(e);\n                return cb(e);\n            }\n            if (typeof validatorModule.createInstance !== 'function') {\n                TraceUtils.debug(sprintf.sprintf(\"Data validator module (%s) does not export createInstance() method.\", attr.validation.type));\n                return cb(new Error(\"Invalid data validator type.\"));\n            }\n            arrValidators.push(validatorModule.createInstance(attr));\n        }\n        //-- DataTypeValidator #1\n        if (attr.validation && objCopy.hasOwnProperty(attr.name)) {\n            if (typeof attr.validation.type === 'string') {\n                arrValidators.push(new DataTypeValidator(attr.validation.type));\n            }\n            else {\n                //convert validation data to pseudo type declaration\n                const validationProperties = {\n                    properties:attr.validation\n                };\n                arrValidators.push(new DataTypeValidator(validationProperties));\n            }\n        }\n        //-- DataTypeValidator #2\n        if (attr.type && objCopy.hasOwnProperty(attr.name)) {\n            arrValidators.push(new DataTypeValidator(attr.type));\n        }\n\n        if (arrValidators.length == 0) {\n            return cb();\n        }\n        //do validation\n        async.eachSeries(arrValidators, function(validator, cb) {\n\n            //set context\n            if (typeof validator.setContext === 'function') {\n                validator.setContext(self.context);\n            }\n            //set target\n            validator.target = obj;\n            if (typeof validator.validateSync === 'function') {\n                validationResult = validator.validateSync(value);\n                if (validationResult) {\n                    return cb(new DataError(validationResult.code || \"EVALIDATE\",validationResult.message, validationResult.innerMessage, self.name, attr.name));\n                }\n                else {\n                    return cb();\n                }\n            }\n            else if (typeof validator.validate === 'function') {\n                return validator.validate(value, function(err, validationResult) {\n                    if (err) {\n                        return cb(err);\n                    }\n                    if (validationResult) {\n                        return cb(new DataError(validationResult.code || \"EVALIDATE\",validationResult.message, validationResult.innerMessage, self.name, attr.name));\n                    }\n                    return cb();\n                });\n            }\n            else {\n                TraceUtils.debug(sprintf.sprintf(\"Data validator (%s) does not have either validate() or validateSync() methods.\", attr.validation.type));\n                return cb(new Error(\"Invalid data validator type.\"));\n            }\n        }, function(err) {\n            return cb(err);\n        });\n\n    }, function(err) {\n        return callback(err);\n    });\n}\n"]}