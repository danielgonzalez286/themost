{"version":3,"sources":["index.es6"],"names":["QueryExpression","QueryUtils","entity","create","fields","q","select","apply","obj","insert","update","delete"],"mappings":";;;;;;;qjBAAA;;;;;;;;;;;;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;IANQA,e,UAAAA,e;;;;IAQKC,U,WAAAA,U;;;;;;;;AACT;;;;0BAIaC,M,EAAQ;AACjB,aAAOF,gBAAgBG,MAAhB,CAAuBD,MAAvB,CAAP;AACH;AACD;;;;;;;2BAIcE,M,EAAQ;AAClB,UAAMC,IAAI,IAAIL,eAAJ,EAAV;AACA,aAAOK,EAAEC,MAAF,CAASC,KAAT,CAAeF,CAAf,EAAiBD,MAAjB,CAAP;AACH;AACD;;;;;;;2BAIcI,G,EAAK;AACf,UAAMH,IAAI,IAAIL,eAAJ,EAAV;AACA,aAAOK,EAAEI,MAAF,CAASD,GAAT,CAAP;AACH;;AAED;;;;;;;2BAIcN,M,EAAQ;AAClB,UAAMG,IAAI,IAAIL,eAAJ,EAAV;AACA,aAAOK,EAAEK,MAAF,CAASR,MAAT,CAAP;AACH;;AAED;;;;;;;4BAIcA,M,EAAQ;AAClB,UAAMG,IAAI,IAAIL,eAAJ,EAAV;AACA,aAAOK,EAAEM,MAAF,CAAST,MAAT,CAAP;AACH","file":"index.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\n\nimport {QueryExpression} from './query';\n\nexport * from './utils';\nexport * from './expressions';\nexport * from './odata';\nexport * from './formatter';\nexport * from './query';\n\nexport class QueryUtils {\n    /**\n     * Initializes a select query expression by specifying the entity name\n     * @param {string|*} entity - The name of the entity\n     */\n    static query(entity) {\n        return QueryExpression.create(entity);\n    }\n    /**\n     * Initializes a select query expression\n     * @param {*...} fields\n     */\n    static select(fields) {\n        const q = new QueryExpression();\n        return q.select.apply(q,fields);\n    }\n    /**\n     * Initializes an insert query expression\n     * @param {*} obj - The object to insert\n     */\n    static insert(obj) {\n        const q = new QueryExpression();\n        return q.insert(obj);\n    }\n\n    /**\n     * Initializes an update query expression\n     * @param {string|*} entity - The name of the entity\n     */\n    static update(entity) {\n        const q = new QueryExpression();\n        return q.update(entity);\n    }\n\n    /**\n     * Initializes a delete query expression\n     * @param {string} entity - The name of the entity\n     */\n    static delete(entity) {\n        const q = new QueryExpression();\n        return q.delete(entity);\n    }\n\n\n}"]}