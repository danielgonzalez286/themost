{"version":3,"sources":["engines/ejs.es6"],"names":["HttpViewContext","HttpNotFoundError","LangUtils","_","ejs","path","fs","HttpViewEngine","EjsEngine","context","name","fn","filters","filename","data","callback","self","readFile","err","str","code","matcher","properties","test","matches","exec","JSON","parse","replace","viewContext","getContext","partial","model","assign","getViewContext","Object","defineProperty","get","enumerable","configurable","request","route","parseBoolean","layout","getApplication","mapExecutionPath","resolve","body","render","layoutData","result","e","call"],"mappings":"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","file":"ejs.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\nimport 'source-map-support/register';\nimport {HttpViewContext} from '../mvc';\nimport {HttpNotFoundError} from '@themost/common/errors';\nimport {LangUtils} from '@themost/common/utils';\nimport _ from 'lodash';\nimport ejs from 'ejs';\nimport path from 'path';\nimport fs from 'fs';\nimport {HttpViewEngine} from \"../interfaces\";\n\n/**\n * @class\n */\nexport default class EjsEngine extends HttpViewEngine {\n    /**\n     *\n     * @param {HttpContext} context\n     */\n    constructor(context) {\n        super(context);\n    }\n\n    /**\n     * Adds a EJS filter to filters collection.\n     * @param {string} name\n     * @param {Function} fn\n     */\n    filter(name, fn) {\n        ejs.filters[name] = fn;\n    }\n\n    /**\n     *\n     * @param {string} filename\n     * @param {*=} data\n     * @param {Function} callback\n     */\n    render(filename, data, callback) {\n        const self = this;\n        try {\n            fs.readFile(filename,'utf-8', function(err, str) {\n                try {\n                    if (err) {\n                        if (err.code === 'ENOENT') {\n                            //throw not found exception\n                            return callback(new HttpNotFoundError('View layout cannot be found.'));\n                        }\n                        return callback(err);\n                    }\n                    else {\n                        //get view header (if any)\n                        const matcher = /^(\\s*)<%#(.*?)%>/;\n                        /**\n                         *\n                         * @type {{layout:string}}\n                         */\n                        let properties = { };\n                        if (matcher.test(str)) {\n                            const matches = matcher.exec(str);\n                            properties = JSON.parse(matches[2]);\n                            //remove match\n                            str = str.replace(matcher,'');\n                        }\n                        //create view context\n                        const viewContext = new HttpViewContext(self.getContext());\n                        let partial = false;\n                        const model = _.assign(properties, data, {\n                            getContext: function() {\n                                return self.getContext();\n                            },\n                            getViewContext: function() {\n                                return viewContext;\n                            }\n                        });\n                        _.assign(model, properties || { });\n                        //for backward compatibility issues add locals.context property\n                        //this property is going to be deprecated (use locals.getContext() instead)\n                        Object.defineProperty(model, 'context', {\n                            get: function() {\n                                return self.getContext();\n                            },\n                            enumerable:false, configurable:false\n                        });\n                        if (self.getContext() && self.getContext().request.route)\n                            partial = LangUtils.parseBoolean(self.getContext().request.route['partial']);\n                        if (properties.layout && !partial) {\n                            let layout;\n                            if (/^\\//.test(properties.layout)) {\n                                //relative to application folder e.g. /views/shared/master.html.ejs\n                                layout = self.getContext().getApplication().mapExecutionPath(properties.layout);\n                            }\n                            else {\n                                //relative to view file path e.g. ./../master.html.html.ejs\n                                layout = path.resolve(filename, properties.layout);\n                            }\n\n                            viewContext.body = ejs.render(str, {\n                                model: model\n                            });\n                            //render master layout\n                            fs.readFile(layout,'utf-8', function(err, layoutData) {\n                                try {\n                                    if (err) {\n                                        if (err.code === 'ENOENT') {\n                                            return callback(new HttpNotFoundError('Master view layout cannot be found'));\n                                        }\n                                        return callback(err);\n                                    }\n                                    const result = ejs.render(layoutData, {\n                                        model:model\n                                    });\n                                    callback(null, result);\n                                }\n                                catch (e) {\n                                    callback(e);\n                                }\n                            });\n                        }\n                        else {\n                            const result = ejs.render(str, {\n                                model:model\n                            });\n                            callback(null, result);\n                        }\n                    }\n                }\n                catch (e) {\n                    callback(e);\n                }\n            });\n\n        }\n        catch (e) {\n            callback.call(self, e);\n        }\n    }\n}\n"]}