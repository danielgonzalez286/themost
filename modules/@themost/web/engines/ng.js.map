{"version":3,"sources":["engines/ng.es6"],"names":["fs","_","HttpNotFoundError","HttpViewEngine","HttpViewContext","DirectiveHandler","PostExecuteResultArgs","NgEngine","context","filename","data","callback","self","readFile","err","str","code","viewContext","getContext","body","directiveHandler","args","assign","postExecuteResult"],"mappings":";;;;;;;;;AASA;;AACA;;IAAOA,E;;AACP;;IAAOC,C;;AACP;;IAAQC,iB,WAAAA,iB;;AACR;;IAAQC,c,eAAAA,c;;AACR;;IAAQC,e,QAAAA,e;;AACR;;IAAQC,gB,WAAAA,gB;IAAiBC,qB,WAAAA,qB;;;;;;;;+eAfzB;;;;;;;;;;;AAiBA;;;;;;IAMqBC,Q;;;AACjB;;;;AAIA,sBAAYC,OAAZ,EAAqB;AAAA;;AAAA,mHACXA,OADW;AAEpB;;AAED;;;;;;;;;;+BAMOC,Q,EAAUC,I,EAAMC,Q,EAAU;AAC7B,gBAAMC,OAAO,IAAb;AACAZ,eAAGa,QAAH,CAAYJ,QAAZ,EAAqB,OAArB,EAA8B,UAASK,GAAT,EAAcC,GAAd,EAAmB;AAC7C,oBAAI;AACA,wBAAID,GAAJ,EAAS;AACL,4BAAIA,IAAIE,IAAJ,KAAa,QAAjB,EAA2B;AACvB;AACA,mCAAOL,SAAS,IAAIT,iBAAJ,CAAsB,8BAAtB,CAAT,CAAP;AACH;AACD,+BAAOS,SAASG,GAAT,CAAP;AACH;AACD,wBAAMG,cAAc,IAAIb,eAAJ,CAAoBQ,KAAKM,UAAL,EAApB,CAApB;AACAD,gCAAYE,IAAZ,GAAmBJ,GAAnB;AACAE,gCAAYP,IAAZ,GAAmBA,IAAnB;AACA,wBAAMU,mBAAmB,IAAIf,gBAAJ,EAAzB;AACA,wBAAMgB,OAAOpB,EAAEqB,MAAF,CAAS,IAAIhB,qBAAJ,EAAT,EAAsC;AAC/C,mCAAWM,KAAKM,UAAL,EADoC;AAE/C,kCAASD;AAFsC,qBAAtC,CAAb;AAIAG,qCAAiBG,iBAAjB,CAAmCF,IAAnC,EAAyC,UAASP,GAAT,EAAc;AACnD,4BAAIA,GAAJ,EAAS;AAAE,mCAAOH,SAASG,GAAT,CAAP;AAAuB;AAClC,+BAAOH,SAAS,IAAT,EAAeM,YAAYE,IAA3B,CAAP;AACH,qBAHD;AAKH,iBArBD,CAsBA,OAAOL,GAAP,EAAY;AACRH,6BAASG,GAAT;AACH;AACJ,aA1BD;AA2BH;;;;EA5CiCX,c;;kBAAjBI,Q","file":"ng.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\nimport 'source-map-support/register';\nimport fs from 'fs';\nimport _ from 'lodash';\nimport {HttpNotFoundError} from '@themost/common/errors';\nimport {HttpViewEngine} from \"../interfaces\";\nimport {HttpViewContext} from \"../mvc\";\nimport {DirectiveHandler,PostExecuteResultArgs} from \"../angular/module\";\n\n/**\n * @class\n * @classdesc NgEngine instance implements Angular JS View Engine for Server\n * @property {HttpContext} context\n * @augments {HttpViewEngine}\n */\nexport default class NgEngine extends HttpViewEngine {\n    /**\n     * @constructor\n     * @param {HttpContext} context\n     */\n    constructor(context) {\n        super(context);\n    }\n\n    /**\n     *\n     * @param {string} filename\n     * @param {*=} data\n     * @param {Function} callback\n     */\n    render(filename, data, callback) {\n        const self = this;\n        fs.readFile(filename,'utf-8', function(err, str) {\n            try {\n                if (err) {\n                    if (err.code === 'ENOENT') {\n                        //throw not found exception\n                        return callback(new HttpNotFoundError('View layout cannot be found.'));\n                    }\n                    return callback(err);\n                }\n                const viewContext = new HttpViewContext(self.getContext());\n                viewContext.body = str;\n                viewContext.data = data;\n                const directiveHandler = new DirectiveHandler();\n                const args = _.assign(new PostExecuteResultArgs(), {\n                    \"context\": self.getContext(),\n                    \"target\":viewContext\n                });\n                directiveHandler.postExecuteResult(args, function(err) {\n                    if (err) { return callback(err); }\n                    return callback(null, viewContext.body);\n                });\n\n            }\n            catch (err) {\n                callback(err);\n            }\n        });\n    }\n}"]}