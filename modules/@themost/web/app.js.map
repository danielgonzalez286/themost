{"version":3,"sources":["app.es6"],"names":["_","util","http","path","fs","url","async","querystring","crypto","SequentialEventEmitter","TraceUtils","RandomUtils","LangUtils","HttpError","HttpServerError","HttpNotFoundError","HttpContext","da","HTTP_SERVER_DEFAULT_BIND","HTTP_SERVER_DEFAULT_PORT","handleRequestInternal","request","response","callback","self","context","createContext","indexOf","assign","params","parse","substring","form","files","processRequest","err","listeners","length","onError","end","emit","error","finalize","createRequestInternal","options","opt","IncomingMessage","method","httpVersion","headers","host","accept","connection","cookie","cookies","session","query","body","createResponseInternal","req","ServerResponse","htmlErrorInternal","isNil","ejs","require","test","readFile","join","__dirname","readErr","data","log","str","render","httpErr","message","stack","e","writeHead","status","write","startInternal","config","init","opts","bind","process","env","IP","port","PORT","server_","createServer","getServer","listen","format","call","httpApplicationErrors","application","html","onHtmlError","text","NODE_ENV","isEmpty","innerMessage","json","result","mvc","HttpJsonResult","code","execute","unauthorized","settings","auth","page","loginPage","HttpRedirectResult","concat","encodeURIComponent","HttpHandler","Events","HttpDataContext","name","type","ApplicationOptions","ApplicationConfig","adapters","engines","mimes","handlers","routes","adapterTypes","dataTypes","locales","HttpApplication","executionPath","cwd","configPath","ng","module","service","$context","providerPath","provider","mapPath","svc","createInstance","Error","$cache","cache","Object","defineProperty","get","HttpCache","set","value","configurable","enumerable","development","errors","randomHex","cfg","current","defaultApplicationConfig","defaultHandlers","i","item","filter","x","push","forEach","h","handlerPath","handlerModule","handler","default","HandlerCtor","directives","apply","s","uri","pathname","file","exists","stat","stats","isFile","md5","createHash","update","mtime","toString","digest","requestETag","prototype","resolveETag","extensionName","extname","arr","extension","algorithm","key","cipher","createCipher","final","decipher","createDecipher","username","defaultOptions","user","dateCreated","Date","expires","JSON","stringify","_extend","isDate","toUTCString","encrypt","setHeader","decrypt","currentHandler","er","resource","adapter","find","invariantName","adapterType","m","ev","j","on","https","httpModule","protocol","res","setEncoding","chunk","statusCode","encoding","fn","account","unattendedExecutionAccount","authenticationType","extensionFolder","existsSync","readdirSync","extensionPath","hostname","executeExternalRequest","_header","split","header","k","substr","isArray","output","outputEncodings","_headerSent","cluster","clusters","cpus","parseInt","isMaster","debug","execArgv","debugPort","exec","setupMaster","fork","pop","ctor","directive","controllers","c","__current__","global","extend"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\n'use strict';\nimport {_} from 'lodash';\nimport util from 'util';\nimport http from 'http';\nimport path from 'path';\nimport fs from 'fs';\nimport url from 'url';\nimport async from 'async';\nimport querystring from 'querystring';\nimport crypto from 'crypto';\nimport {SequentialEventEmitter} from '@themost/common/emitter';\nimport {TraceUtils,RandomUtils,LangUtils} from '@themost/common/utils';\nimport {HttpError,HttpServerError,HttpNotFoundError} from '@themost/common/errors';\nimport {HttpContext} from './context';\nimport da from 'most-data';\n\n\nconst HTTP_SERVER_DEFAULT_BIND = '127.0.0.1';\nconst HTTP_SERVER_DEFAULT_PORT = 3000;\n\n/**\n * @private\n * @param {ClientRequest} request\n * @param {ServerResponse} response\n * @param callback\n */\nfunction handleRequestInternal(request, response, callback)\n{\n    const self = this, context = self.createContext(request, response);\n    //add query string\n    if (request.url.indexOf('?') > 0)\n        _.assign(context.params, querystring.parse(request.url.substring(request.url.indexOf('?') + 1)));\n    //add form\n    if (request.form)\n        _.assign(context.params, request.form);\n    //add files\n    if (request.files)\n        _.assign(context.params, request.files);\n\n    self.processRequest(context, function (err) {\n        if (err) {\n            if (self.listeners('error').length == 0) {\n                self.onError(context, err, function () {\n                    response.end();\n                    callback();\n                });\n            }\n            else {\n                //raise application error event\n                self.emit('error', { context:context, error:err } , function () {\n                    response.end();\n                    callback();\n                });\n            }\n        }\n        else {\n            context.finalize(function() {\n                response.end();\n                callback();\n            });\n        }\n    });\n}\n/**\n * @private\n * @param {*} options\n */\nfunction createRequestInternal(options) {\n    const opt = options ? options : {};\n    const request = new http.IncomingMessage();\n    request.method = (opt.method) ? opt.method : 'GET';\n    request.url = (opt.url) ? opt.url : '/';\n    request.httpVersion = '1.1';\n    request.headers = (opt.headers) ? opt.headers : {\n            host: 'localhost',\n            'user-agent': 'Mozilla/5.0 (X11; Linux i686; rv:10.0) Gecko/20100101 Firefox/22.0',\n            accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n            'accept-language': 'en-US,en;q=0.5',\n            'accept-encoding': 'gzip, deflate',\n            connection: 'keep-alive',\n            'cache-control': 'max-age=0' };\n    if (opt.cookie)\n        request.headers.cookie = opt.cookie;\n    request.cookies = (opt.cookies) ? opt.cookies : {};\n    request.session = (opt.session) ? opt.session : {};\n    request.params = (opt.params) ? opt.params : {};\n    request.query = (opt.query) ? opt.query : {};\n    request.form = (opt.form) ? opt.form : {};\n    request.body = (opt.body) ? opt.body : {};\n    request.files = (opt.files) ? opt.files : {};\n    return request;\n}\n\n/**\n * Creates a mock-up server response\n * @param {ClientRequest} req\n * @returns {ServerResponse|*}\n * @private\n */\nfunction createResponseInternal(req) {\n    return new http.ServerResponse(req);\n}\n\n/**\n *\n * @param {HttpContext} context\n * @param {Error|*} err\n * @param {Function} callback\n * @private\n */\nfunction htmlErrorInternal(context, err, callback) {\n    try {\n        if (_.isNil(context)) {\n            callback(err);\n            return;\n        }\n        const request = context.request, response = context.response, ejs = require('ejs');\n        if (_.isNil(request) || _.isNil(response)) {\n            callback(err);\n            return;\n        }\n        //HTML custom errors\n        if (/text\\/html/g.test(request.headers.accept)) {\n            fs.readFile(path.join(__dirname, './resources/http-error.html.ejs'), 'utf8', function (readErr, data) {\n                if (readErr) {\n                    //log process error\n                    TraceUtils.log(readErr);\n                    //continue error execution\n                    callback(err);\n                    return;\n                }\n                //compile data\n                let str;\n                try {\n                    if (err instanceof HttpError) {\n                        str = ejs.render(data, { error:err });\n                    }\n                    else {\n                        const httpErr = new HttpError(500, null, err.message);\n                        httpErr.stack = err.stack;\n                        str = ejs.render(data, {error: httpErr});\n                    }\n                }\n                catch (e) {\n                    TraceUtils.log(e);\n                    //continue error execution\n                    callback(err);\n                    return;\n                }\n                //write status header\n                response.writeHead(err.status || 500 , { \"Content-Type\": \"text/html\" });\n                response.write(str);\n                response.end();\n                callback();\n            });\n        }\n        else {\n            callback(err);\n        }\n    }\n    catch (e) {\n        //log process error\n        TraceUtils.log(e);\n        //and continue execution\n        callback(err);\n    }\n\n}\n\n\n\n\n/**\n * @private\n * @param {Function=} callback\n * @param {ApplicationOptions|*} options\n */\nfunction startInternal(options, callback) {\n    const self = this;\n    callback = callback || function() { };\n    try {\n        //validate options\n\n        if (self.config == null)\n            self.init();\n        /**\n         * @memberof process.env\n         * @property {number} PORT\n         * @property {string} IP\n         * @property {string} NODE_ENV\n         */\n        const opts = {\n            bind:(process.env.IP || HTTP_SERVER_DEFAULT_BIND),\n            port:(process.env.PORT ? process.env.PORT: HTTP_SERVER_DEFAULT_PORT)\n        };\n        //extend options\n        _.assign(opts, options);\n\n        const server_ = http.createServer(function (request, response) {\n            const context = self.createContext(request, response);\n            //begin request processing\n            self.processRequest(context, function (err) {\n                if (err) {\n                    //handle context error event\n                    if (context.listeners('error').length>0) {\n                        return context.emit('error', { error:err }, function() {\n                            context.finalize(function() {\n                                if (context.response) { context.response.end(); }\n                            });\n                        });\n                    }\n                    if (self.listeners('error').length == 0) {\n                        self.onError(context, err, function () {\n                            if (typeof context === 'undefined' || context == null) { return; }\n                            context.finalize(function() {\n                                if (context.response) { context.response.end(); }\n                            });\n                        });\n                    }\n                    else {\n                        //raise application error event\n                        self.emit('error', { context:context, error:err }, function() {\n                            if (typeof context === 'undefined' || context == null) { return; }\n                            context.finalize(function() {\n                                if (context.response) { context.response.end(); }\n                            });\n                        });\n                    }\n                }\n                else {\n                    if (typeof context === 'undefined' || context == null) { return; }\n                    context.finalize(function() {\n                        if (context.response) { context.response.end(); }\n                    });\n                }\n            });\n        });\n        /**\n         * @memberof {HttpApplication}\n         * @returns {Server|*}\n         */\n        self.getServer = function() {\n            return server_;\n        };\n\n        //start listening\n        server_.listen(opts.port, opts.bind);\n        TraceUtils.log(util.format('Web application is running at http://%s:%s/', opts.bind, opts.port));\n        //do callback\n        callback.call(self);\n    } catch (e) {\n        TraceUtils.log(e);\n    }\n}\n\n/**\n * @param {HttpApplication} application\n * @returns {{html: Function, text: Function, json: Function, unauthorized: Function}}\n * @private\n */\nfunction httpApplicationErrors(application) {\n    const self = application;\n    return {\n        html: function(context, error, callback) {\n            callback = callback || function () { };\n            onHtmlError(context, error, function(err) {\n                callback.call(self, err);\n            });\n        },\n        text: function(context, error, callback) {\n            callback = callback || function () { };\n            /**\n             * @type {ServerResponse}\n             */\n            const response = context.response;\n            if (error) {\n                //send plain text\n                response.writeHead(error.status || 500, {\"Content-Type\": \"text/plain\"});\n                //if error is an HTTP Exception\n                if (error instanceof HttpError) {\n                    response.write(error.status + ' ' + error.message + \"\\n\");\n                }\n                else {\n                    //otherwise send status 500\n                    response.write('500 ' + error.message + \"\\n\");\n                }\n                //send extra data (on development)\n                if (process.env.NODE_ENV === 'development') {\n                    if (!_.isEmpty(error.innerMessage)) {\n                        response.write(error.innerMessage + \"\\n\");\n                    }\n                    if (!_.isEmpty(error.stack)) {\n                        response.write(error.stack + \"\\n\");\n                    }\n                }\n            }\n            callback.call(this);\n        },\n        json: function(context, error, callback) {\n            callback = callback || function () { };\n            context.request.headers = context.request.headers || { };\n            if (/application\\/json/g.test(context.request.headers.accept)) {\n                //prepare JSON result\n                let result;\n                if ((err instanceof HttpError) || (typeof err.status !== 'undefined')) {\n                    result = new mvc.HttpJsonResult({ status:error.status, code:error.code, message:error.message, innerMessage: error.innerMessage });\n                }\n                else if (process.env.NODE_ENV === 'development') {\n                    result = new mvc.HttpJsonResult(err);\n                }\n                else {\n                    result = new mvc.HttpJsonResult(new HttpServerError());\n                }\n                //execute redirect result\n                result.execute(context, function(err) {\n                    callback.call(self, err);\n                });\n                return;\n            }\n            //go to next error if any\n            callback.call(self, error);\n        },\n        unauthorized: function(context, error, callback) {\n            if (_.isNil(context) || _.isNil(context)) {\n                return callback.call(self);\n            }\n            if (error.status != 401) {\n                //go to next error if any\n                return callback.call(self, error);\n            }\n            context.request.headers = context.request.headers || { };\n            if (/text\\/html/g.test(context.request.headers.accept)) {\n                if (self.config.settings) {\n                    if (self.config.settings.auth) {\n                        //get login page from configuration\n                        const page = self.config.settings.auth.loginPage || '/login.html';\n                        //prepare redirect result\n                        const result = new mvc.HttpRedirectResult(page.concat('?returnUrl=', encodeURIComponent(context.request.url)));\n                        //execute redirect result\n                        result.execute(context, function(err) {\n                            callback.call(self, err);\n                        });\n                        return;\n                    }\n                }\n            }\n            //go to next error if any\n            callback.call(self, error);\n        }\n    }\n}\n\n\n/**\n * @classdesc An abstract class that represents an HTTP Handler\n * @class\n * @abstract\n */\nexport class HttpHandler {\n    /**\n     * Occurs as the first event in the HTTP execution\n     * @constructor\n     * @param {HttpContext} context\n     * @param {Function} callback\n     */\n    beginRequest(context, callback) {\n        callback = callback || function () {\n            };\n        callback.call(context);\n    }\n\n    /**\n     * Occurs when a handler is going to validate current HTTP request.\n     * @param {HttpContext} context\n     * @param {Function} callback\n     */\n    validateRequest(context, callback) {\n        callback = callback || function () {\n            };\n        callback.call(context);\n    }\n\n    /**\n     * Occurs when a handler is going to set current user identity.\n     * @param {HttpContext} context\n     * @param {Function} callback\n     */\n    authenticateRequest(context, callback) {\n        callback = callback || function () {\n            };\n        callback.call(context);\n    }\n\n    /**\n     * Occurs when a handler has established the identity of the current user.\n     * @param {HttpContext} context\n     * @param {Function} callback\n     */\n    /*HttpHandler.prototype.postAuthenticateRequest = function(context, callback) {\n     callback = callback || function() {};\n     callback.call(context);\n     };*/\n\n\n    /**\n     * Occurs when a handler has verified user authorization.\n     * @param {HttpContext} context\n     * @param {Function} callback\n     */\n    authorizeRequest(context, callback) {\n        callback = callback || function () {\n            };\n        callback.call(context);\n    }\n\n    /**\n     * Occurs when the handler is selected to respond to the request.\n     * @param {HttpContext} context\n     * @param {Function} callback\n     */\n    mapRequest(context, callback) {\n        callback = callback || function () {\n            };\n        callback.call(context);\n    }\n\n    /**\n     * Occurs when application has mapped the current request to the appropriate handler.\n     * @param {HttpContext} context\n     * @param {Function} callback\n     */\n    postMapRequest(context, callback) {\n        callback = callback || function() {};\n        callback.call(context);\n    }\n\n    /**\n     * Occurs just before application starts executing a handler.\n     * @param {HttpContext} context\n     * @param {Function} callback\n     */\n    /*HttpHandler.prototype.preRequestHandlerExecute = function(context, callback) {\n     callback = callback || function() {};\n     callback.call(context);\n     };*/\n\n    /**\n     * Occurs when application starts processing current HTTP request.\n     * @param {HttpContext} context\n     * @param {Function} callback\n     */\n    processRequest(context, callback) {\n        callback = callback || function () {\n            };\n        callback.call(context);\n    }\n\n    /**\n     * Occurs when application starts executing an HTTP Result.\n     * @param {HttpContext} context\n     * @param {Function} callback\n     */\n    preExecuteResult(context, callback) {\n        callback = callback || function () {\n            };\n        callback.call(context);\n    }\n\n    /**\n     * Occurs when application was succesfully executes an HTTP Result.\n     * @param {HttpContext} context\n     * @param {Function} callback\n     */\n    postExecuteResult(context, callback) {\n        callback = callback || function () {\n            };\n        callback.call(context);\n    }\n\n    /**\n     * Occurs when the handler finishes execution.\n     * @param {HttpContext} context\n     * @param {Function} callback\n     */\n    /*HttpHandler.prototype.postRequestHandlerExecute = function(context, callback) {\n     callback = callback || function() {};\n     callback.call(context);\n     };*/\n\n    /**\n     * Occurs as the last event in the HTTP execution\n     * @param {HttpContext} context\n     * @param {Function} callback\n     */\n    endRequest(context, callback) {\n        callback = callback || function () {\n            };\n        callback.call(context);\n    }\n}\n\n\n/**\n * @type {string[]}\n * @private\n */\nHttpHandler.Events = ['beginRequest', 'validateRequest', 'authenticateRequest',\n    'authorizeRequest', 'mapRequest', 'postMapRequest', 'preExecuteResult', 'postExecuteResult', 'endRequest'];\n\n/**\n * @class\n * @classdesc Abstract class that represents a data context\n * @abstract\n */\nexport class HttpDataContext {\n    /**\n     * @returns {AbstractAdapter}\n     */\n    db() {\n        return null;\n    }\n\n    /**\n     * @param {string} name\n     * @returns {DataModel}\n     */\n    model(name) {\n        return null;\n    }\n\n    /**\n     * @param {string} type\n     * @returns {*}\n     */\n    dataTypes(type) {\n        return null;\n    }\n}\n\n\n/**\n * @classdesc ApplicationOptions class describes the startup options of a MOST Web Framework application.\n * @class\n * @property {number} port - The HTTP binding port number.\n * The default value is either PORT environment variable or 3000.\n * @property {string} bind - The HTTP binding ip address or hostname.\n * The default value is either IP environment variable or 127.0.0.1.\n * @property {number|string} cluster - A number which represents the number of clustered applications.\n * The default value is zero (no clustering). If cluster is 'auto' then the number of clustered applications\n * depends on hardware capabilities (number of CPUs).\n @example\n import {HttpApplication} from '@themost/web/app';\n var app = new HttpApplication();\n app.start({ port:80, bind:\"0.0.0.0\",cluster:'auto' });\n @example\n //Environment variables already set: IP=198.51.100.0 PORT=80\n import {HttpApplication} from '@themost/web/app';\n var app = new HttpApplication();\n app.start();\n */\nexport class ApplicationOptions {\n    constructor() {\n\n    }\n}\n/**\n * @classdesc Represents HttpApplication configuration\n * @class\n */\nexport class ApplicationConfig {\n    constructor() {\n        /**\n         * Gets an array of data adapters.\n         * @type {Array}\n         */\n        this.adapters = [];\n        /**\n         * Gets an array of HTTP view engines configuration\n         * @type {Array}\n         */\n        this.engines = [];\n        /**\n         *  Gets an array of all registered MIME types\n         * @type {Array}\n         */\n        this.mimes = [];\n        /**\n         * Gets an array of all registered HTTP handlers.\n         * @type {Array}\n         */\n        this.handlers = [];\n        /**\n         * Gets an array of all registered HTTP routes.\n         * @type {Array}\n         */\n        this.routes = [];\n        /**\n         * Gets or sets a collection of data adapter types that are going to be use in data operation\n         * @type {Array}\n         */\n        this.adapterTypes = null;\n        /**\n         * Gets or sets a collection of data types that are going to be use in data operation\n         * @type {Array}\n         */\n        this.dataTypes = null;\n        /**\n         * Gets or sets an object that holds application settings\n         * @type {Array}\n         */\n        this.settings = { };\n        /**\n         * Gets or sets an object that holds application locales\n         * @type {*}\n         */\n        this.locales = { };\n    }\n}\n\n/**\n * @class\n * @property {string} executionPath - Gets or sets a string which represents the current execution path\n * @property {string} configPath - Gets or sets a string which represents the current configuration path\n * @augments EventEmitter\n */\nexport class HttpApplication extends SequentialEventEmitter {\n    /**\n     * @constructor\n     */\n    constructor() {\n        super();\n        this.executionPath = path.join(process.cwd(), 'app');\n        /**\n         * Gets the current application configuration path\n         * @type {*}\n         */\n        this.configPath = path.join(process.cwd(), 'app');\n        /**\n         * Gets or sets application configuration settings\n         * @type {ApplicationConfig}\n         */\n        this.config = null;\n        /**\n         * Gets or sets a collection of application handlers\n         * @type {Array}\n         */\n        this.handlers = [];\n\n        //initialize angular server module\n        const ng = require('./angular/server_module');\n        /**\n         * @type {AngularServerModule}\n         */\n        this.module = null;\n        //init module\n        ng.init(this);\n        //register auth service\n        const self = this;\n        self.module.service('$auth', function($context) {\n            try {\n                //ensure settings\n                self.config.settings.auth = self.config.settings.auth || { };\n                let providerPath = self.config.settings.auth.provider || './services/auth';\n                //get auth provider\n                if (providerPath.indexOf('/')==0)\n                    providerPath = self.mapPath(providerPath);\n                const svc = require(providerPath);\n                if (typeof svc.createInstance !== 'function')\n                    throw new Error('Invalid authentication provider module.');\n                return svc.createInstance($context);\n            }\n            catch (e) {\n                throw e;\n            }\n        });\n        /**\n         * @type {HttpCache}\n         */\n        let $cache;\n        self.module.service('$cache', function() {\n            try {\n                return self.cache;\n            }\n            catch (e) {\n                throw e;\n            }\n        });\n\n\n        Object.defineProperty(self, 'cache', {\n            get: function () {\n                if (!_.isNil($cache))\n                    return $cache;\n                const HttpCache = require( \"./services/cache\" );\n                /**\n                 * @type {HttpCache|*}\n                 */\n                $cache = new HttpCache();\n                return $cache;\n            },\n            set: function(value) {\n                $cache = value;\n            },\n            configurable: false,\n            enumerable: false\n        });\n        /**\n         * Gets or sets a boolean that indicates whether the application is in development mode\n         * @type {string}\n         */\n        this.development = (process.env.NODE_ENV === 'development');\n        /**\n         *\n         * @type {{html, text, json, unauthorized}|*}\n         */\n        this.errors = httpApplicationErrors(this);\n\n\n\n\n    }\n\n    /**\n     * Initializes application configuration.\n     * @return {HttpApplication}\n     */\n    init() {\n        /**\n         * Gets or sets application configuration settings\n         */\n            //get node environment\n        const env = process.env['NODE_ENV'] || 'production';\n\n        let str;\n        //first of all try to load environment specific configuration\n        try {\n            TraceUtils.log(util.format('Init: Loading environment specific configuration file (app.%s.json)', env));\n            str = path.join(process.cwd(), 'config', 'app.' + env + '.json');\n            /**\n             * @type {ApplicationConfig}\n             */\n            this.config = require(str);\n            TraceUtils.log(util.format('Init: Environment specific configuration file (app.%s.json) was succesfully loaded.', env));\n        }\n        catch (e) {\n            if (e.code === 'MODULE_NOT_FOUND') {\n                TraceUtils.log(util.format('Init: Environment specific configuration file (app.%s.json) is missing.', env));\n                //try to load default configuration file\n                try {\n                    TraceUtils.log('Init: Loading environment default configuration file (app.json)');\n                    str = path.join(process.cwd(), 'config', 'app.json');\n                    /**\n                     * @type {ApplicationConfig}\n                     */\n                    this.config = require(str);\n                    TraceUtils.log('Init: Default configuration file (app.json) was succesfully loaded.');\n                }\n                catch (e) {\n                    if (e.code === 'MODULE_NOT_FOUND') {\n                        TraceUtils.log('Init: An error occured while loading default configuration (app.json). Configuration cannot be found or is inaccesible.');\n                        //load internal configuration file\n                        /**\n                         * @type {ApplicationConfig}\n                         */\n                        this.config = require('./resources/app.json');\n                        this.config.settings.crypto = {\n                            \"algorithm\": \"aes256\",\n                            \"key\": RandomUtils.randomHex(32)\n                        };\n                        TraceUtils.log('Init: Internal configuration file (app.json) was succesfully loaded.');\n                    }\n                    else {\n                        TraceUtils.log('Init: An error occured while loading default configuration (app.json)');\n                        throw e;\n                    }\n                }\n            }\n            else {\n                TraceUtils.log(util.format('Init: An error occured while loading application specific configuration (app).', env));\n                throw e;\n            }\n        }\n        //load routes (if empty)\n        if (_.isNil(this.config.routes)) {\n            try {\n                this.config.routes = require(path.join(process.cwd(),'config/routes.json'));\n            }\n            catch(e) {\n                if (e.code === 'MODULE_NOT_FOUND') {\n                    //load internal default route file\n                    TraceUtils.log('Init: Application specific routes configuration cannot be found. The default routes configuration will be loaded instead.');\n                    this.config.routes = require('./resources/routes.json');\n                }\n                else {\n                    TraceUtils.log('Init: An error occured while trying to load application routes configuration.');\n                    throw e;\n                }\n            }\n        }\n        //load data types (if empty)\n        if (_.isNil(this.config.dataTypes))\n        {\n            try {\n                this.config.dataTypes = da.cfg.current.dataTypes;\n            }\n            catch(e) {\n                TraceUtils.log('Init: An error occured while trying to load application data types configuration.');\n                throw e;\n            }\n        }\n\n        //set settings default\n        this.config.settings = this.config.settings || {};\n\n        //initialize handlers list\n        //important note: Applications handlers are static classes (they will be initialized once),\n        //so they should not hold information about http context and execution lifecycle.\n        const self = this;\n\n        const handlers = self.config.handlers || [], defaultApplicationConfig = require('./resources/app.json');\n        //default handlers\n        const defaultHandlers = defaultApplicationConfig.handlers;\n        for (let i = 0; i < defaultHandlers.length; i++) {\n            (function(item) {\n                if (typeof handlers.filter(function(x) { return x.name === item.name; })[0] === 'undefined') {\n                    handlers.push(item);\n                }\n            })(defaultHandlers[i]);\n        }\n        _.forEach(handlers, function (h) {\n            try {\n                let handlerPath = h.type;\n                if (handlerPath.indexOf('/')==0)\n                    handlerPath = self.mapPath(handlerPath);\n                const handlerModule = require(handlerPath);\n                let handler = null;\n                if (handlerModule) {\n                    if (typeof handlerModule.default != 'function') {\n                        TraceUtils.log(util.format('The specified handler (%s) cannot be instantiated. The module does not export default constructor.', h.name));\n                        return;\n                    }\n                    const HandlerCtor = handlerModule.default;\n                    handler = new HandlerCtor();\n                    if (handler)\n                        self.handlers.push(handler);\n                }\n            }\n            catch (e) {\n                throw new Error(util.format('The specified handler (%s) cannot be loaded. %s', h.name, e.message));\n            }\n        });\n        //initialize basic directives collection\n        const directives = require(\"./angular/server_directives\");\n        directives.apply(this);\n        return this;\n    }\n\n    /**\n     * Returns the path of a physical file based on a given URL.\n     */\n    mapPath(s) {\n        const uri = url.parse(s).pathname;\n        return path.join(this.executionPath, uri);\n    }\n\n    /**\n     * Resolves ETag header for the given file. If the specifed does not exist or is invalid returns null.\n     * @param {string=} file - A string that represents the file we want to query\n     * @param {Function} callback\n     */\n    resolveETag(file, callback) {\n        fs.exists(file, function(exists) {\n            try {\n                if (exists) {\n                    fs.stat(file, function(err, stats) {\n                        if (err) {\n                            callback(err);\n                        }\n                        else {\n                            if (!stats.isFile()) {\n                                callback(null);\n                            }\n                            else {\n                                //validate if-none-match\n                                const md5 = crypto.createHash('md5');\n                                md5.update(stats.mtime.toString());\n                                const result = md5.digest('base64');\n                                callback(null, result);\n\n                            }\n                        }\n                    });\n                }\n                else {\n                    callback(null);\n                }\n            }\n            catch (e) {\n                callback(null);\n            }\n        });\n    }\n\n    /**\n     * @param {HttpContext} context\n     * @param {string} executionPath\n     * @param {Function} callback\n     */\n    unmodifiedRequest(context, executionPath, callback) {\n        try {\n            const requestETag = context.request.headers['if-none-match'];\n            if (typeof requestETag === 'undefined' || requestETag == null) {\n                callback(null, false);\n                return;\n            }\n            HttpApplication.prototype.resolveETag(executionPath, function(err, result) {\n                callback(null, (requestETag==result));\n            });\n        }\n        catch (e) {\n            TraceUtils.log(e);\n            callback(null, false);\n        }\n    }\n\n    /**\n     * @param request {String|IncomingMessage}\n     * */\n    resolveMime(request) {\n        if (typeof request=== 'string') {\n            //get file extension\n            var extensionName = path.extname(request);\n            var arr = this.config.mimes.filter(function(x) {\n                return (x.extension == extensionName);\n            });\n            if (arr.length>0)\n                return arr[0];\n            return null;\n        }\n        else if (typeof request=== 'object') {\n            //get file extension\n            var extensionName = path.extname(request.url);\n            var arr = this.config.mimes.filter(function(x) {\n                return (x.extension == extensionName);\n            });\n            if (arr.length>0)\n                return arr[0];\n            return null;\n        }\n    }\n\n    /**\n     * Encrypts the given data\n     * */\n    encrypt(data) {\n        if (typeof data === 'undefined' || data==null)\n            return null;\n        //validate settings\n        if (!this.config.settings.crypto)\n            throw new Error('Data encryption configuration section is missing. The operation cannot be completed');\n        if (!this.config.settings.crypto.algorithm)\n            throw new Error('Data encryption algorithm is missing. The operation cannot be completed');\n        if (!this.config.settings.crypto.key)\n            throw new Error('Data encryption key is missing. The operation cannot be completed');\n        //encrypt\n        const cipher = crypto.createCipher(this.config.settings.crypto.algorithm, this.config.settings.crypto.key);\n        return cipher.update(data, 'utf8', 'hex') + cipher.final('hex');\n    }\n\n    /**\n     * Decrypts the given data.\n     * */\n    decrypt(data) {\n        if (typeof data === 'undefined' || data==null)\n            return null;\n        //validate settings\n        if (!this.config.settings.crypto)\n            throw new Error('Data encryption configuration section is missing. The operation cannot be completed');\n        if (!this.config.settings.crypto.algorithm)\n            throw new Error('Data encryption algorithm is missing. The operation cannot be completed');\n        if (!this.config.settings.crypto.key)\n            throw new Error('Data encryption key is missing. The operation cannot be completed');\n        //decrypt\n        const decipher = crypto.createDecipher(this.config.settings.crypto.algorithm, this.config.settings.crypto.key);\n        return decipher.update(data, 'hex', 'utf8') + decipher.final('utf8');\n    }\n\n    /**\n     * Sets the authentication cookie that is associated with the given user.\n     * @param {HttpContext} context\n     * @param {String} username\n     * @param {*=} options\n     */\n    setAuthCookie(context, username, options) {\n        const defaultOptions = { user:username, dateCreated:new Date()};\n        let value;\n        let expires;\n        if (typeof options !== 'undefined' && options != null) {\n            value = JSON.stringify(util._extend(options, defaultOptions));\n            if (util.isDate(options.expires)) {\n                expires = options.expires.toUTCString();\n            }\n        }\n        else {\n            value = JSON.stringify(defaultOptions);\n        }\n        const settings = this.config.settings ? (this.config.settings.auth || { }) : { };\n        settings.name = settings.name || '.MAUTH';\n        let str = settings.name.concat('=', this.encrypt(value)) + ';path=/';\n        if (typeof expires === 'string') {\n            str +=';expires=' + expires;\n        }\n        context.response.setHeader('Set-Cookie',str);\n    }\n\n    /**\n     * Sets the authentication cookie that is associated with the given user.\n     * @param {HttpContext} context\n     * @param {String} username\n     */\n    getAuthCookie(context) {\n        try {\n            const settings = this.config.settings ? (this.config.settings.auth || { }) : { };\n            settings.name = settings.name || '.MAUTH';\n            const cookie = context.cookie(settings.name);\n            if (cookie) {\n                return this.decrypt(cookie);\n            }\n            return null;\n        }\n        catch(e) {\n            TraceUtils.log('GetAuthCookie failed.');\n            TraceUtils.log(e.message);\n            return null;\n        }\n    }\n\n    /**\n     *\n     * @param {HttpContext} context\n     * @param {Function} callback\n     */\n    processRequest(context, callback) {\n        const self = this;\n        if (typeof context === 'undefined' || context == null) {\n            callback.call(self);\n        }\n        else {\n            //1. beginRequest\n            context.emit('beginRequest', context, function (err) {\n                if (err) {\n                    callback.call(context, err);\n                }\n                else {\n                    //2. validateRequest\n                    context.emit('validateRequest', context, function (err) {\n                        if (err) {\n                            callback.call(context, err);\n                        }\n                        else {\n                            //3. authenticateRequest\n                            context.emit('authenticateRequest', context, function (err) {\n                                if (err) {\n                                    callback.call(context, err);\n                                }\n                                else {\n                                    //4. authorizeRequest\n                                    context.emit('authorizeRequest', context, function (err) {\n                                        if (err) {\n                                            callback.call(context, err);\n                                        }\n                                        else {\n                                            //5. mapRequest\n                                            context.emit('mapRequest', context, function (err) {\n                                                if (err) {\n                                                    callback.call(context, err);\n                                                }\n                                                else {\n                                                    //5b. postMapRequest\n                                                    context.emit('postMapRequest', context, function(err) {\n                                                        if (err) {\n                                                            callback.call(context, err);\n                                                        }\n                                                        else {\n                                                            //process HEAD request\n                                                            if (context.request.method==='HEAD') {\n                                                                //7. endRequest\n                                                                context.emit('endRequest', context, function (err) {\n                                                                    callback.call(context, err);\n                                                                });\n                                                            }\n                                                            else {\n                                                                //6. processRequest\n                                                                if (context.request.currentHandler != null)\n                                                                    context.request.currentHandler.processRequest(context, function (err) {\n                                                                        if (err) {\n                                                                            callback.call(context, err);\n                                                                        }\n                                                                        else {\n                                                                            //7. endRequest\n                                                                            context.emit('endRequest', context, function (err) {\n                                                                                callback.call(context, err);\n                                                                            });\n                                                                        }\n                                                                    });\n                                                                else {\n                                                                    const er = new HttpNotFoundError();\n                                                                    if (context.request && context.request.url) {\n                                                                        er.resource = context.request.url;\n                                                                    }\n                                                                    callback.call(context, er);\n                                                                }\n                                                            }\n\n                                                        }\n                                                    });\n                                                }\n                                            });\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    /**\n     * Gets the default data context based on the current configuration\n     * @returns {AbstractAdapter}\n     */\n    db() {\n        if ((this.config.adapters == null) || (this.config.adapters.length == 0))\n            throw new Error('Data adapters configuration settings are missing or cannot be accessed.');\n        let adapter = null;\n        if (this.config.adapters.length == 1) {\n            //there is only one adapter so try to instantiate it\n            adapter = this.config.adapters[0];\n        }\n        else {\n            adapter = _.find(this.config.adapters, function (x) {\n                return x.default;\n            });\n        }\n        if (_.isEmpty(adapter))\n            throw new Error('There is no default data adapter or the configuration is incorrect.');\n        //try to instantiate adapter\n        if (!adapter.invariantName)\n            throw new Error('The default data adapter has no invariant name.');\n        const adapterType = this.config.adapterTypes[adapter.invariantName];\n        if (adapterType == null)\n            throw new Error('The default data adapter type cannot be found.');\n        if (typeof adapterType.createInstance === 'function') {\n            return adapterType.createInstance(adapter.options);\n        }\n        else if (adapterType.require) {\n            const m = require(adapterType.require);\n            if (typeof m.createInstance === 'function') {\n                return m.createInstance(adapter.options);\n            }\n            throw new Error('The default data adapter cannot be instantiated. The module provided does not export a function called createInstance().')\n        }\n    }\n\n    /**\n     * Creates an instance of HttpContext class.\n     * @param {ClientRequest} request\n     * @param {ServerResponse} response\n     * @returns {HttpContext}\n     */\n    createContext(request, response) {\n        const context = new HttpContext(request, response);\n        //set context application\n        context.application = this;\n        //set handler events\n        for (let i = 0; i < HttpHandler.Events.length; i++) {\n            const ev = HttpHandler.Events[i];\n            for (let j = 0; j < this.handlers.length; j++) {\n                const handler = this.handlers[j];\n                if (typeof handler[ev] === 'function') {\n                    context.on(ev, handler[ev]);\n                }\n\n            }\n        }\n        return context;\n    }\n\n    /**\n     * @param {*} options\n     * @param {*} data\n     * @param {Function} callback\n     */\n    executeExternalRequest(options, data, callback) {\n        //make request\n        const https = require('https'), opts = (typeof options==='string') ? url.parse(options) : options, httpModule = (opts.protocol === 'https:') ? https : http;\n        const req = httpModule.request(opts, function(res) {\n            res.setEncoding('utf8');\n            let data = '';\n            res.on('data', function (chunk) {\n                data += chunk;\n            });\n            res.on('end', function(){\n                const result = {\n                    statusCode: res.statusCode,\n                    headers: res.headers,\n                    body:data,\n                    encoding:'utf8'\n                };\n                /**\n                 * destroy sockets (manually close an unused socket) ?\n                 */\n                callback(null, result);\n            });\n        });\n        req.on('error', function(e) {\n            //return error\n            callback(e);\n        });\n        if(data)\n        {\n            if (typeof data ===\"object\" )\n                req.write(JSON.stringify(data));\n            else\n                req.write(data.toString());\n        }\n        req.end();\n    }\n\n    /**\n     * Executes an internal process\n     * @param {Function} fn\n     */\n    execute(fn) {\n        const request = createRequestInternal.call(this);\n        fn.call(this, this.createContext(request, createResponseInternal.call(this,request)));\n    }\n\n    /**\n     * Executes an unattended internal process\n     * @param {Function} fn\n     */\n    unattended(fn) {\n        //create context\n        const request = createRequestInternal.call(this), context =  this.createContext(request, createResponseInternal.call(this,request));\n        //get unattended account\n        /**\n         * @type {{unattendedExecutionAccount:string}|*}\n         */\n        this.config.settings.auth = this.config.settings.auth || {};\n        const account = this.config.settings.auth.unattendedExecutionAccount;\n        //set unattended execution account\n        if (typeof account !== 'undefined' || account!==null) {\n            context.user = { name: account, authenticationType: 'Basic'};\n        }\n        //execute internal process\n        fn.call(this, context);\n    }\n\n    /**\n     * Load application extension\n     */\n    extend(extension) {\n        if (typeof extension === 'undefined')\n        {\n            //register all application extensions\n            const extensionFolder = this.mapPath('/extensions');\n            if (fs.existsSync(extensionFolder)) {\n                const arr = fs.readdirSync(extensionFolder);\n                for (let i = 0; i < arr.length; i++) {\n                    if (path.extname(arr[i])=='.js')\n                        require(path.join(extensionFolder, arr[i]));\n                }\n            }\n        }\n        else {\n            //register the specified extension\n            if (typeof extension === 'string') {\n                const extensionPath = this.mapPath(util.format('/extensions/%s.js', extension));\n                if (fs.existsSync(extensionPath)) {\n                    //load extension\n                    require(extensionPath);\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * @param {*|string} options\n     * @param {Function} callback\n     */\n    executeRequest(options, callback) {\n        const opts = { };\n        if (typeof options === 'string') {\n            util._extend(opts, { url:options });\n        }\n        else {\n            util._extend(opts, options);\n        }\n        const request = createRequestInternal.call(this,opts), response = createResponseInternal.call(this,request);\n        if (!opts.url) {\n            callback(new Error('Internal request url cannot be empty at this context.'));\n            return;\n        }\n        if (opts.url.indexOf('/')!=0)\n        {\n            const uri = url.parse(opts.url);\n            opts.host = uri.host;\n            opts.hostname = uri.hostname;\n            opts.path = uri.path;\n            opts.port = uri.port;\n            //execute external request\n            this.executeExternalRequest(opts,null, callback);\n        }\n        else {\n            //todo::set cookie header (for internal requests)\n            /*\n             IMPORTANT: set response Content-Length to -1 in order to force the default HTTP response format.\n             if the content length is unknown (server response does not have this header)\n             in earlier version of node.js <0.11.9 the response contains by default a hexademical number that\n             represents the content length. This number appears exactly after response headers and before response body.\n             If the content length is defined the operation omits this hexademical value\n             e.g. the wrong or custom formatted response\n             HTTP 1.1 Status OK\n             Content-Type: text/html\n             ...\n             Connection: keep-alive\n\n             6b8\n\n             <html><body>\n             ...\n             </body></html>\n             e.g. the standard format\n             HTTP 1.1 Status OK\n             Content-Type: text/html\n             ...\n             Connection: keep-alive\n\n\n             <html><body>\n             ...\n             </body></html>\n             */\n            response.setHeader('Content-Length',-1);\n            handleRequestInternal.call(this, request, response, function(err) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    try {\n                        //get statusCode\n                        const statusCode = response.statusCode;\n                        //get headers\n                        const headers = {};\n                        if (response._header) {\n                            const arr = response._header.split('\\r\\n');\n                            for (let i = 0; i < arr.length; i++) {\n                                const header = arr[i];\n                                if (header) {\n                                    const k = header.indexOf(':');\n                                    if (k>0) {\n                                        headers[header.substr(0,k)] = header.substr(k+1);\n                                    }\n                                }\n                            }\n                        }\n                        //get body\n                        let body = null;\n                        let encoding = null;\n                        if (util.isArray(response.output)) {\n                            if (response.output.length>0) {\n                                body = response.output[0].substr(response._header.length);\n                                encoding = response.outputEncodings[0];\n                            }\n                        }\n                        //build result (something like ServerResponse)\n                        const result = {\n                            statusCode: statusCode,\n                            headers: headers,\n                            body:body,\n                            encoding:encoding\n                        };\n                        callback(null, result);\n                    }\n                    catch (e) {\n                        callback(e);\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     *\n     * @param {HttpContext} context\n     * @param {Error|HttpError} err\n     * @param {function()} callback\n     */\n    onError(context, err, callback) {\n        callback = callback || function () { };\n        try {\n            if (err instanceof Error) {\n                //always log error\n                TraceUtils.log(err);\n                //get response object\n                const response = context.response, ejs = require('ejs');\n                if (_.isNil(response)) {\n                    callback.call(this);\n                }\n                if (response._headerSent) {\n                    callback.call(this);\n                    return;\n                }\n                htmlErrorInternal(context, err, function(err) {\n                    if (err) {\n                        //send plain text\n                        response.writeHead(err.status || 500, {\"Content-Type\": \"text/plain\"});\n                        //if error is an HTTP Exception\n                        if (err instanceof HttpError) {\n                            response.write(err.status + ' ' + err.message + \"\\n\");\n                        }\n                        else {\n                            //otherwise send status 500\n                            response.write('500 ' + err.message + \"\\n\");\n                        }\n                        //send extra data (on development)\n                        if (process.env.NODE_ENV === 'development') {\n                            if (!_.isEmpty(err.innerMessage)) {\n                                response.write(err.innerMessage + \"\\n\");\n                            }\n                            if (!_.isEmpty(err.stack)) {\n                                response.write(err.stack + \"\\n\");\n                            }\n                        }\n                    }\n                    callback.call(this);\n                });\n\n\n            }\n            else {\n                callback.call(this);\n            }\n        }\n        catch (e) {\n            TraceUtils.log(e);\n            if (context.response) {\n                context.response.writeHead(500, {\"Content-Type\": \"text/plain\"});\n                context.response.write(\"500 Internal Server Error\");\n                callback.call(this);\n            }\n        }\n    }\n\n    /**\n     * @param {*=} options\n     * @param {Function=} callback\n     */\n    start(options, callback) {\n        callback = callback || function() { };\n        options = options || {};\n        if (options.cluster) {\n            let clusters = 1;\n            //check if options.cluster=\"auto\"\n            if (/^auto$/i.test(options.cluster)) {\n                clusters = require('os').cpus().length;\n            }\n            else {\n                //get cluster number\n                clusters = LangUtils.parseInt(options.cluster);\n            }\n            if (clusters>1) {\n                const cluster = require('cluster');\n                if (cluster.isMaster) {\n                    //get debug argument (if any)\n                    const debug = process.execArgv.filter(function(x) { return /^--debug(-brk)?=\\d+$/.test(x); })[0];\n\n                    let debugPort;\n                    if (debug) {\n                        //get debug port\n                        debugPort = parseInt(/^--debug(-brk)?=(\\d+)$/.exec(debug)[2]);\n                        cluster.setupMaster({\n                            execArgv: process.execArgv.filter(function(x) { return !/^--debug(-brk)?=\\d+$/.test(x); })\n                        });\n                    }\n                    for (let i = 0; i < clusters; i++) {\n                        if (debug) {\n                            if (/^--debug-brk=/.test(debug))\n                                cluster.settings.execArgv.push('--debug-brk=' + (debugPort + i));\n                            else\n                                cluster.settings.execArgv.push('--debug=' + (debugPort + i));\n                        }\n                        cluster.fork();\n                        if (debug) cluster.settings.execArgv.pop();\n                    }\n                } else {\n                    startInternal.call(this,options, callback);\n                }\n            }\n            else {\n                startInternal.call(this,options, callback);\n            }\n        }\n        else {\n            startInternal.call(this,options, callback);\n        }\n    }\n\n    /**\n     * @param {string} name\n     * @param {function=} ctor - The class constructor associated with this controller\n     * @returns {HttpApplication|function()}\n     */\n    service(name, ctor) {\n        if (typeof ctor === 'undefined')\n            return this.module.service(name);\n        this.module.service(name, ctor);\n        return this;\n    }\n\n    /**\n     * @param {string} name\n     * @param {function} ctor - The class constructor associated with this controller\n     * @returns {HttpApplication|function()}\n     */\n    directive(name, ctor) {\n        this.module.directive(name, ctor);\n        return this;\n    }\n\n    /**\n     * Get or sets an HTTP controller\n     * @param {string} name\n     * @param {Function|*} ctor\n     * @returns {*}\n     */\n    controller(name, ctor) {\n        this.config.controllers = this.config.controllers || {};\n        let er;\n        if (typeof ctor === 'undefined') {\n            const c = this.config.controllers[name];\n            if (typeof c === 'string') {\n                return require(c);\n            }\n            else if (typeof c === 'function') {\n                return c;\n            }\n            else {\n                er =  new Error('Invalid HTTP Controller constructor. Expected string or function.'); er.code='EARG';\n                throw er;\n            }\n        }\n        //if ctor is not a function (constructor) throw invalid argument exception\n        if (typeof ctor !== 'function') {\n            er =  new Error('Invalid HTTP Controller constructor. Expected function.'); er.code='EARG';\n            throw er;\n        }\n        //append controller to application constroller (or override an already existing controller)\n        this.config.controllers[name] = ctor;\n        return this;\n    }\n}\n\n/**\n * @type HttpApplication\n * @private\n */\nlet __current__ = null;\n\nif (typeof global !== 'undefined' && global!=null) {\n    if (typeof global.application === 'undefined') {\n        //set current application as global property (globals.application)\n        Object.defineProperty(global, 'application', {\n            get: function () {\n                return HttpApplication.current;\n            },\n            configurable: false,\n            enumerable: false\n        });\n    }\n}\n\nObject.defineProperty(HttpApplication, 'current', {\n    get: function () {\n        if (__current__ != null)\n            return __current__;\n        //instantiate HTTP application\n        __current__ = new HttpApplication();\n        //initialize current application\n        if (__current__.config == null)\n            __current__.init();\n        //extend current application\n        __current__.extend();\n        //and finally return it\n        return __current__;\n    },\n    configurable: false,\n    enumerable: false\n});"]}