{"version":3,"sources":["consumers.es6"],"names":["_","Args","HttpConsumer","callable","params","check","isFunction","context","args","apply","Array","prototype","slice","call","arguments","HttpRouteConsumer","route","notEmpty","HttpErrorConsumer","err","bind"],"mappings":"AAAA;;;;;;;;;AASA;;;;;;;;;AACA;;AACA;;IAAQA,C,WAAAA,C;;AACR;;IAAQC,I,UAAAA,I;;;;;;;;IAEKC,Y,WAAAA,Y;AACT;;;;AAIA,wBAAYC,QAAZ,EAAsBC,MAAtB,EAA8B;AAAA;;AAE1B;;;;;;;;;;;AAWAH,SAAKI,KAAL,CAAWL,EAAEM,UAAF,CAAaH,QAAb,CAAX,EAAkC,6BAAlC;AACA;;;AAGA,SAAKA,QAAL,GAAgBA,QAAhB;AACA;;;AAGA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AAED;;;;;;;;wBAIIG,O,EAASC,I,EAAM;AACf,aAAO,KAAKL,QAAL,CAAcM,KAAd,CAAoBF,OAApB,EAA6BG,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAA7B,CAAP;AACH;;;;;;IAGQC,iB,WAAAA,iB;;;AACT;;;;;AAKA,6BAAYC,KAAZ,EAAmBb,QAAnB,EAA6BC,MAA7B,EAAqC;AAAA;;AACjCH,SAAKgB,QAAL,CAAcD,KAAd,EAAoB,cAApB;;AADiC,sIAE3Bb,QAF2B,EAEjBC,MAFiB;;AAGjC,UAAKY,KAAL,GAAaA,KAAb;AAHiC;AAIpC;;;EAVkCd,Y;;IAa1BgB,iB,WAAAA,iB;AACT;;;;AAIA,6BAAYf,QAAZ,EAAsBC,MAAtB,EAA8B;AAAA;;AAC1BH,SAAKI,KAAL,CAAWL,EAAEM,UAAF,CAAaH,QAAb,CAAX,EAAkC,6BAAlC;AACA;;;AAGA,SAAKA,QAAL,GAAgBA,QAAhB;AACA;;;AAGA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AAED;;;;;;;;wBAIIG,O,EAASY,G,EAAK;AACd,aAAO,KAAKhB,QAAL,CAAciB,IAAd,CAAmBb,OAAnB,EAA4BA,OAA5B,EAAqCY,GAArC,CAAP;AACH","file":"consumers.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\n'use strict';\nimport 'source-map-support/register';\nimport {_} from 'lodash';\nimport {Args} from '@themost/common/utils';\n\nexport class HttpConsumer {\n    /**\n     * @param {Function} callable\n     * @param {*=} params\n     */\n    constructor(callable, params) {\n\n        /**\n         * IMPORTANT NOTE FOR HTTP CONSUMERS\n         * An HttpConsumer callable is bind with current instance of HttpContext class\n         * so ES6 arrow functions cannot be used while writing an HttpConsumer callable\n         * working example\n         * (this an instance of HttpContext)\n         var consumer = new HttpConsumer(function() {\n            console.log(this.request.url)\n         });\n         */\n\n        Args.check(_.isFunction(callable),'Consumer must be a function');\n        /**\n         * @type {Function}\n         */\n        this.callable = callable;\n        /**\n         * Gets or sets the parameters associated with this consumer\n         */\n        this.params = params;\n    }\n\n    /**\n     * @param {*} context\n     * @param {...*} args\n     */\n    run(context, args) {\n        return this.callable.apply(context, Array.prototype.slice.call(arguments));\n    }\n}\n\nexport class HttpRouteConsumer extends HttpConsumer {\n    /**\n     * @param {string} route\n     * @param {Function} callable\n     * @param {*=} params\n     */\n    constructor(route, callable, params) {\n        Args.notEmpty(route,'Consumer URI');\n        super(callable, params);\n        this.route = route;\n    }\n}\n\nexport class HttpErrorConsumer {\n    /**\n     * @param {Function} callable\n     * @param {*=} params\n     */\n    constructor(callable, params) {\n        Args.check(_.isFunction(callable),'Consumer must be a function');\n        /**\n         * @type {Function}\n         */\n        this.callable = callable;\n        /**\n         * Gets or sets the parameters associated with this consumer\n         */\n        this.params = params;\n    }\n\n    /**\n     * @param {*} context\n     * @param {Error|*} err\n     */\n    run(context, err) {\n        return this.callable.bind(context)(context, err);\n    }\n}"]}