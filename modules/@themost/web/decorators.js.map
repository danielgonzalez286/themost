{"version":3,"sources":["decorators.es6"],"names":["httpGet","httpPost","httpPut","httpDelete","httpAction","httpParam","httpAuthorize","DecoratorError","Error","target","key","descriptor","value","name","TypeError","parser","authorize"],"mappings":"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","file":"decorators.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\n'use strict';\nimport 'source-map-support/register';\n\nexport class DecoratorError extends Error {\n    constructor() {\n        super('Decorator is not valid on this declaration type.');\n    }\n}\n\nexport function httpGet() {\n    return function (target, key, descriptor) {\n        if (typeof descriptor.value === 'function') {\n            descriptor.value.httpGet = true;\n        }\n        return descriptor;\n    }\n}\n\nexport function httpPost() {\n    return function (target, key, descriptor) {\n        if (typeof descriptor.value !== 'function') {\n            throw new DecoratorError();\n        }\n        descriptor.value.httpPost = true;\n        return descriptor;\n    }\n}\n\nexport function httpPut() {\n    return function (target, key, descriptor) {\n        if (typeof descriptor.value !== 'function') {\n            throw new DecoratorError();\n        }\n        descriptor.value.httpPut = true;\n        return descriptor;\n    }\n}\n\nexport function httpDelete() {\n    return function (target, key, descriptor) {\n        if (typeof descriptor.value !== 'function') {\n            throw new DecoratorError();\n        }\n        descriptor.value.httpDelete = true;\n        return descriptor;\n    }\n}\n/**\n *\n * @param {string} name\n * @returns {Function}\n */\nexport function httpAction(name) {\n    if (typeof name !== 'string') {\n        throw new TypeError('Action name must be a string');\n    }\n    return function (target, key, descriptor) {\n        if (typeof descriptor.value !== 'function') {\n            throw new DecoratorError();\n        }\n        descriptor.value.httpAction = name;\n        return descriptor;\n    }\n}\n\n/**\n *\n * @param {string} name\n * @param {Function} parser\n * @returns {Function}\n */\nexport function httpParam(name, parser) {\n    if (typeof name !== 'string') {\n        throw new TypeError('Action name must be a string');\n    }\n    return function (target, key, descriptor) {\n        if (typeof descriptor.value !== 'function') {\n            throw new DecoratorError();\n        }\n        descriptor.value.httpParam = { name:name, parser:parser };\n        return descriptor;\n    }\n}\n\n/**\n *\n * @param {boolean=} value\n * @returns {Function}\n */\nexport function httpAuthorize(value) {\n    return function (target, key, descriptor) {\n        if (typeof descriptor.value !== 'function') {\n            throw new DecoratorError();\n        }\n        if (typeof value === 'undefined') {\n            descriptor.value.authorize = true;\n        }\n        else if (typeof value === 'boolean') {\n            descriptor.value.authorize = value;\n        }\n        else {\n            throw new TypeError('Authorization flag must be a boolean');\n        }\n        return descriptor;\n    }\n}"]}