{"version":3,"sources":["common.es6"],"names":["HttpApplicationOptions","process","NODE_ENV","port","bind","cluster","HttpApplicationConfig","adapters","engines","mimes","handlers","routes","adapterTypes","dataTypes","settings","locales"],"mappings":"AAAA;;;;;;;;;AASA;;;;;;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;IAoBaA,sB,WAAAA,sB,GACT,kCAAc;AAAA;;AACV,MAAIC,QAAQC,QAAR,KAAqB,aAAzB,EACA,KAAKC,IAAL,GAAY,EAAZ;AACA,OAAKC,IAAL,GAAY,SAAZ;AACA,OAAKC,OAAL,GAAe,CAAf;AACH,C;;AAIL;;;;;;IAIaC,qB,WAAAA,qB,GACT,iCAAc;AAAA;;AACV;;;;AAIA,OAAKC,QAAL,GAAgB,EAAhB;AACA;;;;AAIA,OAAKC,OAAL,GAAe,EAAf;AACA;;;;AAIA,OAAKC,KAAL,GAAa,EAAb;AACA;;;;AAIA,OAAKC,QAAL,GAAgB,EAAhB;AACA;;;;AAIA,OAAKC,MAAL,GAAc,EAAd;AACA;;;;AAIA,OAAKC,YAAL,GAAoB,IAApB;AACA;;;;AAIA,OAAKC,SAAL,GAAiB,IAAjB;AACA;;;;AAIA,OAAKC,QAAL,GAAgB,EAAhB;AACA;;;;AAIA,OAAKC,OAAL,GAAe,EAAf;AACH,C","file":"common.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\n'use strict';\nimport 'source-map-support/register';\n\n/**\n * @classdesc ApplicationOptions class describes the startup options of a MOST Web Framework application.\n * @class\n * @property {number} port - The HTTP binding port number.\n * The default value is either PORT environment variable or 3000.\n * @property {string} bind - The HTTP binding ip address or hostname.\n * The default value is either IP environment variable or 127.0.0.1.\n * @property {number|string} cluster - A number which represents the number of clustered applications.\n * The default value is zero (no clustering). If cluster is 'auto' then the number of clustered applications\n * depends on hardware capabilities (number of CPUs).\n @example\n import {HttpApplication} from '@themost/web/app';\n var app = new HttpApplication();\n app.start({ port:80, bind:\"0.0.0.0\",cluster:'auto' });\n @example\n //Environment variables already set: IP=198.51.100.0 PORT=80\n import {HttpApplication} from '@themost/web/app';\n var app = new HttpApplication();\n app.start();\n */\nexport class HttpApplicationOptions {\n    constructor() {\n        if (process.NODE_ENV === 'development')\n        this.port = 80;\n        this.bind = '0.0.0.0';\n        this.cluster = 0;\n    }\n}\n\n\n/**\n * @classdesc Represents HttpApplication configuration\n * @class\n */\nexport class HttpApplicationConfig {\n    constructor() {\n        /**\n         * Gets an array of data adapters.\n         * @type {Array}\n         */\n        this.adapters = [];\n        /**\n         * Gets an array of HTTP view engines configuration\n         * @type {Array}\n         */\n        this.engines = [];\n        /**\n         *  Gets an array of all registered MIME types\n         * @type {Array}\n         */\n        this.mimes = [];\n        /**\n         * Gets an array of all registered HTTP handlers.\n         * @type {Array}\n         */\n        this.handlers = [];\n        /**\n         * Gets an array of all registered HTTP routes.\n         * @type {Array}\n         */\n        this.routes = [];\n        /**\n         * Gets or sets a collection of data adapter types that are going to be use in data operation\n         * @type {Array}\n         */\n        this.adapterTypes = null;\n        /**\n         * Gets or sets a collection of data types that are going to be use in data operation\n         * @type {Array}\n         */\n        this.dataTypes = null;\n        /**\n         * Gets or sets an object that holds application settings\n         * @type {Array}\n         */\n        this.settings = { };\n        /**\n         * Gets or sets an object that holds application locales\n         * @type {*}\n         */\n        this.locales = { };\n    }\n}\n\n\n"]}