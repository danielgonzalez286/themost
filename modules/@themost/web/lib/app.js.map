{"version":3,"sources":["app.es6"],"names":["_","async","crypto","Args","TraceUtils","RandomUtils","HttpError","HttpNotFoundError","AbstractClassError","AbstractMethodError","HttpNextResult","HttpEndResult","HttpResult","HttpAnyResult","AuthConsumer","BasicAuthConsumer","EncryptionStrategy","DefaultEncyptionStrategy","AuthStrategy","RestrictAccessConsumer","RestrictAccessService","HttpConsumer","HttpRouteConsumer","HttpErrorConsumer","StaticContentConsumer","HttpContext","RoutingStrategy","DefaultRoutingStrategy","RouteConsumer","LocalizationStrategy","DefaultLocalizationStrategy","CacheStrategy","DefaultCacheStrategy","Rx","path","http","https","HttpApplicationService","ViewConsumer","HTTP_SERVER_DEFAULT_BIND","HTTP_SERVER_DEFAULT_PORT","startInternal","options","self","opts","bind","process","env","IP","port","PORT","assign","server_","createServer","request","response","context","createContext","Observable","fromNodeCallback","processRequestInternal","subscribe","result","finalize","end","err","processErrorInternal","res","error","statusCode","status","writeHead","write","message","serverProperty","listen","log","initInternal","str","join","cwd","configProperty","require","code","config","conf","settings","randomHex","callback","consumers","getApplication","consumersProperty","eachSeries","consumer","cb","callable","apply","finalRes","isNil","otherWiseConsumer","otherwiseConsumerProperty","isFunction","ReferenceError","Error","errorConsumers","errorConsumersProperty","length","call","createRequestInternal","opt","IncomingMessage","method","url","httpVersion","headers","host","accept","connection","cookie","cookies","session","params","query","form","body","files","createResponseInternal","req","ServerResponse","currentProperty","Symbol","servicesProperty","executionPathProperty","configPathProperty","HttpApplication","executionPath","notEmpty","arg","check","isString","resolve","getExecutionPath","warn","routes","push","uri","serviceCtor","notFunction","name","strategyCtor","hasOwnProperty","useStrategy","any","useService","rootDir","whenDir","hasService","fn","account","getService","getUnattendedExecutionAccount","isEmpty","user","authenticationType"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\n'use strict';\nimport {_} from 'lodash';\nimport async from 'async';\nimport crypto from 'crypto';\nimport {Args, TraceUtils, RandomUtils} from '@themost/common/utils';\nimport {HttpError, HttpNotFoundError, AbstractClassError, AbstractMethodError} from '@themost/common/errors';\nimport {HttpNextResult,HttpEndResult,HttpResult,HttpAnyResult} from './results';\nimport {AuthConsumer, BasicAuthConsumer, EncryptionStrategy, DefaultEncyptionStrategy, AuthStrategy} from './auth';\nimport {RestrictAccessConsumer,RestrictAccessService} from './restrict_access';\nimport {HttpConsumer,HttpRouteConsumer,HttpErrorConsumer} from './consumers';\nimport {StaticContentConsumer} from './static';\nimport {HttpContext} from './context';\nimport {RoutingStrategy,DefaultRoutingStrategy,RouteConsumer} from './route';\nimport {LocalizationStrategy,DefaultLocalizationStrategy} from './localization';\nimport {CacheStrategy,DefaultCacheStrategy} from './cache';\nimport {Rx} from 'rx';\nimport path from 'path';\nimport http from 'http';\nimport https from 'https';\nimport {HttpApplicationService} from \"./interfaces\";\nimport {ViewConsumer} from \"./view\";\n\nconst HTTP_SERVER_DEFAULT_BIND = '127.0.0.1';\nconst HTTP_SERVER_DEFAULT_PORT = 3000;\n\n/**\n * Starts current application\n * @private\n * @static\n * @param {ApplicationOptions|*} options\n */\nfunction startInternal(options) {\n    /**\n     * @type {HttpApplication|*}\n     */\n    const self = this;\n    try {\n        /**\n         * @memberof process.env\n         * @property {number} PORT\n         * @property {string} IP\n         * @property {string} NODE_ENV\n         */\n        const opts = {\n            bind:(process.env.IP || HTTP_SERVER_DEFAULT_BIND),\n            port:(process.env.PORT ? process.env.PORT: HTTP_SERVER_DEFAULT_PORT)\n        };\n        //extend options\n        _.assign(opts, options);\n\n        const server_ = http.createServer(function (request, response) {\n            const context = self.createContext(request, response);\n            //begin request processing\n            Rx.Observable.fromNodeCallback(processRequestInternal)(context)\n                .subscribe((result)=> {\n                    context.finalize(function() {\n                        if (context.response) { context.response.end(); }\n                    });\n            }, (err) => {\n                //process error\n                Rx.Observable.fromNodeCallback(processErrorInternal)(context, err)\n                    .subscribe((res) => {\n                        context.finalize(function() {\n                            if (context.response) { context.response.end(); }\n                        });\n                    }, (err) => {\n                        //an error occurred while handling request error\n                        TraceUtils.error(err);\n                        if (context && context.response) {\n                            if (err instanceof HttpError) {\n                                const statusCode = err.status || 500;\n                                //send a text/plain error (and safely end response)\n                                context.response.writeHead(statusCode, {\"Content-Type\": \"text/plain\"});\n                                context.response.write(statusCode + ' ' + err.message + '\\n');\n                            }\n                            else {\n                                //send a text/plain error (and safely end response)\n                                context.response.writeHead(500, {\"Content-Type\": \"text/plain\"});\n                                context.response.write('500 Internal Server Error\\n');\n                            }\n\n                            if (typeof context.finalize === 'function') {\n                                context.finalize(function() {\n                                    if (context.response) { context.response.end(); }\n                                });\n                            }\n                            else {\n                                if (context.response) { context.response.end(); }\n                            }\n\n                        }\n                    });\n            });\n        });\n        self[serverProperty] = server_;\n        //start listening\n        server_.listen(opts.port, opts.bind);\n        TraceUtils.log('Web application is running at http://%s:%s/', opts.bind, opts.port);\n    } catch (err) {\n        TraceUtils.log(err);\n    }\n}\n\n/**\n * Initializes application\n * @private\n * @static\n * @return {HttpApplication}\n */\nfunction initInternal() {\n\n    /**\n     * @type {HttpApplication|*}\n     */\n    const self = this;\n    /**\n     * Gets or sets application configuration settings\n     */\n        //get node environment\n    const env = process.env['NODE_ENV'] || 'production';\n\n    let str;\n    //first of all try to load environment specific configuration\n    try {\n        TraceUtils.log('Init: Loading environment specific configuration file (app.%s.json)', env);\n        str = path.join(process.cwd(), 'config', 'app.' + env + '.json');\n        /**\n         * @type {HttpApplicationConfig}\n         */\n        self[configProperty] = require(str);\n        TraceUtils.log('Init: Environment specific configuration file (app.%s.json) was succesfully loaded.', env);\n    }\n    catch (err) {\n        if (err.code === 'MODULE_NOT_FOUND') {\n            TraceUtils.log('Init: Environment specific configuration file (app.%s.json) is missing.', env);\n            //try to load default configuration file\n            try {\n                TraceUtils.log('Init: Loading environment default configuration file (app.json)');\n                str = path.join(process.cwd(), 'config', 'app.json');\n                /**\n                 * @type {HttpApplicationConfig}\n                 */\n                self.config = require(str);\n                TraceUtils.log('Init: Default configuration file (app.json) was succesfully loaded.');\n            }\n            catch (err) {\n                if (err.code === 'MODULE_NOT_FOUND') {\n                    TraceUtils.log('Init: An error occured while loading default configuration (app.json). Configuration cannot be found or is inaccesible.');\n                    //load internal configuration file\n                    /**\n                     * @type {HttpApplicationConfig}\n                     */\n                    let conf = require('./resources/app.json');\n                    conf.settings = conf.settings || {};\n                    conf.settings.crypto = {\n                        \"algorithm\": \"aes256\",\n                        \"key\": RandomUtils.randomHex(32)\n                    };\n                    this[configProperty] = conf;\n                    TraceUtils.log('Init: Internal configuration file (app.json) was succesfully loaded.');\n                }\n                else {\n                    TraceUtils.log('Init: An error occured while loading default configuration (app.json)');\n                    throw err;\n                }\n            }\n        }\n        else {\n            TraceUtils.log('Init: An error occured while loading application specific configuration (app).', env);\n            throw err;\n        }\n    }\n}\n/**\n * Processes an HTTP request under current application\n * @private\n * @static\n * @param {HttpContext} context\n * @param {Function} callback\n */\nfunction processRequestInternal(context, callback) {\n    /**\n     * @type {HttpApplication|*}\n     */\n    const self = this,\n        /**\n         * @type {Array}\n         */\n        consumers = context.getApplication()[consumersProperty];\n\n    return async.eachSeries(consumers,\n        /**\n         * @param {HttpConsumer} consumer\n         * @param {Function} cb\n         */\n        function(consumer, cb) {\n        consumer.callable.apply(context).subscribe(result=> {\n            //if result is an instance of HttpNextResult\n            if (result instanceof HttpNextResult) {\n                //continue series execution (call series callback with no error)\n                return cb();\n            }\n            else if (result instanceof HttpResult) {\n                //continue series execution (call series callback with no error)\n                return cb(result);\n            }\n            //else break series execution and return result\n            return cb(new HttpAnyResult(result));\n        }, err=> {\n            return cb(err);\n        });\n    }, function(finalRes) {\n            if (_.isNil(finalRes)) {\n                //get otherwise consumer\n                const otherWiseConsumer = self[otherwiseConsumerProperty];\n                if (otherWiseConsumer instanceof HttpConsumer) {\n                    if (!_.isFunction(otherWiseConsumer.callable)) {\n                        return callback(new ReferenceError('HTTP consumer callable must be a function.'));\n                    }\n                    return otherWiseConsumer.callable.apply(context).subscribe(result=> {\n                        if (result instanceof HttpNextResult) {\n                            return callback(new HttpNotFoundError());\n                        }\n                        else if (result instanceof HttpResult) {\n                            //continue series execution (call series callback with no error)\n                            return callback(null, finalRes);\n                        }\n                        //else break series execution and return result\n                        return callback(new HttpAnyResult(result));\n                    }, err => {\n                        return callback(err);\n                    });\n                }\n                else {\n                    return callback(new HttpNotFoundError());\n                }\n            }\n            //if result is an error\n            if (finalRes instanceof Error) {\n                return callback(finalRes);\n            }\n            return callback(null, finalRes);\n    });\n}\n\n/**\n * Processes HTTP errors under current application\n * @param {HttpContext} context\n * @param {Error|*} error\n * @param {Function} callback\n */\nfunction processErrorInternal(context, error, callback) {\n    /**\n     * @type {HttpApplication|*}\n     */\n    const self = this,\n        /**\n         * @type {Array}\n         */\n        errorConsumers = context.getApplication()[errorConsumersProperty];\n        if (errorConsumers.length==0) {\n            return callback(error);\n        }\n    return async.eachSeries(errorConsumers, function(consumer, cb) {\n        consumer.callable.call(context, error).subscribe(result=> {\n            if (result instanceof HttpNextResult) {\n                return cb();\n            }\n            return cb(result);\n        }, err=> {\n            return cb(err);\n        });\n    }, function(err) {\n        return callback(err);\n    });\n}\n\n/**\n * Creates a mock-up server request\n * @private\n * @param {*} options\n */\nfunction createRequestInternal(options) {\n    const opt = options ? options : {};\n    const request = new http.IncomingMessage();\n    request.method = (opt.method) ? opt.method : 'GET';\n    request.url = (opt.url) ? opt.url : '/';\n    request.httpVersion = '1.1';\n    request.headers = (opt.headers) ? opt.headers : {\n            host: 'localhost',\n            'user-agent': 'Mozilla/5.0 (X11; Linux i686; rv:10.0) Gecko/20100101 Firefox/22.0',\n            accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n            'accept-language': 'en-US,en;q=0.5',\n            'accept-encoding': 'gzip, deflate',\n            connection: 'keep-alive',\n            'cache-control': 'max-age=0' };\n    if (opt.cookie)\n        request.headers.cookie = opt.cookie;\n    request.cookies = (opt.cookies) ? opt.cookies : {};\n    request.session = (opt.session) ? opt.session : {};\n    request.params = (opt.params) ? opt.params : {};\n    request.query = (opt.query) ? opt.query : {};\n    request.form = (opt.form) ? opt.form : {};\n    request.body = (opt.body) ? opt.body : {};\n    request.files = (opt.files) ? opt.files : {};\n    return request;\n}\n\n/**\n * Creates a mock-up server response\n * @param {ClientRequest} req\n * @returns {ServerResponse|*}\n * @private\n */\nfunction createResponseInternal(req) {\n    return new http.ServerResponse(req);\n}\n\nconst currentProperty = Symbol('current');\nconst consumersProperty = Symbol('consumers');\nconst errorConsumersProperty = Symbol('errorConsumers');\nconst otherwiseConsumerProperty = Symbol('otherwise');\nconst configProperty = Symbol('config');\nconst serverProperty = Symbol('server');\nconst servicesProperty = Symbol('services');\nconst executionPathProperty = Symbol('executionPath');\nconst configPathProperty = Symbol('configPath');\n\n/**\n * @classdesc Represents an HTTP server application\n * @class\n */\nexport class HttpApplication {\n    /**\n     * @constructor\n     */\n    constructor() {\n        this[consumersProperty] = [];\n        this[errorConsumersProperty] = [];\n        this[servicesProperty] = {};\n        this[executionPathProperty] = process.cwd();\n        this[configPathProperty] = path.join(process.cwd(),'config');\n        //load configuration\n\n    }\n\n    /**\n     * Sets the execution path of the current HTTP application\n     * @param {string} executionPath\n     * @return {HttpApplication}\n     */\n    setExecutionPath(executionPath) {\n        Args.notEmpty(executionPath,'Execution Path');\n        this[executionPathProperty] = executionPath;\n        return this;\n    }\n\n    /**\n     * Gets the execution path of the current HTTP application\n     * @returns {string}\n     */\n    getExecutionPath() {\n        return this[executionPathProperty]\n    }\n\n    /**\n     * Resolves the given path\n     * @param {string} arg\n     */\n    mapExecutionPath(arg) {\n        Args.check(_.isString(arg),'Path must be a string');\n        path.resolve(this.getExecutionPath(), arg);\n    }\n\n    /**\n     * Gets the configuration path of the current HTTP application\n     * @returns {string}\n     */\n    getConfigurationPath() {\n        return this[configPathProperty]\n    }\n\n    /**\n     * @returns {HttpApplicationConfig|*}\n     */\n    getConfiguration() {\n        if (typeof this[configProperty] === 'undefined') {\n            //load configuration\n            try {\n                const env = process.env['NODE_ENV'] || 'production';\n                this[configProperty] = require(path.join(this[configPathProperty], 'app.' + env + '.json'));\n            }\n            catch(err) {\n                if (err.code === 'MODULE_NOT_FOUND') {\n                    TraceUtils.warn('Data: The environment specific configuration cannot be found or is inaccesible.');\n                    try {\n                        this[configProperty] = require(path.join(this[configPathProperty], 'app.json'));\n                    }\n                    catch(err) {\n                        if (err.code === 'MODULE_NOT_FOUND') {\n                            TraceUtils.warn('Data: The default application configuration cannot be found or is inaccesible.');\n                        }\n                        else {\n                            TraceUtils.error('Data: An error occured while trying to open default application configuration.');\n                            TraceUtils.error(err);\n                        }\n                        this[configProperty] = require('./resources/app.json');\n                    }\n                }\n                else {\n                    TraceUtils.error('Data: An error occured while trying to open application configuration.');\n                    TraceUtils.error(err);\n                    this[configProperty] = require('./resources/app.json');\n                }\n            }\n            try {\n                this[configProperty].routes = require(path.join(this[configPathProperty], 'routes.json'));\n            }\n            catch(err) {\n                if (err.code === 'MODULE_NOT_FOUND') {\n                    TraceUtils.warn('Data: Route configuration cannot be found or is inaccesible.');\n                    this[configProperty].routes = require('./resources/routes.json');\n                }\n                else {\n                    TraceUtils.error('Data: An error occured while trying to open route configuration.');\n                    TraceUtils.error(err);\n                    this[configProperty].routes = require('./resources/routes.json');\n                }\n            }\n        }\n        return this[configProperty];\n    }\n\n    /**\n     * @returns {Server|*}\n     */\n    getServer() {\n        return this[serverProperty];\n    }\n\n    /**\n     * @param {Function|HttpConsumer} consumer\n     * @param {*=} params\n     * @returns HttpApplication\n     */\n    any(consumer, params) {\n        if (consumer instanceof HttpConsumer) {\n            this[consumersProperty].push(consumer);\n        }\n        else {\n            this[consumersProperty].push(new HttpConsumer(consumer, params));\n        }\n        return this;\n    }\n\n    /**\n     * @param {Function|HttpErrorConsumer} consumer\n     * @param {*=} params\n     * @returns HttpApplication\n     */\n    error(consumer, params) {\n        if (consumer instanceof HttpErrorConsumer) {\n            this[errorConsumersProperty].push(consumer);\n        }\n        else {\n            this[errorConsumersProperty].push(new HttpErrorConsumer(consumer, params));\n        }\n        return this;\n    }\n\n    /**\n     * @param {string} uri\n     * @param {Function|HttpConsumer} consumer\n     * @param {*=} params\n     * @returns HttpApplication\n     */\n    when(uri, consumer, params) {\n        if (consumer instanceof HttpRouteConsumer) {\n            this[consumersProperty].push(consumer);\n        }\n        else {\n            this[consumersProperty].push(new HttpRouteConsumer(uri,consumer, params));\n        }\n        return this;\n    }\n\n    /**\n     * @param {Function|HttpConsumer} consumer\n     * @param {*=} params\n     * @returns HttpApplication\n     */\n    otherwise(consumer, params) {\n        if ((consumer instanceof HttpConsumer) || (consumer instanceof HttpErrorConsumer)) {\n            this[otherwiseConsumerProperty] = consumer;\n        }\n        else {\n            this[otherwiseConsumerProperty] = new HttpConsumer(consumer, params);\n        }\n        return this;\n    }\n\n    /**\n     * Register a service type in application services\n     * @param {Function} serviceCtor\n     */\n    useService(serviceCtor) {\n        Args.notFunction(serviceCtor,\"Service constructor\");\n        this[servicesProperty][`${serviceCtor.name}`] = new serviceCtor(this);\n    }\n\n    /**\n     * Register a service type in application services\n     * @param {Function} serviceCtor\n     * @param {Function} strategyCtor\n     */\n    useStrategy(serviceCtor, strategyCtor) {\n        Args.notFunction(strategyCtor,\"Service constructor\");\n        Args.notFunction(strategyCtor,\"Strategy constructor\");\n        this[servicesProperty][`${serviceCtor.name}`] = new strategyCtor(this);\n    }\n\n    /**\n     * Register a service type in application services\n     * @param {Function} serviceCtor\n     */\n    getService(serviceCtor) {\n        Args.notFunction(serviceCtor,\"Service constructor\");\n        return this[servicesProperty][`${serviceCtor.name}`];\n    }\n\n    /**\n     * Checks if a service of the given type exists in application services\n     * @param {Function} serviceCtor\n     * @returns boolean\n     */\n    hasService(serviceCtor) {\n        return this[servicesProperty].hasOwnProperty(`${serviceCtor.name}`);\n    }\n\n\n    /**\n     * Enables application default routing strategy\n     * @returns {HttpApplication}\n     */\n    useRoutingStrategy() {\n        return this.useStrategy(RoutingStrategy, DefaultRoutingStrategy);\n    }\n\n    /**\n     * Enables application default routing strategy\n     * @returns {HttpApplication}\n     */\n    useCacheStrategy() {\n        return this.useStrategy(CacheStrategy, DefaultCacheStrategy);\n    }\n\n    /**\n     * Enables application default routing strategy\n     * @returns {HttpApplication}\n     */\n    useEncryptionStrategy() {\n        return this.useStrategy(EncryptionStrategy, DefaultEncyptionStrategy);\n    }\n\n    /**\n     * Enables application default localization strategy\n     * @returns {HttpApplication}\n     */\n    useLocalization() {\n        return this.useStrategy(LocalizationStrategy, DefaultLocalizationStrategy);\n    }\n\n    /**\n     * Enables basic authentication\n     * @returns {HttpApplication}\n     */\n    useBasicAuthentication() {\n        return this.any(new BasicAuthConsumer());\n    }\n\n    /**\n     * Enables application authentication\n     * @returns {HttpApplication}\n     */\n    useRestrictAccess() {\n        this.useService(RestrictAccessService);\n        return this.any(new RestrictAccessConsumer());\n    }\n\n    /**\n     * Enables application authentication\n     */\n    useAuthentication() {\n        this.useStrategy(EncryptionStrategy, DefaultEncyptionStrategy);\n        return this.any(new AuthConsumer());\n    }\n\n    /**\n     * Enables static content requests\n     * @param {string=} rootDir\n     * @returns {HttpApplication}\n     */\n    useStaticContent(rootDir) {\n        return this.any(new StaticContentConsumer(rootDir));\n    }\n\n    /**\n     * Enables static content requests\n     * @param {string=} whenDir\n     * @param {string=} rootDir\n     * @returns {HttpApplication}\n     */\n    whenStaticContent(whenDir, rootDir) {\n        return this.any(new StaticContentConsumer(rootDir, whenDir));\n    }\n\n    /**\n     * Enables static content requests\n     * @returns {HttpApplication}\n     */\n    useViewContent() {\n        if (!this.hasService(RoutingStrategy))  {\n            this.useStrategy(RoutingStrategy, DefaultRoutingStrategy);\n        }\n        this.any(new RouteConsumer());\n        return this.any(new ViewConsumer());\n    }\n\n    /**\n     * Starts the current HTTP application.\n     * @param {HttpApplicationOptions=} options\n     * @return {HttpApplication}\n     */\n    start(options) {\n        initInternal.call(this);\n        startInternal.call(this);\n        return this;\n    }\n\n    /**\n     * Creates an instance of HttpContext class.\n     * @param {ClientRequest} request\n     * @param {ServerResponse} response\n     * @returns {HttpContext}\n     */\n    createContext(request, response) {\n       return new HttpContext(this, request, response);\n    }\n\n    /**\n     * @returns {HttpApplication}\n     */\n    static getCurrent() {\n        if (_.isNil(HttpApplication[currentProperty])) {\n            HttpApplication[currentProperty] = new HttpApplication();\n        }\n        return HttpApplication[currentProperty];\n    }\n\n    /**\n     * Creates a new context and executes the given function\n     * @param {Function} fn - A function to execute. The first argument is the current context\n     * @returns {Observable}\n     */\n    execute(fn) {\n        const self = this;\n        return Rx.Observable.fromNodeCallback(function(callback) {\n            //create context\n            const request = createRequestInternal.call(self),\n                response = createResponseInternal.call(self,request);\n            let context = self.createContext(request, response);\n            fn(context).subscribe(()=>{\n                return callback();\n            }, (err) => {\n                return callback(err);\n            });\n        });\n    }\n\n    /**\n     * Creates a new context and executes the given function in unattended mode\n     * @param {Function} fn\n     * @returns {Observable}\n     */\n    executeUnattended(fn) {\n        const self = this;\n        return Rx.Observable.fromNodeCallback(function(callback) {\n            //create context\n            const request = createRequestInternal.call(self),\n                response = createResponseInternal.call(self,request);\n            let context = self.createContext(request, response);\n            //get unattended execution account\n            if (this.hasService(AuthStrategy)) {\n                const account = this.getService(AuthStrategy).getUnattendedExecutionAccount();\n                if (_.isEmpty(account)) {\n                    context.user = { name: account, authenticationType: 'Basic'};\n                }\n            }\n            fn(context).subscribe(()=>{\n                return callback();\n            }, (err) => {\n                return callback(err);\n            });\n        });\n    }\n\n}"]}