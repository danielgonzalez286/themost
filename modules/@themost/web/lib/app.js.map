{"version":3,"sources":["app.es6"],"names":["_","async","crypto","Args","TraceUtils","RandomUtils","HttpError","HttpNotFoundError","AbstractClassError","AbstractMethodError","HttpNextResult","HttpEndResult","HttpResult","HttpAnyResult","AuthConsumer","BasicAuthConsumer","EncryptionStrategy","DefaultEncyptionStrategy","RestrictAccessConsumer","RestrictAccessService","HttpConsumer","HttpRouteConsumer","HttpErrorConsumer","StaticContentConsumer","HttpContext","RoutingStrategy","DefaultRoutingStrategy","LocalizationStrategy","DefaultLocalizationStrategy","CacheStrategy","DefaultCacheStrategy","Rx","path","http","https","HttpApplicationService","HTTP_SERVER_DEFAULT_BIND","HTTP_SERVER_DEFAULT_PORT","startInternal","options","self","opts","bind","process","env","IP","port","PORT","assign","server_","createServer","request","response","context","createContext","Observable","fromNodeCallback","processRequestInternal","subscribe","result","finalize","end","err","processErrorInternal","res","error","statusCode","status","writeHead","write","message","serverProperty","listen","log","initInternal","str","join","cwd","configProperty","require","code","config","conf","settings","randomHex","callback","consumers","getApplication","consumersProperty","eachSeries","consumer","cb","callable","apply","finalRes","isNil","otherWiseConsumer","otherwiseConsumerProperty","isFunction","ReferenceError","Error","errorConsumers","errorConsumersProperty","length","call","currentProperty","Symbol","servicesProperty","HttpApplication2","executionPath","params","push","uri","serviceCtor","notFunction","name","strategyCtor","hasOwnProperty","useStrategy","any","useService","rootDir","whenDir"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\n'use strict';\nimport {_} from 'lodash';\nimport async from 'async';\nimport crypto from 'crypto';\nimport {Args, TraceUtils, RandomUtils} from '@themost/common/utils';\nimport {HttpError, HttpNotFoundError, AbstractClassError, AbstractMethodError} from '@themost/common/errors';\nimport {HttpNextResult,HttpEndResult,HttpResult,HttpAnyResult} from './results';\nimport {AuthConsumer, BasicAuthConsumer, EncryptionStrategy, DefaultEncyptionStrategy} from './auth';\nimport {RestrictAccessConsumer,RestrictAccessService} from './restrict_access';\nimport {HttpConsumer,HttpRouteConsumer,HttpErrorConsumer} from './consumers';\nimport {StaticContentConsumer} from './static';\nimport {HttpContext} from './context';\nimport {RoutingStrategy,DefaultRoutingStrategy} from './route';\nimport {LocalizationStrategy,DefaultLocalizationStrategy} from './localization';\nimport {CacheStrategy,DefaultCacheStrategy} from './cache';\nimport {Rx} from 'rx';\nimport path from 'path';\nimport http from 'http';\nimport https from 'https';\nimport {HttpApplicationService} from \"./interfaces\";\n\nconst HTTP_SERVER_DEFAULT_BIND = '127.0.0.1';\nconst HTTP_SERVER_DEFAULT_PORT = 3000;\n\n/**\n * Starts current application\n * @private\n * @static\n * @param {ApplicationOptions|*} options\n */\nfunction startInternal(options) {\n    /**\n     * @type {HttpApplication2|*}\n     */\n    const self = this;\n    try {\n        /**\n         * @memberof process.env\n         * @property {number} PORT\n         * @property {string} IP\n         * @property {string} NODE_ENV\n         */\n        const opts = {\n            bind:(process.env.IP || HTTP_SERVER_DEFAULT_BIND),\n            port:(process.env.PORT ? process.env.PORT: HTTP_SERVER_DEFAULT_PORT)\n        };\n        //extend options\n        _.assign(opts, options);\n\n        const server_ = http.createServer(function (request, response) {\n            const context = self.createContext(request, response);\n            //begin request processing\n            Rx.Observable.fromNodeCallback(processRequestInternal)(context)\n                .subscribe((result)=> {\n                    context.finalize(function() {\n                        if (context.response) { context.response.end(); }\n                    });\n            }, (err) => {\n                //process error\n                Rx.Observable.fromNodeCallback(processErrorInternal)(context, err)\n                    .subscribe((res) => {\n                        context.finalize(function() {\n                            if (context.response) { context.response.end(); }\n                        });\n                    }, (err) => {\n                        //an error occurred while handling request error\n                        TraceUtils.error(err);\n                        if (context && context.response) {\n                            if (err instanceof HttpError) {\n                                const statusCode = err.status || 500;\n                                //send a text/plain error (and safely end response)\n                                context.response.writeHead(statusCode, {\"Content-Type\": \"text/plain\"});\n                                context.response.write(statusCode + ' ' + err.message + '\\n');\n                            }\n                            else {\n                                //send a text/plain error (and safely end response)\n                                context.response.writeHead(500, {\"Content-Type\": \"text/plain\"});\n                                context.response.write('500 Internal Server Error\\n');\n                            }\n\n                            context.finalize(function() {\n                                if (context.response) { context.response.end(); }\n                            });\n                        }\n                    });\n            });\n        });\n        self[serverProperty] = server_;\n        //start listening\n        server_.listen(opts.port, opts.bind);\n        TraceUtils.log('Web application is running at http://%s:%s/', opts.bind, opts.port);\n    } catch (err) {\n        TraceUtils.log(err);\n    }\n}\n\n/**\n * Initializes application\n * @private\n * @static\n * @return {HttpApplication2}\n */\nfunction initInternal() {\n\n    /**\n     * @type {HttpApplication2|*}\n     */\n    const self = this;\n    /**\n     * Gets or sets application configuration settings\n     */\n        //get node environment\n    const env = process.env['NODE_ENV'] || 'production';\n\n    let str;\n    //first of all try to load environment specific configuration\n    try {\n        TraceUtils.log('Init: Loading environment specific configuration file (app.%s.json)', env);\n        str = path.join(process.cwd(), 'config', 'app.' + env + '.json');\n        /**\n         * @type {HttpApplicationConfig}\n         */\n        self[configProperty] = require(str);\n        TraceUtils.log('Init: Environment specific configuration file (app.%s.json) was succesfully loaded.', env);\n    }\n    catch (err) {\n        if (err.code === 'MODULE_NOT_FOUND') {\n            TraceUtils.log('Init: Environment specific configuration file (app.%s.json) is missing.', env);\n            //try to load default configuration file\n            try {\n                TraceUtils.log('Init: Loading environment default configuration file (app.json)');\n                str = path.join(process.cwd(), 'config', 'app.json');\n                /**\n                 * @type {HttpApplicationConfig}\n                 */\n                self.config = require(str);\n                TraceUtils.log('Init: Default configuration file (app.json) was succesfully loaded.');\n            }\n            catch (err) {\n                if (err.code === 'MODULE_NOT_FOUND') {\n                    TraceUtils.log('Init: An error occured while loading default configuration (app.json). Configuration cannot be found or is inaccesible.');\n                    //load internal configuration file\n                    /**\n                     * @type {HttpApplicationConfig}\n                     */\n                    let conf = require('./resources/app.json');\n                    conf.settings = conf.settings || {};\n                    conf.settings.crypto = {\n                        \"algorithm\": \"aes256\",\n                        \"key\": RandomUtils.randomHex(32)\n                    };\n                    this[configProperty] = conf;\n                    TraceUtils.log('Init: Internal configuration file (app.json) was succesfully loaded.');\n                }\n                else {\n                    TraceUtils.log('Init: An error occured while loading default configuration (app.json)');\n                    throw err;\n                }\n            }\n        }\n        else {\n            TraceUtils.log('Init: An error occured while loading application specific configuration (app).', env);\n            throw err;\n        }\n    }\n}\n/**\n * Processes an HTTP request under current application\n * @private\n * @static\n * @param {HttpContext} context\n * @param {Function} callback\n */\nfunction processRequestInternal(context, callback) {\n    /**\n     * @type {HttpApplication2|*}\n     */\n    const self = this,\n        /**\n         * @type {Array}\n         */\n        consumers = context.getApplication()[consumersProperty];\n\n    return async.eachSeries(consumers,\n        /**\n         * @param {HttpConsumer} consumer\n         * @param {Function} cb\n         */\n        function(consumer, cb) {\n        consumer.callable.apply(context).subscribe(result=> {\n            //if result is an instance of HttpNextResult\n            if (result instanceof HttpNextResult) {\n                //continue series execution (call series callback with no error)\n                return cb();\n            }\n            else if (result instanceof HttpResult) {\n                //continue series execution (call series callback with no error)\n                return cb(result);\n            }\n            //else break series execution and return result\n            return cb(new HttpAnyResult(result));\n        }, err=> {\n            return cb(err);\n        });\n    }, function(finalRes) {\n            if (_.isNil(finalRes)) {\n                //get otherwise consumer\n                const otherWiseConsumer = self[otherwiseConsumerProperty];\n                if (otherWiseConsumer instanceof HttpConsumer) {\n                    if (!_.isFunction(otherWiseConsumer.callable)) {\n                        return callback(new ReferenceError('HTTP consumer callable must be a function.'));\n                    }\n                    return otherWiseConsumer.callable.apply(context).subscribe(result=> {\n                        if (result instanceof HttpNextResult) {\n                            return callback(new HttpNotFoundError());\n                        }\n                        else if (result instanceof HttpResult) {\n                            //continue series execution (call series callback with no error)\n                            return callback(null, finalRes);\n                        }\n                        //else break series execution and return result\n                        return callback(new HttpAnyResult(result));\n                    }, err => {\n                        return callback(err);\n                    });\n                }\n                else {\n                    return callback(new HttpNotFoundError());\n                }\n            }\n            //if result is an error\n            if (finalRes instanceof Error) {\n                return callback(finalRes);\n            }\n            return callback(null, finalRes);\n    });\n}\n\n/**\n * Processes HTTP errors under current application\n * @param {HttpContext} context\n * @param {Error|*} error\n * @param {Function} callback\n */\nfunction processErrorInternal(context, error, callback) {\n    /**\n     * @type {HttpApplication2|*}\n     */\n    const self = this,\n        /**\n         * @type {Array}\n         */\n        errorConsumers = context.getApplication()[errorConsumersProperty];\n        if (errorConsumers.length==0) {\n            return callback(error);\n        }\n    return async.eachSeries(errorConsumers, function(consumer, cb) {\n        consumer.callable.call(context, error).subscribe(result=> {\n            if (result instanceof HttpNextResult) {\n                return cb();\n            }\n            return cb(result);\n        }, err=> {\n            return cb(err);\n        });\n    }, function(err) {\n        return callback(err);\n    });\n}\n\nconst currentProperty = Symbol('current');\nconst consumersProperty = Symbol('consumers');\nconst errorConsumersProperty = Symbol('errorConsumers');\nconst otherwiseConsumerProperty = Symbol('otherwise');\nconst configProperty = Symbol('config');\nconst serverProperty = Symbol('server');\nconst servicesProperty = Symbol('services');\n\n/**\n * @classdesc Represents an HTTP server application\n * @class\n */\nexport class HttpApplication2 {\n    /**\n     * @constructor\n     */\n    constructor() {\n        this[consumersProperty] = [];\n        this[errorConsumersProperty] = [];\n        this[configProperty] = {};\n        this[servicesProperty] = {};\n        this.executionPath = process.cwd();\n    }\n\n    /**\n     * @returns {HttpApplicationConfig|*}\n     */\n    getConfiguration() {\n        return this[configProperty];\n    }\n\n    /**\n     * @returns {Server|*}\n     */\n    getServer() {\n        return this[serverProperty];\n    }\n\n    /**\n     * @param {Function|HttpConsumer} consumer\n     * @param {*=} params\n     * @returns HttpApplication2\n     */\n    any(consumer, params) {\n        if (consumer instanceof HttpConsumer) {\n            this[consumersProperty].push(consumer);\n        }\n        else {\n            this[consumersProperty].push(new HttpConsumer(consumer, params));\n        }\n        return this;\n    }\n\n    /**\n     * @param {Function|HttpErrorConsumer} consumer\n     * @param {*=} params\n     * @returns HttpApplication2\n     */\n    error(consumer, params) {\n        if (consumer instanceof HttpErrorConsumer) {\n            this[errorConsumersProperty].push(consumer);\n        }\n        else {\n            this[errorConsumersProperty].push(new HttpErrorConsumer(consumer, params));\n        }\n        return this;\n    }\n\n    /**\n     * @param {string} uri\n     * @param {Function|HttpConsumer} consumer\n     * @param {*=} params\n     * @returns HttpApplication2\n     */\n    when(uri, consumer, params) {\n        if (consumer instanceof HttpRouteConsumer) {\n            this[consumersProperty].push(consumer);\n        }\n        else {\n            this[consumersProperty].push(new HttpRouteConsumer(uri,consumer, params));\n        }\n        return this;\n    }\n\n    /**\n     * @param {Function|HttpConsumer} consumer\n     * @param {*=} params\n     * @returns HttpApplication2\n     */\n    otherwise(consumer, params) {\n        if ((consumer instanceof HttpConsumer) || (consumer instanceof HttpErrorConsumer)) {\n            this[otherwiseConsumerProperty] = consumer;\n        }\n        else {\n            this[otherwiseConsumerProperty] = new HttpConsumer(consumer, params);\n        }\n        return this;\n    }\n\n    /**\n     * Register a service type in application services\n     * @param {Function} serviceCtor\n     */\n    useService(serviceCtor) {\n        Args.notFunction(serviceCtor,\"Service constructor\");\n        this[servicesProperty][`${serviceCtor.name}`] = new serviceCtor(this);\n    }\n\n    /**\n     * Register a service type in application services\n     * @param {Function} serviceCtor\n     * @param {Function} strategyCtor\n     */\n    useStrategy(serviceCtor, strategyCtor) {\n        Args.notFunction(strategyCtor,\"Service constructor\");\n        Args.notFunction(strategyCtor,\"Strategy constructor\");\n        this[servicesProperty][`${serviceCtor.name}`] = new strategyCtor(this);\n    }\n\n    /**\n     * Register a service type in application services\n     * @param {Function} serviceCtor\n     */\n    getService(serviceCtor) {\n        Args.notFunction(serviceCtor,\"Service constructor\");\n        return this[servicesProperty][`${serviceCtor.name}`];\n    }\n\n    /**\n     * Checks if a service of the given type exists in application services\n     * @param {Function} serviceCtor\n     * @returns boolean\n     */\n    hasService(serviceCtor) {\n        return this[servicesProperty].hasOwnProperty(`${serviceCtor.name}`);\n    }\n\n\n    /**\n     * Enables application default routing strategy\n     * @returns {HttpApplication2}\n     */\n    useRoutingStrategy() {\n        return this.useStrategy(RoutingStrategy, DefaultRoutingStrategy);\n    }\n\n    /**\n     * Enables application default routing strategy\n     * @returns {HttpApplication2}\n     */\n    useCacheStrategy() {\n        return this.useStrategy(CacheStrategy, DefaultCacheStrategy);\n    }\n\n    /**\n     * Enables application default routing strategy\n     * @returns {HttpApplication2}\n     */\n    useEncryptionStrategy() {\n        return this.useStrategy(EncryptionStrategy, DefaultEncyptionStrategy);\n    }\n\n    /**\n     * Enables application default localization strategy\n     * @returns {HttpApplication2}\n     */\n    useLocalization() {\n        return this.useStrategy(LocalizationStrategy, DefaultLocalizationStrategy);\n    }\n\n    /**\n     * Enables basic authentication\n     * @returns {HttpApplication2}\n     */\n    useBasicAuthentication() {\n        return this.any(new BasicAuthConsumer());\n    }\n\n    /**\n     * Enables application authentication\n     * @returns {HttpApplication2}\n     */\n    useRestrictAccess() {\n        this.useService(RestrictAccessService);\n        return this.any(new RestrictAccessConsumer());\n    }\n\n    /**\n     * Enables application authentication\n     */\n    useAuthentication() {\n        this.useStrategy(EncryptionStrategy, DefaultEncyptionStrategy);\n        return this.any(new AuthConsumer());\n    }\n\n    /**\n     * Enables static content requests\n     * @param {string=} rootDir\n     * @returns {HttpApplication2}\n     */\n    useStaticContent(rootDir) {\n        return this.any(new StaticContentConsumer(rootDir));\n    }\n\n    /**\n     * Enables static content requests\n     * @param {string=} whenDir\n     * @param {string=} rootDir\n     * @returns {HttpApplication2}\n     */\n    whenStaticContent(whenDir, rootDir) {\n        return this.any(new StaticContentConsumer(rootDir, whenDir));\n    }\n\n    /**\n     * Starts the current HTTP application.\n     * @param {HttpApplicationOptions=} options\n     * @return {HttpApplication2}\n     */\n    start(options) {\n        initInternal.call(this);\n        startInternal.call(this);\n        return this;\n    }\n\n    /**\n     * Creates an instance of HttpContext class.\n     * @param {ClientRequest} request\n     * @param {ServerResponse} response\n     * @returns {HttpContext}\n     */\n    createContext(request, response) {\n       return new HttpContext(this, request, response);\n    }\n\n    /**\n     * @returns {HttpApplication2}\n     */\n    static getCurrent() {\n        if (_.isNil(HttpApplication2[currentProperty])) {\n            HttpApplication2[currentProperty] = new HttpApplication2();\n        }\n        return HttpApplication2[currentProperty];\n    }\n\n}"]}