{"version":3,"sources":["app.es6"],"names":["_","async","crypto","Args","TraceUtils","RandomUtils","HttpError","HttpNotFoundError","HttpMethodNotAllowedError","HttpNextResult","HttpResult","HttpAnyResult","AuthConsumer","BasicAuthConsumer","EncryptionStrategy","DefaultEncyptionStrategy","AuthStrategy","RestrictAccessConsumer","RestrictAccessService","HttpConsumer","HttpRouteConsumer","HttpErrorConsumer","StaticContentConsumer","HttpContext","RoutingStrategy","DefaultRoutingStrategy","RouteConsumer","LocalizationStrategy","DefaultLocalizationStrategy","CacheStrategy","DefaultCacheStrategy","DataConfigurationStrategy","DefaultDataConfigurationStrategy","Rx","path","http","https","HttpApplicationService","ViewConsumer","FormatterStrategy","DefaultFormatterStrategy","QuerystringConsumer","HTTP_SERVER_DEFAULT_BIND","HTTP_SERVER_DEFAULT_PORT","startInternal","options","self","opts","bind","process","env","IP","port","PORT","assign","server_","createServer","request","response","context","createContext","Observable","fromNodeCallback","processRequestInternal","subscribe","finalize","end","err","processErrorInternal","res","error","statusCode","status","writeHead","write","message","serverProperty","listen","log","initInternal","str","join","cwd","configProperty","require","code","config","conf","settings","randomHex","callback","consumers","getApplication","consumersProperty","eachSeries","consumer","cb","callable","apply","result","finalRes","isNil","otherWiseConsumer","otherwiseConsumerProperty","isFunction","ReferenceError","execute","intermediateRes","Error","errorConsumers","errorConsumersProperty","length","call","createRequestInternal","opt","IncomingMessage","method","url","httpVersion","headers","host","accept","connection","cookie","cookies","session","params","query","form","body","files","createResponseInternal","req","ServerResponse","currentProperty","Symbol","servicesProperty","executionPathProperty","configPathProperty","HttpApplication","useStrategy","executionPath","notEmpty","resolve","arg","check","isString","getExecutionPath","warn","routes","push","consumerConstructor","findIndex","x","uri","serviceCtor","notFunction","name","strategyCtor","hasOwnProperty","any","useService","rootDir","whenDir","hasService","hasConsumer","fn","account","getService","getUnattendedExecutionAccount","isEmpty","user","authenticationType"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\n'use strict';\nimport {_} from 'lodash';\nimport async from 'async';\nimport crypto from 'crypto';\nimport {Args, TraceUtils, RandomUtils} from '@themost/common/utils';\nimport {HttpError, HttpNotFoundError, HttpMethodNotAllowedError} from '@themost/common/errors';\nimport {HttpNextResult,HttpResult,HttpAnyResult} from './results';\nimport {AuthConsumer, BasicAuthConsumer, EncryptionStrategy, DefaultEncyptionStrategy, AuthStrategy} from './auth';\nimport {RestrictAccessConsumer,RestrictAccessService} from './restrict_access';\nimport {HttpConsumer,HttpRouteConsumer,HttpErrorConsumer} from './consumers';\nimport {StaticContentConsumer} from './static';\nimport {HttpContext} from './context';\nimport {RoutingStrategy,DefaultRoutingStrategy,RouteConsumer} from './route';\nimport {LocalizationStrategy,DefaultLocalizationStrategy} from './localization';\nimport {CacheStrategy,DefaultCacheStrategy} from './cache';\nimport {DataConfigurationStrategy,DefaultDataConfigurationStrategy} from './data';\nimport {Rx} from 'rx';\nimport path from 'path';\nimport http from 'http';\nimport https from 'https';\nimport {HttpApplicationService} from \"./interfaces\";\nimport {ViewConsumer} from \"./view\";\nimport {FormatterStrategy, DefaultFormatterStrategy} from \"./formatters\";\nimport {QuerystringConsumer} from \"./querystring\";\n\nconst HTTP_SERVER_DEFAULT_BIND = '127.0.0.1';\nconst HTTP_SERVER_DEFAULT_PORT = 3000;\n\n/**\n * Starts current application\n * @private\n * @static\n * @param {ApplicationOptions|*} options\n */\nfunction startInternal(options) {\n    /**\n     * @type {HttpApplication|*}\n     */\n    const self = this;\n    try {\n        /**\n         * @memberof process.env\n         * @property {number} PORT\n         * @property {string} IP\n         * @property {string} NODE_ENV\n         */\n        const opts = {\n            bind:(process.env.IP || HTTP_SERVER_DEFAULT_BIND),\n            port:(process.env.PORT ? process.env.PORT: HTTP_SERVER_DEFAULT_PORT)\n        };\n        //extend options\n        _.assign(opts, options);\n\n        const server_ = http.createServer(function (request, response) {\n            const context = self.createContext(request, response);\n            //begin request processing\n            Rx.Observable.fromNodeCallback(processRequestInternal)(context)\n                .subscribe(()=> {\n                    context.finalize(function() {\n                        if (context.response) { context.response.end(); }\n                    });\n            }, (err) => {\n                //process error\n                Rx.Observable.fromNodeCallback(processErrorInternal)(context, err)\n                    .subscribe((res) => {\n                        context.finalize(function() {\n                            if (context.response) { context.response.end(); }\n                        });\n                    }, (err) => {\n                        //an error occurred while handling request error\n                        TraceUtils.error(err);\n                        if (context && context.response) {\n                            if (err instanceof HttpError) {\n                                const statusCode = err.status || 500;\n                                //send a text/plain error (and safely end response)\n                                context.response.writeHead(statusCode, {\"Content-Type\": \"text/plain\"});\n                                context.response.write(statusCode + ' ' + err.message + '\\n');\n                            }\n                            else {\n                                //send a text/plain error (and safely end response)\n                                context.response.writeHead(500, {\"Content-Type\": \"text/plain\"});\n                                context.response.write('500 Internal Server Error\\n');\n                            }\n\n                            if (typeof context.finalize === 'function') {\n                                context.finalize(function() {\n                                    if (context.response) { context.response.end(); }\n                                });\n                            }\n                            else {\n                                if (context.response) { context.response.end(); }\n                            }\n\n                        }\n                    });\n            });\n        });\n        self[serverProperty] = server_;\n        //start listening\n        server_.listen(opts.port, opts.bind);\n        TraceUtils.log('Web application is running at http://%s:%s/', opts.bind, opts.port);\n    } catch (err) {\n        TraceUtils.log(err);\n    }\n}\n\n/**\n * Initializes application\n * @private\n * @static\n * @return {HttpApplication}\n */\nfunction initInternal() {\n\n    /**\n     * @type {HttpApplication|*}\n     */\n    const self = this;\n    /**\n     * Gets or sets application configuration settings\n     */\n        //get node environment\n    const env = process.env['NODE_ENV'] || 'production';\n\n    let str;\n    //first of all try to load environment specific configuration\n    try {\n        TraceUtils.log('Init: Loading environment specific configuration file (app.%s.json)', env);\n        str = path.join(process.cwd(), 'config', 'app.' + env + '.json');\n        /**\n         * @type {HttpApplicationConfig}\n         */\n        self[configProperty] = require(str);\n        TraceUtils.log('Init: Environment specific configuration file (app.%s.json) was succesfully loaded.', env);\n    }\n    catch (err) {\n        if (err.code === 'MODULE_NOT_FOUND') {\n            TraceUtils.log('Init: Environment specific configuration file (app.%s.json) is missing.', env);\n            //try to load default configuration file\n            try {\n                TraceUtils.log('Init: Loading environment default configuration file (app.json)');\n                str = path.join(process.cwd(), 'config', 'app.json');\n                /**\n                 * @type {HttpApplicationConfig}\n                 */\n                self.config = require(str);\n                TraceUtils.log('Init: Default configuration file (app.json) was succesfully loaded.');\n            }\n            catch (err) {\n                if (err.code === 'MODULE_NOT_FOUND') {\n                    TraceUtils.log('Init: An error occured while loading default configuration (app.json). Configuration cannot be found or is inaccesible.');\n                    //load internal configuration file\n                    /**\n                     * @type {HttpApplicationConfig}\n                     */\n                    let conf = require('./resources/app.json');\n                    conf.settings = conf.settings || {};\n                    conf.settings.crypto = {\n                        \"algorithm\": \"aes256\",\n                        \"key\": RandomUtils.randomHex(32)\n                    };\n                    this[configProperty] = conf;\n                    TraceUtils.log('Init: Internal configuration file (app.json) was succesfully loaded.');\n                }\n                else {\n                    TraceUtils.log('Init: An error occured while loading default configuration (app.json)');\n                    throw err;\n                }\n            }\n        }\n        else {\n            TraceUtils.log('Init: An error occured while loading application specific configuration (app).', env);\n            throw err;\n        }\n    }\n}\n/**\n * Processes an HTTP request under current application\n * @private\n * @static\n * @param {HttpContext} context\n * @param {Function} callback\n */\nfunction processRequestInternal(context, callback) {\n    /**\n     * @type {HttpApplication|*}\n     */\n    const self = this,\n        /**\n         * @type {Array}\n         */\n        consumers = context.getApplication()[consumersProperty];\n\n    return async.eachSeries(consumers,\n        /**\n         * @param {HttpConsumer} consumer\n         * @param {Function} cb\n         */\n        function(consumer, cb) {\n        consumer.callable.apply(context).subscribe((result)=> {\n            //if result is an instance of HttpNextResult\n            if (result instanceof HttpNextResult) {\n                //continue series execution (call series callback with no error)\n                return cb();\n            }\n            else if (result instanceof HttpResult) {\n                //continue series execution (call series callback with no error)\n                return cb(result);\n            }\n            //else break series execution and return result\n            return cb(new HttpAnyResult(result));\n        }, err=> {\n            return cb(err);\n        });\n    }, function(finalRes) {\n            if (_.isNil(finalRes)) {\n                //get otherwise consumer\n                const otherWiseConsumer = self[otherwiseConsumerProperty];\n                if (otherWiseConsumer instanceof HttpConsumer) {\n                    if (!_.isFunction(otherWiseConsumer.callable)) {\n                        return callback(new ReferenceError('HTTP consumer callable must be a function.'));\n                    }\n                    return otherWiseConsumer.callable.apply(context).subscribe(result=> {\n                        if (result instanceof HttpNextResult) {\n                            return callback(new HttpNotFoundError());\n                        }\n                        if (result instanceof HttpResult) {\n                            if (typeof finalRes.execute === 'function') {\n                                //execute result\n                                return finalRes.execute(context).subscribe(() => {\n                                    return callback();\n                                }, (err) => {\n                                    return callback(err);\n                                });\n                            }\n                            return callback(null, result);\n                        }\n                        else {\n                            //create an instance of HttpAnyResult class\n                            const intermediateRes = new HttpAnyResult(result);\n                            return intermediateRes.execute(context).subscribe(() => {\n                                callback();\n                            }, (err) => {\n                                return callback(err);\n                            });\n                        }\n                    }, err => {\n                        return callback(err);\n                    });\n                }\n                else {\n                    return callback(new HttpNotFoundError());\n                }\n            }\n            ///////////////////////\n            //Final Execution\n            ///////////////////////\n            //handle error\n            if (finalRes instanceof Error) {\n                return callback(finalRes);\n            }\n            //handle HttpAnyResult\n            else if (finalRes instanceof HttpResult) {\n                if (typeof finalRes.execute === 'function') {\n                    //execute result\n                    return finalRes.execute(context).subscribe(() => {\n                        return callback();\n                    }, (err) => {\n                        return callback(err);\n                    });\n                }\n                return callback(null, result);\n            }\n            //throw exception\n            return callback(new HttpMethodNotAllowedError());\n\n    });\n}\n\n\n/**\n * Processes HTTP errors under current application\n * @param {HttpContext} context\n * @param {Error|*} error\n * @param {Function} callback\n */\nfunction processErrorInternal(context, error, callback) {\n    /**\n     * @type {HttpApplication|*}\n     */\n    const self = this,\n        /**\n         * @type {Array}\n         */\n        errorConsumers = context.getApplication()[errorConsumersProperty];\n        if (errorConsumers.length==0) {\n            return callback(error);\n        }\n    return async.eachSeries(errorConsumers, function(consumer, cb) {\n        consumer.callable.call(context, error).subscribe(result=> {\n            if (result instanceof HttpNextResult) {\n                return cb();\n            }\n            return cb(result);\n        }, err=> {\n            return cb(err);\n        });\n    }, function(err) {\n        return callback(err);\n    });\n}\n\n/**\n * Creates a mock-up server request\n * @private\n * @param {*} options\n */\nfunction createRequestInternal(options) {\n    const opt = options ? options : {};\n    const request = new http.IncomingMessage();\n    request.method = (opt.method) ? opt.method : 'GET';\n    request.url = (opt.url) ? opt.url : '/';\n    request.httpVersion = '1.1';\n    request.headers = (opt.headers) ? opt.headers : {\n            host: 'localhost',\n            'user-agent': 'Mozilla/5.0 (X11; Linux i686; rv:10.0) Gecko/20100101 Firefox/22.0',\n            accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n            'accept-language': 'en-US,en;q=0.5',\n            'accept-encoding': 'gzip, deflate',\n            connection: 'keep-alive',\n            'cache-control': 'max-age=0' };\n    if (opt.cookie)\n        request.headers.cookie = opt.cookie;\n    request.cookies = (opt.cookies) ? opt.cookies : {};\n    request.session = (opt.session) ? opt.session : {};\n    request.params = (opt.params) ? opt.params : {};\n    request.query = (opt.query) ? opt.query : {};\n    request.form = (opt.form) ? opt.form : {};\n    request.body = (opt.body) ? opt.body : {};\n    request.files = (opt.files) ? opt.files : {};\n    return request;\n}\n\n/**\n * Creates a mock-up server response\n * @param {ClientRequest} req\n * @returns {ServerResponse|*}\n * @private\n */\nfunction createResponseInternal(req) {\n    return new http.ServerResponse(req);\n}\n\nconst currentProperty = Symbol('current');\nconst consumersProperty = Symbol('consumers');\nconst errorConsumersProperty = Symbol('errorConsumers');\nconst otherwiseConsumerProperty = Symbol('otherwise');\nconst configProperty = Symbol('config');\nconst serverProperty = Symbol('server');\nconst servicesProperty = Symbol('services');\nconst executionPathProperty = Symbol('executionPath');\nconst configPathProperty = Symbol('configPath');\n\n/**\n * @classdesc Represents an HTTP server application\n * @class\n */\nexport class HttpApplication {\n    /**\n     * @constructor\n     */\n    constructor() {\n        this[consumersProperty] = [];\n        this[errorConsumersProperty] = [];\n        this[servicesProperty] = {};\n        this[executionPathProperty] = process.cwd();\n        this[configPathProperty] = path.join(process.cwd(),'config');\n        this.useStrategy(DataConfigurationStrategy, DefaultDataConfigurationStrategy);\n    }\n\n    /**\n     * Sets the execution path of the current HTTP application\n     * @param {string} executionPath\n     * @return {HttpApplication}\n     */\n    setExecutionPath(executionPath) {\n        Args.notEmpty(executionPath,'Execution Path');\n        this[executionPathProperty] = path.resolve(process.cwd(), executionPath);\n        this[configPathProperty] = path.join(this[executionPathProperty],'config');\n        return this;\n    }\n\n    /**\n     * Gets the execution path of the current HTTP application\n     * @returns {string}\n     */\n    getExecutionPath() {\n        return this[executionPathProperty]\n    }\n\n    /**\n     * Resolves the given path\n     * @param {string} arg\n     */\n    mapExecutionPath(arg) {\n        Args.check(_.isString(arg),'Path must be a string');\n        return path.resolve(this.getExecutionPath(), arg);\n    }\n\n    /**\n     * Gets the configuration path of the current HTTP application\n     * @returns {string}\n     */\n    getConfigurationPath() {\n        return this[configPathProperty]\n    }\n\n    /**\n     * @returns {HttpApplicationConfig|*}\n     */\n    getConfiguration() {\n        if (typeof this[configProperty] === 'undefined') {\n            //load configuration\n            try {\n                const env = process.env['NODE_ENV'] || 'production';\n                this[configProperty] = require(path.join(this[configPathProperty], 'app.' + env + '.json'));\n            }\n            catch(err) {\n                if (err.code === 'MODULE_NOT_FOUND') {\n                    TraceUtils.warn('Data: The environment specific configuration cannot be found or is inaccesible.');\n                    try {\n                        this[configProperty] = require(path.join(this[configPathProperty], 'app.json'));\n                    }\n                    catch(err) {\n                        if (err.code === 'MODULE_NOT_FOUND') {\n                            TraceUtils.warn('Data: The default application configuration cannot be found or is inaccesible.');\n                        }\n                        else {\n                            TraceUtils.error('Data: An error occured while trying to open default application configuration.');\n                            TraceUtils.error(err);\n                        }\n                        this[configProperty] = require('./resources/app.json');\n                    }\n                }\n                else {\n                    TraceUtils.error('Data: An error occured while trying to open application configuration.');\n                    TraceUtils.error(err);\n                    this[configProperty] = require('./resources/app.json');\n                }\n            }\n            try {\n                this[configProperty].routes = require(path.join(this[configPathProperty], 'routes.json'));\n            }\n            catch(err) {\n                if (err.code === 'MODULE_NOT_FOUND') {\n                    TraceUtils.warn('Data: Route configuration cannot be found or is inaccesible.');\n                    this[configProperty].routes = require('./resources/routes.json');\n                }\n                else {\n                    TraceUtils.error('Data: An error occured while trying to open route configuration.');\n                    TraceUtils.error(err);\n                    this[configProperty].routes = require('./resources/routes.json');\n                }\n            }\n        }\n        return this[configProperty];\n    }\n\n    /**\n     * @returns {Server|*}\n     */\n    getServer() {\n        return this[serverProperty];\n    }\n\n    /**\n     * @param {Function|HttpConsumer} consumer\n     * @param {*=} params\n     * @returns HttpApplication\n     */\n    any(consumer, params) {\n        if (consumer instanceof HttpConsumer) {\n            this[consumersProperty].push(consumer);\n        }\n        else {\n            this[consumersProperty].push(new HttpConsumer(consumer, params));\n        }\n        return this;\n    }\n\n    /**\n     * @param {Function} consumerConstructor\n     * @returns {boolean}\n     */\n    hasConsumer(consumerConstructor) {\n        if (typeof consumerConstructor !== 'function') {\n            return false;\n        }\n       return _.findIndex(this[consumersProperty],(x)=> {\n           return x instanceof consumerConstructor;\n       })>=0;\n    }\n\n    /**\n     * @param {Function|HttpErrorConsumer} consumer\n     * @param {*=} params\n     * @returns HttpApplication\n     */\n    error(consumer, params) {\n        if (consumer instanceof HttpErrorConsumer) {\n            this[errorConsumersProperty].push(consumer);\n        }\n        else {\n            this[errorConsumersProperty].push(new HttpErrorConsumer(consumer, params));\n        }\n        return this;\n    }\n\n    /**\n     * @param {string} uri\n     * @param {Function|HttpConsumer} consumer\n     * @param {*=} params\n     * @returns HttpApplication\n     */\n    when(uri, consumer, params) {\n        if (consumer instanceof HttpRouteConsumer) {\n            this[consumersProperty].push(consumer);\n        }\n        else {\n            this[consumersProperty].push(new HttpRouteConsumer(uri,consumer, params));\n        }\n        return this;\n    }\n\n    /**\n     * @param {Function|HttpConsumer} consumer\n     * @param {*=} params\n     * @returns HttpApplication\n     */\n    otherwise(consumer, params) {\n        if ((consumer instanceof HttpConsumer) || (consumer instanceof HttpErrorConsumer)) {\n            this[otherwiseConsumerProperty] = consumer;\n        }\n        else {\n            this[otherwiseConsumerProperty] = new HttpConsumer(consumer, params);\n        }\n        return this;\n    }\n\n    /**\n     * Register a service type in application services\n     * @param {Function} serviceCtor\n     */\n    useService(serviceCtor) {\n        Args.notFunction(serviceCtor,\"Service constructor\");\n        this[servicesProperty][`${serviceCtor.name}`] = new serviceCtor(this);\n    }\n\n    /**\n     * Register a service type in application services\n     * @param {Function} serviceCtor\n     * @param {Function} strategyCtor\n     */\n    useStrategy(serviceCtor, strategyCtor) {\n        Args.notFunction(strategyCtor,\"Service constructor\");\n        Args.notFunction(strategyCtor,\"Strategy constructor\");\n        this[servicesProperty][`${serviceCtor.name}`] = new strategyCtor(this);\n        return this;\n    }\n\n    /**\n     * Register a service type in application services\n     * @param {Function} serviceCtor\n     */\n    getService(serviceCtor) {\n        Args.notFunction(serviceCtor,\"Service constructor\");\n        return this[servicesProperty][`${serviceCtor.name}`];\n    }\n\n    /**\n     * Checks if a service of the given type exists in application services\n     * @param {Function} serviceCtor\n     * @returns boolean\n     */\n    hasService(serviceCtor) {\n        return this[servicesProperty].hasOwnProperty(`${serviceCtor.name}`);\n    }\n\n\n    /**\n     * Enables application default routing strategy\n     * @returns {HttpApplication}\n     */\n    useRoutingStrategy() {\n        return this.useStrategy(RoutingStrategy, DefaultRoutingStrategy);\n    }\n\n    /**\n     * Enables application default routing strategy\n     * @returns {HttpApplication}\n     */\n    useFormatterStrategy() {\n        return this.useStrategy(FormatterStrategy, DefaultFormatterStrategy);\n    }\n\n    /**\n     * Enables application default routing strategy\n     * @returns {HttpApplication}\n     */\n    useCacheStrategy() {\n        return this.useStrategy(CacheStrategy, DefaultCacheStrategy);\n    }\n\n    /**\n     * Enables application default routing strategy\n     * @returns {HttpApplication}\n     */\n    useEncryptionStrategy() {\n        return this.useStrategy(EncryptionStrategy, DefaultEncyptionStrategy);\n    }\n\n    /**\n     * Enables application default localization strategy\n     * @returns {HttpApplication}\n     */\n    useLocalization() {\n        return this.useStrategy(LocalizationStrategy, DefaultLocalizationStrategy);\n    }\n\n    /**\n     * Enables basic authentication\n     * @returns {HttpApplication}\n     */\n    useBasicAuthentication() {\n        return this.any(new BasicAuthConsumer());\n    }\n\n    /**\n     * Enables application authentication\n     * @returns {HttpApplication}\n     */\n    useRestrictAccess() {\n        this.useService(RestrictAccessService);\n        return this.any(new RestrictAccessConsumer());\n    }\n\n    /**\n     * Enables application authentication\n     */\n    useAuthentication() {\n        this.useStrategy(EncryptionStrategy, DefaultEncyptionStrategy);\n        return this.any(new AuthConsumer());\n    }\n\n    /**\n     * Enables static content requests\n     * @param {string=} rootDir\n     * @returns {HttpApplication}\n     */\n    useStaticContent(rootDir) {\n        return this.any(new StaticContentConsumer(rootDir));\n    }\n\n    /**\n     * Enables static content requests\n     * @returns {HttpApplication}\n     */\n    useQuerystring() {\n        return this.any(new QuerystringConsumer());\n    }\n\n    /**\n     * Enables static content requests\n     * @param {string=} whenDir\n     * @param {string=} rootDir\n     * @returns {HttpApplication}\n     */\n    whenStaticContent(whenDir, rootDir) {\n        return this.any(new StaticContentConsumer(rootDir, whenDir));\n    }\n\n    /**\n     * Enables static content requests\n     * @returns {HttpApplication}\n     */\n    useViewContent() {\n        //chekc if application does not have a service of type RoutingStrategy\n        if (!this.hasService(RoutingStrategy))  {\n            this.useStrategy(RoutingStrategy, DefaultRoutingStrategy);\n        }\n        //check if application does not have a consumer of type RouteConsumer\n        if (!this.hasConsumer(RouteConsumer))\n            //and add it\n            this.any(new RouteConsumer());\n        //check if application does not have a consumer of type ViewConsumer\n        if (!this.hasConsumer(ViewConsumer))\n            //and add it\n            return this.any(new ViewConsumer());\n    }\n\n    /**\n     * Starts the current HTTP application.\n     * @param {HttpApplicationOptions=} options\n     * @return {HttpApplication}\n     */\n    start(options) {\n        initInternal.call(this);\n        startInternal.call(this);\n        return this;\n    }\n\n    /**\n     * Creates an instance of HttpContext class.\n     * @param {ClientRequest} request\n     * @param {ServerResponse} response\n     * @returns {HttpContext}\n     */\n    createContext(request, response) {\n       return new HttpContext(this, request, response);\n    }\n\n    /**\n     * @returns {HttpApplication}\n     */\n    static getCurrent() {\n        if (_.isNil(HttpApplication[currentProperty])) {\n            HttpApplication[currentProperty] = new HttpApplication();\n        }\n        return HttpApplication[currentProperty];\n    }\n\n    /**\n     * Creates a new context and executes the given function\n     * @param {Function} fn - A function to execute. The first argument is the current context\n     * @returns {Observable}\n     */\n    execute(fn) {\n        const self = this;\n        return Rx.Observable.fromNodeCallback(function(callback) {\n            //create context\n            const request = createRequestInternal.call(self),\n                response = createResponseInternal.call(self,request);\n            let context = self.createContext(request, response);\n            fn(context).subscribe(()=>{\n                return callback();\n            }, (err) => {\n                return callback(err);\n            });\n        });\n    }\n\n    /**\n     * Creates a new context and executes the given function in unattended mode\n     * @param {Function} fn\n     * @returns {Observable}\n     */\n    executeUnattended(fn) {\n        const self = this;\n        return Rx.Observable.fromNodeCallback(function(callback) {\n            //create context\n            const request = createRequestInternal.call(self),\n                response = createResponseInternal.call(self,request);\n            let context = self.createContext(request, response);\n            //get unattended execution account\n            if (this.hasService(AuthStrategy)) {\n                const account = this.getService(AuthStrategy).getUnattendedExecutionAccount();\n                if (_.isEmpty(account)) {\n                    context.user = { name: account, authenticationType: 'Basic'};\n                }\n            }\n            fn(context).subscribe(()=>{\n                return callback();\n            }, (err) => {\n                return callback(err);\n            });\n        });\n    }\n\n}"]}