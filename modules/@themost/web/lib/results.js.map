{"version":3,"sources":["results.es6"],"names":["Rx","Args","_","FormatterStrategy","HttpMethodNotAllowedError","HttpResult","new","target","TypeError","Observable","return","HttpAnyResult","data","contentType","contentEncoding","context","self","fromNodeCallback","callback","formatterStrategy","getApplication","getService","response","isNil","writeHead","formatter","findFormatter","execute","subscribe","err","HttpNextResult","HttpEndResult","HttpErrorResult","statusCode"],"mappings":"AAAA;;;;;;;;;AACA;;IAAOA,E;;AACP;;IAAQC,I,UAAAA,I;;AACR;;IAAQC,C,WAAAA,C;;AACR;;IAAQC,iB,eAAAA,iB;;AACR;;IAAQC,yB,WAAAA,yB;;;;;;;;;;AACR;;;;IAIaC,U,WAAAA,U;AACT;;;AAGA,0BAAc;AAAA;;AAEV,YAAIC,IAAIC,MAAJ,KAAeF,UAAnB,EAA+B;AAC3B,kBAAM,IAAIG,SAAJ,CAAc,8CAAd,CAAN;AACH;AACJ;;;;uCAEc;AACX,mBAAOR,GAAGS,UAAH,CAAcC,MAAd,CAAqB,IAArB,CAAP;AACH;;;;;;AAIL;;;;;IAGaC,a,WAAAA,a;;;AACT;;;;AAIA,2BAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AAEd,cAAKA,IAAL,GAAYA,IAAZ;AACA,cAAKC,WAAL,GAAmB,WAAnB;AACA,cAAKC,eAAL,GAAuB,MAAvB;AAJc;AAKjB;;AAED;;;;;;;;;;;AASA;;;;;gCAKQC,O,EAAS;AACb,gBAAMC,OAAO,IAAb;AACA,mBAAOhB,GAAGS,UAAH,CAAcQ,gBAAd,CAA+B,UAASC,QAAT,EAAmB;AACrD,oBAAI;AACA;;;AAGA,wBAAMC,oBAAoBJ,QAAQK,cAAR,GAAyBC,UAAzB,CAAoClB,iBAApC,CAA1B;;AACI;;;AAGAmB,+BAAWP,QAAQO,QAJvB;;AAMA,wBAAIpB,EAAEqB,KAAF,CAAQP,KAAKJ,IAAb,CAAJ,EAAwB;AACpBU,iCAASE,SAAT,CAAmB,GAAnB;AACA,+BAAON,UAAP;AACH;;AAED,wBAAIhB,EAAEqB,KAAF,CAAQJ,iBAAR,CAAJ,EAAgC;AAC5B,+BAAOD,SAAS,IAAId,yBAAJ,EAAT,CAAP;AACH;;AAED,wBAAMqB,YAAYN,kBAAkBO,aAAlB,CAAgCX,OAAhC,CAAlB;AACA,wBAAIb,EAAEqB,KAAF,CAAQE,SAAR,CAAJ,EAAwB;AACpB,+BAAOP,SAAS,IAAId,yBAAJ,EAAT,CAAP;AACH;AACD,2BAAOqB,UAAUE,OAAV,CAAkBZ,OAAlB,EAA2BC,KAAKJ,IAAhC,EAAsCgB,SAAtC,CAAgD,YAAI;AACxD,+BAAOV,UAAP;AACF,qBAFM,EAEJ,UAACW,GAAD,EAAS;AACR,+BAAOX,SAASW,GAAT,CAAP;AACH,qBAJM,CAAP;AAKH,iBA5BD,CA6BA,OAAMA,GAAN,EAAW;AACPX,6BAASW,GAAT;AACH;AACJ,aAjCM,GAAP;AAkCH;;;+BA7CajB,I,EAAM;AAChB,mBAAO,IAAID,aAAJ,CAAkBC,IAAlB,CAAP;AACH;;;;EAnB8BP,U;;AAkEnC;;;;;IAGayB,c,WAAAA,c;;;AACT;;;AAGA,8BAAc;AAAA;;AAAA;AAEb;;AAED;;;;;;;;iCAIgB;AACZ,mBAAO,IAAIA,cAAJ,EAAP;AACH;;;;EAd+BzB,U;;AAkBpC;;;;;IAGa0B,a,WAAAA,a;;;AACT;;;AAGA,6BAAc;AAAA;;AAAA;AAEb;;AAED;;;;;;;;iCAIgB;AACZ,mBAAO,IAAIA,aAAJ,EAAP;AACH;;;;EAd8B1B,U;;AAiBnC;;;;;IAGa2B,e,WAAAA,e;;;AACT;;;AAGA,6BAAYC,UAAZ,EAAwB;AAAA;;AAAA;AAEvB;;AAED;;;;;;;;;+BAKcA,U,EAAY;AACtB,mBAAO,IAAID,eAAJ,CAAoBC,UAApB,CAAP;AACH;;;;EAfgC5B,U","file":"results.js","sourcesContent":["'use strict';\nimport Rx from 'rx';\nimport {Args} from '@themost/common/utils';\nimport {_} from 'lodash';\nimport {FormatterStrategy} from \"./formatters\";\nimport {HttpMethodNotAllowedError} from \"@themost/common/errors\";\n/**\n * @class\n * @abstract\n */\nexport class HttpResult {\n    /**\n     * @constructor\n     */\n    constructor() {\n\n        if (new.target === HttpResult) {\n            throw new TypeError(\"Cannot construct abstract instances directly\");\n        }\n    }\n\n    toObservable() {\n        return Rx.Observable.return(this);\n    }\n\n}\n\n/**\n * @class\n */\nexport class HttpAnyResult extends HttpResult {\n    /**\n     * @constructor\n     * @param {*} data\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n        this.contentType = 'text/html';\n        this.contentEncoding = 'utf8';\n    }\n\n    /**\n     * Creates an instance of HTTP next result\n     * @param {*} data\n     * @returns {HttpAnyResult}\n     */\n    static create(data) {\n        return new HttpAnyResult(data);\n    }\n\n    /**\n     * Executes an HttpResult instance against an existing HttpContext.\n     * @param {HttpContext} context\n     * @returns {Observable}\n     * */\n    execute(context) {\n        const self = this;\n        return Rx.Observable.fromNodeCallback(function(callback) {\n            try {\n                /**\n                 * @type {FormatterStrategy}\n                 */\n                const formatterStrategy = context.getApplication().getService(FormatterStrategy),\n                    /**\n                     * @type {ServerResponse}\n                     */\n                    response = context.response;\n\n                if (_.isNil(self.data)) {\n                    response.writeHead(204);\n                    return callback();\n                }\n\n                if (_.isNil(formatterStrategy)) {\n                    return callback(new HttpMethodNotAllowedError());\n                }\n\n                const formatter = formatterStrategy.findFormatter(context);\n                if (_.isNil(formatter)) {\n                    return callback(new HttpMethodNotAllowedError());\n                }\n                return formatter.execute(context, self.data).subscribe(()=>{\n                   return callback();\n                }, (err) => {\n                    return callback(err);\n                });\n            }\n            catch(err) {\n                callback(err);\n            }\n        })();\n    }\n\n}\n\n/**\n * @class\n */\nexport class HttpNextResult extends HttpResult {\n    /**\n     * @constructor\n     */\n    constructor() {\n        super();\n    }\n\n    /**\n     * Creates an instance of HTTP next result\n     * @returns {HttpNextResult}\n     */\n    static create() {\n        return new HttpNextResult();\n    }\n\n}\n\n/**\n * @class\n */\nexport class HttpEndResult extends HttpResult {\n    /**\n     * @constructor\n     */\n    constructor() {\n        super();\n    }\n\n    /**\n     * Creates an instance of HTTP next result\n     * @returns {HttpEndResult}\n     */\n    static create() {\n        return new HttpEndResult();\n    }\n}\n\n/**\n * @class\n */\nexport class HttpErrorResult extends HttpResult {\n    /**\n     * @constructor\n     */\n    constructor(statusCode) {\n        super();\n    }\n\n    /**\n     * Creates an instance of HTTP next result\n     * @param {number} statusCode\n     * @returns {HttpErrorResult}\n     */\n    static create(statusCode) {\n        return new HttpErrorResult(statusCode);\n    }\n}\n"]}