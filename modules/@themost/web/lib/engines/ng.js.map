{"version":3,"sources":["ng.es6"],"names":["fs","HttpNotFoundError","HttpContext","HttpViewEngine","HttpViewContext","DirectiveHandler","NgEngine","context","filename","data","callback","self","readFile","err","str","code","viewContext","getContext","body","directiveHandler","args","target","postExecuteResult"],"mappings":"AAAA;;;;;;;;;AASA;;;;;;;;;;;AAEA;;IAAOA,E;;AACP;;IAAQC,iB,WAAAA,iB;;AACR;;IAAQC,W,YAAAA,W;;AACR;;IAAQC,c,eAAAA,c;;AACR;;IAAQC,e,QAAAA,e;;AACR;;IAAQC,gB,WAAAA,gB;;;;;;;;;;AAER;;;;;;IAMqBC,Q;;;AACjB;;;;AAIA,sBAAYC,OAAZ,EAAqB;AAAA;;AAAA,mHACXA,OADW;AAEpB;;AAED;;;;;;;;;;+BAMOC,Q,EAAUC,I,EAAMC,Q,EAAU;AAC7B,gBAAMC,OAAO,IAAb;AACAX,eAAGY,QAAH,CAAYJ,QAAZ,EAAqB,OAArB,EAA8B,UAASK,GAAT,EAAcC,GAAd,EAAmB;AAC7C,oBAAI;AAAA;AACA,4BAAID,GAAJ,EAAS;AACL,gCAAIA,IAAIE,IAAJ,KAAa,QAAjB,EAA2B;AACvB;AACA;AAAA,uCAAOL,SAAS,IAAIT,iBAAJ,CAAsB,8BAAtB,CAAT;AAAP;AACH;AACD;AAAA,mCAAOS,SAASG,GAAT;AAAP;AACH;AACD,4BAAMG,cAAc,IAAIZ,eAAJ,CAAoBO,KAAKM,UAAL,EAApB,CAApB;AACAD,oCAAYE,IAAZ,GAAmBJ,GAAnB;AACA,4BAAMK,mBAAmB,IAAId,gBAAJ,EAAzB;AACA,4BAAMe,OAAO,EAAEb,SAASI,KAAKM,UAAL,EAAX,EAA8BI,QAAOL,WAArC,EAAb;AACAG,yCAAiBG,iBAAjB,CAAmCF,IAAnC,EAAyC,UAASP,GAAT,EAAc;AACnD,gCAAIA,GAAJ,EAAS;AAAE,uCAAOH,SAASG,GAAT,CAAP;AAAuB;AAClC,mCAAOH,SAAS,IAAT,EAAeM,YAAYE,IAA3B,CAAP;AACH,yBAHD;AAZA;;AAAA;AAiBH,iBAjBD,CAkBA,OAAOL,GAAP,EAAY;AACRH,6BAASG,GAAT;AACH;AACJ,aAtBD;AAuBH;;;;EAxCiCV,c;;kBAAjBG,Q","file":"ng.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\n'use strict';\n\nimport fs from 'fs';\nimport {HttpNotFoundError} from '@themost/common/errors';\nimport {HttpContext} from './../context';\nimport {HttpViewEngine} from \"../interfaces\";\nimport {HttpViewContext} from \"../mvc\";\nimport {DirectiveHandler} from \"../angular/module\";\n\n/**\n * @class\n * @classdesc NgEngine instance implements Angular JS View Engine for Server\n * @property {HttpContext} context\n * @augments {HttpViewEngine}\n */\nexport default class NgEngine extends HttpViewEngine {\n    /**\n     * @constructor\n     * @param {HttpContext} context\n     */\n    constructor(context) {\n        super(context);\n    }\n\n    /**\n     *\n     * @param {string} filename\n     * @param {*=} data\n     * @param {Function} callback\n     */\n    render(filename, data, callback) {\n        const self = this;\n        fs.readFile(filename,'utf-8', function(err, str) {\n            try {\n                if (err) {\n                    if (err.code === 'ENOENT') {\n                        //throw not found exception\n                        return callback(new HttpNotFoundError('View layout cannot be found.'));\n                    }\n                    return callback(err);\n                }\n                const viewContext = new HttpViewContext(self.getContext());\n                viewContext.body = str;\n                const directiveHandler = new DirectiveHandler();\n                const args = { context: self.getContext(), target:viewContext };\n                directiveHandler.postExecuteResult(args, function(err) {\n                    if (err) { return callback(err); }\n                    return callback(null, viewContext.body);\n                });\n\n            }\n            catch (err) {\n                callback(err);\n            }\n        });\n    }\n}"]}