{"version":3,"sources":["ng.es6"],"names":["fs","HttpNotFoundError","HttpContext","NgEngine","context","context_","Object","defineProperty","get","set","value","configurable","enumerable","filename","data","callback","self","readFile","err","str","code","viewContext","HttpViewContext","body","e"],"mappings":"AAAA;;;;;;;;;AASA;;;;;;;;;AAEA;;IAAOA,E;;AACP;;IAAQC,iB,WAAAA,iB;;AACR;;IAAQC,W,YAAAA,W;;;;;;AAER;;;;;;IAMqBC,Q;AACjB;;;;AAIA,sBAAYC,OAAZ,EAAqB;AAAA;;AACjB,YAAIC,WAAWD,OAAf;AACAE,eAAOC,cAAP,CAAsB,IAAtB,EAA2B,SAA3B,EAAsC;AAClCC,iBAAK,eAAW;AACZ,uBAAOH,QAAP;AACH,aAHiC;AAIlCI,iBAAK,aAASC,KAAT,EAAgB;AACjBL,2BAAWK,KAAX;AACH,aANiC;AAOlCC,0BAAa,KAPqB;AAQlCC,wBAAW;AARuB,SAAtC;AAUH;;AAED;;;;;;;;;;+BAMOC,Q,EAAUC,I,EAAMC,Q,EAAU;AAC7B,gBAAMC,OAAO,IAAb;AACAhB,eAAGiB,QAAH,CAAYJ,QAAZ,EAAqB,OAArB,EAA8B,UAASK,GAAT,EAAcC,GAAd,EAAmB;AAC7C,oBAAI;AACA,wBAAID,GAAJ,EAAS;AACL,4BAAIA,IAAIE,IAAJ,KAAa,QAAjB,EAA2B;AACvB;AACA,mCAAOL,SAAS,IAAId,iBAAJ,CAAsB,8BAAtB,CAAT,CAAP;AACH;AACD,+BAAOc,SAASG,GAAT,CAAP;AACH,qBAND,MAOK;AACD,4BAAMG,cAAc,IAAIC,eAAJ,CAAoBN,KAAKZ,OAAzB,CAApB;AACAiB,oCAAYP,IAAZ,GAAmBA,IAAnB;AACAO,oCAAYE,IAAZ,GAAmBJ,GAAnB;AACA,+BAAOJ,SAAS,IAAT,EAAeM,WAAf,CAAP;AACH;AACJ,iBAdD,CAeA,OAAOG,CAAP,EAAU;AACNT,6BAASS,CAAT;AACH;AACJ,aAnBD;AAoBH;;;;;;kBA/CgBrB,Q","file":"ng.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2014, Kyriakos Barbounakis k.barbounakis@gmail.com\n *                     Anthi Oikonomou anthioikonomou@gmail.com\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\n'use strict';\n\nimport fs from 'fs';\nimport {HttpNotFoundError} from '@themost/common/errors';\nimport {HttpContext} from './../context';\n\n/**\n * @class\n * @classdesc NgEngine instance implements Angular JS View Engine for Server\n * @property {HttpContext} context\n * @augments {HttpViewEngine}\n */\nexport default class NgEngine {\n    /**\n     * @constructor\n     * @param {HttpContext} context\n     */\n    constructor(context) {\n        let context_ = context;\n        Object.defineProperty(this,'context', {\n            get: function() {\n                return context_;\n            },\n            set: function(value) {\n                context_ = value;\n            },\n            configurable:false,\n            enumerable:false\n        });\n    }\n\n    /**\n     *\n     * @param {string} filename\n     * @param {*=} data\n     * @param {Function} callback\n     */\n    render(filename, data, callback) {\n        const self = this;\n        fs.readFile(filename,'utf-8', function(err, str) {\n            try {\n                if (err) {\n                    if (err.code === 'ENOENT') {\n                        //throw not found exception\n                        return callback(new HttpNotFoundError('View layout cannot be found.'));\n                    }\n                    return callback(err);\n                }\n                else {\n                    const viewContext = new HttpViewContext(self.context);\n                    viewContext.data = data;\n                    viewContext.body = str;\n                    return callback(null, viewContext);\n                }\n            }\n            catch (e) {\n                callback(e);\n            }\n        });\n    }\n}"]}